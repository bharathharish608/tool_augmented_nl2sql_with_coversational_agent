{"nl": "What is the total amount of catalog returns in 2002 by month?", "paraphrases": ["# Paraphrases of \"What is the total amount of catalog returns in 2002 by month?\"\n\n1. Could you provide a monthly breakdown of the total catalog returns for the year 2002?\n\n2. How much money was returned through catalogs each month during 2002?\n\n3. I need the month-by-month figures for all catalog returns throughout 2002 - what were they?"], "sql": "SELECT d.d_month, SUM(cr.cr_return_amount) as total_returns\nFROM catalog_returns cr\nJOIN date_dim d ON cr.cr_returned_date_sk = d.d_date_sk\nWHERE d.d_year = 2002\nGROUP BY d.d_month\nORDER BY d.d_month", "tables": ["catalog_returns", "date_dim"], "columns": [], "business_intent": "To analyze the monthly pattern of catalog returns throughout 2002, which helps identify seasonal trends in product returns and understand financial impacts across different months of the year.", "complexity": "medium", "alternatives": ["We could also use d_month_seq instead of d_month for sorting chronologically, or include additional aggregations like average return amount or count of returns to provide more context."], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What is the total amount of catalog returns in 2002 by month?", "sql": "SELECT dummy_col, d.d_month, SUM(cr.cr_return_amount) as total_returns\nFROM catalog_returns cr\nJOIN date_dim d ON cr.cr_returned_date_sk = d.d_date_sk\nWHERE d.d_year = 2002\nGROUP BY d.d_month\nORDER BY d.d_month", "label": 0, "tables": ["catalog_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the different types of shipping modes available in our business?", "paraphrases": ["# Paraphrases of \"What are the different types of shipping modes available in our business?\"\n\n1. Which shipping methods can customers use when ordering from our company?\n\n2. Could you list all the transportation options we offer for delivering products to our clients?\n\n3. What variety of delivery modes does our business currently provide to ship merchandise?"], "sql": "SELECT DISTINCT sm_type FROM ship_mode ORDER BY sm_type;", "tables": ["ship_mode"], "columns": ["ship_mode.sm_type"], "business_intent": "To understand the variety of shipping method types available in the business, which helps in analyzing shipping options, planning logistics, and potentially identifying gaps in the current shipping portfolio.", "complexity": "easy", "alternatives": ["SELECT sm_type FROM ship_mode GROUP BY sm_type ORDER BY sm_type;", "SELECT sm_type, COUNT(*) as count FROM ship_mode GROUP BY sm_type ORDER BY sm_type;"], "sql_features": ["order_by"], "label": 1}
{"nl": "What are the different types of shipping modes available in our business?", "sql": "SELECT d.d_month, SUM(cr.cr_return_amount) as total_returns\nFROM catalog_returns cr\nJOIN date_dim d ON cr.cr_returned_date_sk = d.d_date_sk\nWHERE d.d_year = 2002\nGROUP BY d.d_month\nORDER BY d.d_month", "label": 0, "tables": ["catalog_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the different types of shipping modes available in our business?", "sql": "SELECT DISTINCT dummy_col, sm_type FROM ship_mode ORDER BY sm_type;", "label": 0, "tables": ["ship_mode"], "columns": ["ship_mode.sm_type"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What are the names and descriptions of items that have been promoted with both direct mail and email campaigns?", "paraphrases": ["Here are 3 paraphrased versions of the original question:\n\n1. Which products or items have been marketed through both direct mail promotions and email campaigns, and what are their descriptions?\n\n2. Can you provide the names and descriptions of merchandise that has been advertised using both email marketing and direct mail strategies?\n\n3. List the items that have received promotional support through both direct postal mail and electronic mail campaigns, along with their detailed descriptions."], "sql": "SELECT DISTINCT i.i_item_id, i.i_product_name, i.i_item_desc FROM item i JOIN promotion p ON i.i_item_sk = p.p_item_sk WHERE p.p_channel_email = 1 AND p.p_channel_dmail = 1", "tables": ["promotion", "item"], "columns": [], "business_intent": "To identify products that have been targeted with multiple marketing channels, specifically both email and direct mail campaigns. This information can help marketing teams understand cross-channel promotion strategies and potentially analyze which products are receiving the most diverse marketing attention.", "complexity": "medium", "alternatives": ["We could extend this analysis by including promotion details like promotion name or dates to see when these multi-channel promotions occurred", "Another approach would be to count how many different channels were used for each product and filter for those with multiple channels, rather than specifically direct mail and email"], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What are the names and descriptions of items that have been promoted with both direct mail and email campaigns?", "sql": "SELECT d.d_month, SUM(cr.cr_return_amount) as total_returns\nFROM catalog_returns cr\nJOIN date_dim d ON cr.cr_returned_date_sk = d.d_date_sk\nWHERE d.d_year = 2002\nGROUP BY d.d_month\nORDER BY d.d_month", "label": 0, "tables": ["catalog_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the names and descriptions of items that have been promoted with both direct mail and email campaigns?", "sql": "SELECT DISTINCT dummy_col, i.i_item_id, i.i_product_name, i.i_item_desc FROM item i JOIN promotion p ON i.i_item_sk = p.p_item_sk WHERE p.p_channel_email = 1 AND p.p_channel_dmail = 1", "label": 0, "tables": ["promotion", "item"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the total amount of web sales and web returns for each month in the year?", "paraphrases": ["# Paraphrases of the Question\n\n1. For each month throughout the year, what are the combined figures for web-based sales and returns?\n\n2. Could you provide a monthly breakdown of the aggregate web sales and web returns values for the entire year?\n\n3. How much do web sales and web returns total when analyzed on a month-by-month basis across the year?"], "sql": "SELECT d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "business_intent": "To understand the monthly pattern of web sales income versus returns losses, which helps in identifying seasonal trends, assessing the financial impact of returns, and planning inventory and sales strategies accordingly.", "complexity": "medium", "alternatives": ["We could alternatively calculate the return rate by dividing returns by sales for each month, or focus on specific product categories by joining with the item table."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the total amount of web sales and web returns for each month in the year?", "sql": "SELECT DISTINCT dummy_col, i.i_item_id, i.i_product_name, i.i_item_desc FROM item i JOIN promotion p ON i.i_item_sk = p.p_item_sk WHERE p.p_channel_email = 1 AND p.p_channel_dmail = 1", "label": 0, "tables": ["promotion", "item"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the total amount of web sales and web returns for each month in the year?", "sql": "SELECT dummy_col, d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "label": 0, "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "How many customer addresses are there in each state?", "paraphrases": ["# Paraphrases of \"How many customer addresses are there in each state?\"\n\n1. What is the count of customer addresses distributed across different states?\n\n2. For each state, what is the total number of customer addresses recorded?\n\n3. Could you provide a breakdown of customer address quantities by state?"], "sql": "SELECT ca_state, COUNT(*) as address_count FROM customer_address GROUP BY ca_state ORDER BY address_count DESC", "tables": ["customer_address"], "columns": ["customer_address.ca_state"], "business_intent": "To understand the geographic distribution of customers across different states, which can inform regional marketing strategies, logistics planning, and market penetration analysis.", "complexity": "easy", "alternatives": ["The query could also filter for non-null states using 'WHERE ca_state IS NOT NULL' if there's a possibility of missing state data.", "For more detailed geographic analysis, the query could be extended to include grouping by city or county within each state."], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "How many customer addresses are there in each state?", "sql": "SELECT dummy_col, d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "label": 0, "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "How many customer addresses are there in each state?", "sql": "SELECT dummy_col, ca_state, COUNT(*) as address_count FROM customer_address GROUP BY ca_state ORDER BY address_count DESC", "label": 0, "tables": ["customer_address"], "columns": ["customer_address.ca_state"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What web pages were created after January 1, 2022?", "paraphrases": ["# Paraphrases of \"What web pages were created after January 1, 2022?\"\n\n1. Which websites have been established since the beginning of 2022?\n\n2. Can you identify any web pages that came into existence following January 1, 2022?\n\n3. What internet sites were launched or developed after the first day of 2022?"], "sql": "SELECT wp.wp_web_page_id, wp.wp_creation_date_sk, d.d_date\nFROM web_page wp\nJOIN date_dim d ON wp.wp_creation_date_sk = d.d_date_sk\nWHERE d.d_date > '2022-01-01'\nORDER BY d.d_date;", "tables": ["web_page", "date_dim"], "columns": [], "business_intent": "To identify web pages created after a specific date, which helps track new content creation, analyze growth patterns, and understand recent web development activities. This information could be used by content managers, web administrators, or business analysts monitoring digital asset expansion.", "complexity": "medium", "alternatives": ["Instead of joining with date_dim, we could filter directly on wp_creation_date_sk if we knew the corresponding surrogate key value for January 1, 2022. Alternatively, we could use wp_rec_start_date for filtering if that represents when the page record became valid."], "sql_features": ["join", "filter", "order_by"], "label": 1}
{"nl": "What web pages were created after January 1, 2022?", "sql": "SELECT dummy_col, ca_state, COUNT(*) as address_count FROM customer_address GROUP BY ca_state ORDER BY address_count DESC", "label": 0, "tables": ["customer_address"], "columns": ["customer_address.ca_state"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What web pages were created after January 1, 2022?", "sql": "SELECT dummy_col, wp.wp_web_page_id, wp.wp_creation_date_sk, d.d_date\nFROM web_page wp\nJOIN date_dim d ON wp.wp_creation_date_sk = d.d_date_sk\nWHERE d.d_date > '2022-01-01'\nORDER BY d.d_date;", "label": 0, "tables": ["web_page", "date_dim"], "columns": [], "sql_features": ["join", "filter", "order_by"], "complexity": "hard"}
{"nl": "How many customers have birthdays in each month?", "paraphrases": ["# Paraphrases of \"How many customers have birthdays in each month?\"\n\n1. What is the monthly distribution of customer birthdays?\n\n2. Could you provide a breakdown of the number of customers whose birthdays fall in each month?\n\n3. For every month of the year, how many of our customers were born during that time?"], "sql": "SELECT c_birth_month, COUNT(*) as customer_count FROM customer GROUP BY c_birth_month ORDER BY c_birth_month", "tables": ["customer"], "columns": ["customer.c_birth_month"], "business_intent": "To analyze the distribution of customer birthdays across different months, which could be useful for planning birthday promotions, seasonal marketing campaigns, or understanding demographic patterns in the customer base.", "complexity": "easy", "alternatives": ["SELECT EXTRACT(MONTH FROM TO_DATE(c_birth_month::text, 'MM')) as month_name, COUNT(*) as customer_count FROM customer GROUP BY c_birth_month ORDER BY c_birth_month", "SELECT c_birth_month, COUNT(*) as customer_count, ROUND(COUNT(*) * 100.0 / SUM(COUNT(*)) OVER(), 2) as percentage FROM customer GROUP BY c_birth_month ORDER BY c_birth_month"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "How many customers have birthdays in each month?", "sql": "SELECT dummy_col, d.d_month, SUM(cr.cr_return_amount) as total_returns\nFROM catalog_returns cr\nJOIN date_dim d ON cr.cr_returned_date_sk = d.d_date_sk\nWHERE d.d_year = 2002\nGROUP BY d.d_month\nORDER BY d.d_month", "label": 0, "tables": ["catalog_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "How many customers have birthdays in each month?", "sql": "SELECT dummy_col, c_birth_month, COUNT(*) as customer_count FROM customer GROUP BY c_birth_month ORDER BY c_birth_month", "label": 0, "tables": ["customer"], "columns": ["customer.c_birth_month"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "Which call centers have been closed, and what were their names?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. What were the names of the call centers that have been shut down?\n\n2. Can you identify which customer service facilities were closed and provide their specific names?\n\n3. Which telephone support centers are no longer operational, and what were they called?"], "sql": "SELECT cc_name, cc_closed_date_sk FROM call_center WHERE cc_closed_date_sk IS NOT NULL", "tables": ["call_center"], "columns": ["call_center.cc_closed_date_sk", "call_center.cc_name"], "business_intent": "To identify call centers that have been closed, which helps in analyzing facility consolidation, operational changes, or business restructuring. This information can be valuable for historical analysis, resource allocation planning, and understanding organizational changes over time.", "complexity": "easy", "alternatives": ["Another approach could be to check records where cc_rec_end_date is not null, as this might also indicate closed facilities: SELECT cc_name, cc_rec_end_date FROM call_center WHERE cc_rec_end_date IS NOT NULL"], "sql_features": ["filter"], "label": 1}
{"nl": "Which call centers have been closed, and what were their names?", "sql": "SELECT d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "label": 0, "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "Which call centers have been closed, and what were their names?", "sql": "SELECT dummy_col, cc_name, cc_closed_date_sk FROM call_center WHERE cc_closed_date_sk IS NOT NULL", "label": 0, "tables": ["call_center"], "columns": ["call_center.cc_closed_date_sk", "call_center.cc_name"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What is the total square footage of all warehouses?", "paraphrases": ["# Paraphrases of \"What is the total square footage of all warehouses?\"\n\n1. What is the combined square footage across all warehouse facilities?\n\n2. How many square feet do all warehouses occupy in total?\n\n3. What's the aggregate area, measured in square feet, of the entire warehouse inventory?"], "sql": "SELECT SUM(w_warehouse_sq_ft) FROM warehouse", "tables": ["warehouse"], "columns": ["warehouse.w_warehouse_sq_ft"], "business_intent": "To understand the total physical capacity of all warehouse facilities in the company, which helps with capacity planning, asset management, and resource allocation.", "complexity": "easy", "alternatives": ["SELECT SUM(w_warehouse_sq_ft) AS total_square_footage FROM warehouse", "SELECT COUNT(*) AS warehouse_count, SUM(w_warehouse_sq_ft) AS total_square_footage FROM warehouse"], "sql_features": [], "label": 1}
{"nl": "What is the total square footage of all warehouses?", "sql": "SELECT d.d_month, SUM(cr.cr_return_amount) as total_returns\nFROM catalog_returns cr\nJOIN date_dim d ON cr.cr_returned_date_sk = d.d_date_sk\nWHERE d.d_year = 2002\nGROUP BY d.d_month\nORDER BY d.d_month", "label": 0, "tables": ["catalog_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total square footage of all warehouses?", "sql": "SELECT dummy_col, SUM(w_warehouse_sq_ft) FROM warehouse", "label": 0, "tables": ["warehouse"], "columns": ["warehouse.w_warehouse_sq_ft"], "sql_features": [], "complexity": "easy"}
{"nl": "What is the total revenue from catalog sales per state?", "paraphrases": ["# Paraphrases of \"What is the total revenue from catalog sales per state?\"\n\n1. How much revenue did each state generate from catalog sales in total?\n\n2. Can you break down the aggregate catalog sales revenue by state?\n\n3. What are the state-by-state totals for revenue derived from catalog purchases?"], "sql": "SELECT s_state, SUM(cs_net_paid) as total_revenue FROM catalog_sales JOIN store ON cs_bill_customer_sk = s_store_sk GROUP BY s_state ORDER BY total_revenue DESC", "tables": ["catalog_sales", "store"], "columns": [], "business_intent": "To analyze the geographic distribution of catalog sales revenue across different states, helping to identify high-performing and underperforming regions for strategic planning and resource allocation.", "complexity": "medium", "alternatives": ["Could calculate the revenue using different metrics like cs_net_paid_inc_tax or cs_net_profit instead of cs_net_paid to get different perspectives on revenue performance."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the total revenue from catalog sales per state?", "sql": "SELECT cc_name, cc_closed_date_sk FROM call_center WHERE cc_closed_date_sk IS NOT NULL", "label": 0, "tables": ["call_center"], "columns": ["call_center.cc_closed_date_sk", "call_center.cc_name"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What is the total revenue from catalog sales per state?", "sql": "SELECT dummy_col, s_state, SUM(cs_net_paid) as total_revenue FROM catalog_sales JOIN store ON cs_bill_customer_sk = s_store_sk GROUP BY s_state ORDER BY total_revenue DESC", "label": 0, "tables": ["catalog_sales", "store"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average sales amount for items sold between 2 PM and 4 PM?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. What is the mean transaction value for products purchased during the hours of 2 PM and 4 PM?\n\n2. Between 2 PM and 4 PM, what was the typical sales figure per item sold?\n\n3. For merchandise sold in the 2 PM to 4 PM timeframe, what is the average monetary value?"], "sql": "SELECT AVG(ss_sales_price) as avg_sales_amount FROM store_sales JOIN time_dim ON ss_sold_time_sk = t_time_sk WHERE t_hour >= 14 AND t_hour < 16", "tables": ["time_dim", "store_sales"], "columns": [], "business_intent": "To analyze purchasing patterns and average transaction values during specific afternoon hours, which can help optimize pricing strategies, staffing, or promotional activities during this time period.", "complexity": "medium", "alternatives": ["The analysis could be extended by grouping by specific hours or adding filters for specific days of the week to identify more granular time-based sales patterns."], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What is the average sales amount for items sold between 2 PM and 4 PM?", "sql": "SELECT dummy_col, d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "label": 0, "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average sales amount for items sold between 2 PM and 4 PM?", "sql": "SELECT dummy_col, AVG(ss_sales_price) as avg_sales_amount FROM store_sales JOIN time_dim ON ss_sold_time_sk = t_time_sk WHERE t_hour >= 14 AND t_hour < 16", "label": 0, "tables": ["time_dim", "store_sales"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "Which departments have the most catalog pages?", "paraphrases": ["Paraphrases of \"Which departments have the most catalog pages?\":\n\n1. What sections of the catalog contain the highest number of pages?\n\n2. In terms of page count, which departments are the largest in the catalog?\n\n3. Which areas or categories in the catalog occupy the greatest number of pages?"], "sql": "SELECT cp_department, COUNT(*) AS page_count FROM catalog_page GROUP BY cp_department ORDER BY page_count DESC", "tables": ["catalog_page"], "columns": ["catalog_page.cp_department"], "business_intent": "To identify which departments produce the most catalog content, which helps understand resource allocation, marketing focus, and department activity in catalog production. This information can guide decisions about catalog distribution strategy and content planning.", "complexity": "easy", "alternatives": ["SELECT cp_department, COUNT(cp_catalog_page_sk) AS page_count FROM catalog_page GROUP BY cp_department ORDER BY page_count DESC", "SELECT cp_department, COUNT(DISTINCT cp_catalog_page_id) AS unique_page_count FROM catalog_page GROUP BY cp_department ORDER BY unique_page_count DESC"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "Which departments have the most catalog pages?", "sql": "SELECT ca_state, COUNT(*) as address_count FROM customer_address GROUP BY ca_state ORDER BY address_count DESC", "label": 0, "tables": ["customer_address"], "columns": ["customer_address.ca_state"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "Which departments have the most catalog pages?", "sql": "SELECT dummy_col, cp_department, COUNT(*) AS page_count FROM catalog_page GROUP BY cp_department ORDER BY page_count DESC", "label": 0, "tables": ["catalog_page"], "columns": ["catalog_page.cp_department"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the distribution of returned items across different income bands?", "paraphrases": ["# Paraphrases of \"What is the distribution of returned items across different income bands?\"\n\n1. How are product returns distributed among various income categories?\n\n2. Across the spectrum of income levels, what pattern can we observe in item returns?\n\n3. In what way do returned merchandise statistics vary between different customer income brackets?"], "sql": "SELECT ib.ib_lower_bound, ib.ib_upper_bound, COUNT(sr.sr_item_sk) as return_count FROM store_returns sr JOIN customer c ON sr.sr_customer_sk = c.c_customer_sk JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk JOIN income_band ib ON cd.cd_income_band_sk = ib.ib_income_band_sk GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound", "tables": ["store_returns", "income_band", "customer", "customer_demographics"], "columns": [], "business_intent": "To analyze the relationship between customer income levels and return behaviors. This analysis helps identify if certain income segments have higher return rates, which could inform targeted retention strategies or product quality improvements for specific customer segments.", "complexity": "medium", "alternatives": ["We could also analyze the total dollar amount of returns by income band instead of just count, or examine specific product categories and their return rates across income bands."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of returned items across different income bands?", "sql": "SELECT DISTINCT dummy_col, i.i_item_id, i.i_product_name, i.i_item_desc FROM item i JOIN promotion p ON i.i_item_sk = p.p_item_sk WHERE p.p_channel_email = 1 AND p.p_channel_dmail = 1", "label": 0, "tables": ["promotion", "item"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the distribution of returned items across different income bands?", "sql": "SELECT dummy_col, ib.ib_lower_bound, ib.ib_upper_bound, COUNT(sr.sr_item_sk) as return_count FROM store_returns sr JOIN customer c ON sr.sr_customer_sk = c.c_customer_sk JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk JOIN income_band ib ON cd.cd_income_band_sk = ib.ib_income_band_sk GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound", "label": 0, "tables": ["store_returns", "income_band", "customer", "customer_demographics"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of household vehicle counts by buying potential classification?", "paraphrases": ["# Paraphrased Versions\n\n1. How are households with varying purchasing power distributed according to the number of vehicles they own?\n\n2. Based on consumer buying capacity categories, what is the breakdown of how many vehicles households possess?\n\n3. What patterns emerge when examining the number of cars per household across different economic purchasing potential segments?"], "sql": "SELECT hd_buy_potential, hd_vehicle_count, COUNT(*) as household_count FROM household_demographics GROUP BY hd_buy_potential, hd_vehicle_count ORDER BY hd_buy_potential, hd_vehicle_count", "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential", "household_demographics.hd_vehicle_count"], "business_intent": "This query helps analyze consumer behavior patterns by examining how vehicle ownership relates to purchasing potential. Marketing teams can use this information to target households based on their buying capacity and transportation assets, enabling more refined market segmentation and campaign planning.", "complexity": "medium", "alternatives": ["An alternative approach could be to first classify vehicle counts into ranges and then analyze the distribution across buying potential categories using CASE statements to create meaningful groupings of the data."], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of household vehicle counts by buying potential classification?", "sql": "SELECT d.d_month, SUM(cr.cr_return_amount) as total_returns\nFROM catalog_returns cr\nJOIN date_dim d ON cr.cr_returned_date_sk = d.d_date_sk\nWHERE d.d_year = 2002\nGROUP BY d.d_month\nORDER BY d.d_month", "label": 0, "tables": ["catalog_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of household vehicle counts by buying potential classification?", "sql": "SELECT dummy_col, hd_buy_potential, hd_vehicle_count, COUNT(*) as household_count FROM household_demographics GROUP BY hd_buy_potential, hd_vehicle_count ORDER BY hd_buy_potential, hd_vehicle_count", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential", "household_demographics.hd_vehicle_count"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What are the total inventory quantities by warehouse for items that have more than 500 units on hand?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. For inventory items exceeding 500 units in stock, how are the total quantities distributed across each warehouse?\n\n2. Can you provide a breakdown of warehouse inventory totals, specifically for products with on-hand quantities greater than 500 units?\n\n3. Which warehouses contain what quantities of items that maintain stock levels above 500 units, and what are their total inventory counts?"], "sql": "SELECT inv_warehouse_sk, SUM(inv_quantity_on_hand) as total_quantity FROM inventory WHERE inv_quantity_on_hand > 500 GROUP BY inv_warehouse_sk ORDER BY total_quantity DESC;", "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand", "inventory.inv_warehouse_sk"], "business_intent": "To identify warehouses with substantial inventory levels, which helps in resource allocation, inventory management decisions, and identifying potential overstocking situations. This analysis can inform logistics planning and warehouse capacity utilization strategies.", "complexity": "medium", "alternatives": ["Another approach could be to first find the average quantity per warehouse and then filter for those above a threshold, such as: SELECT inv_warehouse_sk, AVG(inv_quantity_on_hand) as avg_quantity FROM inventory GROUP BY inv_warehouse_sk HAVING AVG(inv_quantity_on_hand) > 500;"], "sql_features": ["filter", "group_by", "order_by"], "label": 1}
{"nl": "What are the total inventory quantities by warehouse for items that have more than 500 units on hand?", "sql": "SELECT d.d_month, SUM(cr.cr_return_amount) as total_returns\nFROM catalog_returns cr\nJOIN date_dim d ON cr.cr_returned_date_sk = d.d_date_sk\nWHERE d.d_year = 2002\nGROUP BY d.d_month\nORDER BY d.d_month", "label": 0, "tables": ["catalog_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the total inventory quantities by warehouse for items that have more than 500 units on hand?", "sql": "SELECT dummy_col, inv_warehouse_sk, SUM(inv_quantity_on_hand) as total_quantity FROM inventory WHERE inv_quantity_on_hand > 500 GROUP BY inv_warehouse_sk ORDER BY total_quantity DESC;", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand", "inventory.inv_warehouse_sk"], "sql_features": ["filter", "group_by", "order_by"], "complexity": "medium"}
{"nl": "List all the reasons stored in the reason table.", "paraphrases": ["# Paraphrases of \"List all the reasons stored in the reason table.\"\n\n1. Display all entries contained in the reason table.\n\n2. Show the complete set of reasons that are maintained in the reason table.\n\n3. Retrieve and present all records from the table designated for storing reasons."], "sql": "SELECT r_reason_sk, r_reason_id, r_reason_desc FROM reason;", "tables": ["reason"], "columns": ["reason.r_reason_sk", "reason.r_reason_id", "reason.r_reason_desc"], "business_intent": "To obtain a complete list of all reason codes and their descriptions from the reference dimension table. This information helps understand the various reason categories used throughout the data warehouse for analytical purposes.", "complexity": "easy", "alternatives": ["SELECT * FROM reason ORDER BY r_reason_sk;", "SELECT r_reason_id, r_reason_desc FROM reason;"], "sql_features": [], "label": 1}
{"nl": "List all the reasons stored in the reason table.", "sql": "SELECT hd_buy_potential, hd_vehicle_count, COUNT(*) as household_count FROM household_demographics GROUP BY hd_buy_potential, hd_vehicle_count ORDER BY hd_buy_potential, hd_vehicle_count", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential", "household_demographics.hd_vehicle_count"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "List all the reasons stored in the reason table.", "sql": "SELECT dummy_col, r_reason_sk, r_reason_id, r_reason_desc FROM reason;", "label": 0, "tables": ["reason"], "columns": ["reason.r_reason_sk", "reason.r_reason_id", "reason.r_reason_desc"], "sql_features": [], "complexity": "easy"}
{"nl": "What are the names of all websites in the database?", "paraphrases": ["# Paraphrases of \"What are the names of all websites in the database?\"\n\n1. Could you provide a complete list of website names stored in the database?\n\n2. I need to see all website titles that exist within the database. What are they?\n\n3. Please display the full inventory of website names contained in your database system."], "sql": "SELECT web_name FROM web_site;", "tables": ["web_site"], "columns": ["web_site.web_name"], "business_intent": "To obtain a comprehensive list of all website names for inventory purposes, reporting, or to understand the complete collection of web properties the company manages.", "complexity": "easy", "alternatives": ["SELECT web_site_id, web_name FROM web_site;", "SELECT web_name FROM web_site ORDER BY web_name;"], "sql_features": [], "label": 1}
{"nl": "What are the names of all websites in the database?", "sql": "SELECT d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "label": 0, "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the names of all websites in the database?", "sql": "SELECT dummy_col, web_name FROM web_site;", "label": 0, "tables": ["web_site"], "columns": ["web_site.web_name"], "sql_features": [], "complexity": "easy"}
{"nl": "What are the top 5 most recent promotions that have a cost greater than $1000?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Could you list the 5 newest promotions that exceed $1000 in cost?\n\n2. What are the five most recently launched promotional campaigns with costs surpassing $1000?\n\n3. Please identify the five latest promotions whose expenditure is more than $1000."], "sql": "SELECT p_promo_id, p_promo_name, p_cost, p_end_date_sk \nFROM promotion \nWHERE p_cost > 1000 \nORDER BY p_end_date_sk DESC \nLIMIT 5;", "tables": ["promotion"], "columns": ["promotion.p_end_date_sk", "promotion.p_promo_id", "promotion.p_cost", "promotion.p_promo_name"], "business_intent": "To identify the most recent high-cost promotional campaigns, which helps marketing teams analyze their recent significant investments and potentially evaluate their effectiveness. This information can guide future budget allocation and marketing strategy decisions.", "complexity": "easy", "alternatives": ["The query could also use p_start_date_sk instead of p_end_date_sk to determine recency, depending on the business definition of a 'recent' promotion.", "We could join with a date dimension table (if available) to show actual calendar dates instead of surrogate keys for better readability."], "sql_features": ["filter", "order_by"], "label": 1}
{"nl": "What are the top 5 most recent promotions that have a cost greater than $1000?", "sql": "SELECT dummy_col, c_birth_month, COUNT(*) as customer_count FROM customer GROUP BY c_birth_month ORDER BY c_birth_month", "label": 0, "tables": ["customer"], "columns": ["customer.c_birth_month"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What are the top 5 most recent promotions that have a cost greater than $1000?", "sql": "SELECT dummy_col, p_promo_id, p_promo_name, p_cost, p_end_date_sk \nFROM promotion \nWHERE p_cost > 1000 \nORDER BY p_end_date_sk DESC \nLIMIT 5;", "label": 0, "tables": ["promotion"], "columns": ["promotion.p_promo_id", "promotion.p_cost", "promotion.p_end_date_sk", "promotion.p_promo_name"], "sql_features": ["filter", "order_by"], "complexity": "easy"}
{"nl": "What is the average income band lower bound for all income bands?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. What is the mean of the minimum values across all income brackets?\n\n2. Across the complete set of income bands, what is the average of their lower limits?\n\n3. If you take all income categories and find their starting points, what would be the average of these minimum thresholds?"], "sql": "SELECT AVG(ib_lower_bound) FROM income_band", "tables": ["income_band"], "columns": ["income_band.ib_lower_bound"], "business_intent": "To understand the central tendency of income segment starting points, which helps in analyzing the distribution of income bands and can inform customer segmentation strategies or marketing initiatives targeting specific income demographics.", "complexity": "easy", "alternatives": ["SELECT SUM(ib_lower_bound)/COUNT(*) FROM income_band", "SELECT ib_lower_bound FROM income_band ORDER BY ib_lower_bound OFFSET (SELECT COUNT(*)/2 FROM income_band) ROWS FETCH FIRST 1 ROW ONLY -- for median instead of mean"], "sql_features": [], "label": 1}
{"nl": "What is the average income band lower bound for all income bands?", "sql": "SELECT d.d_month, SUM(cr.cr_return_amount) as total_returns\nFROM catalog_returns cr\nJOIN date_dim d ON cr.cr_returned_date_sk = d.d_date_sk\nWHERE d.d_year = 2002\nGROUP BY d.d_month\nORDER BY d.d_month", "label": 0, "tables": ["catalog_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average income band lower bound for all income bands?", "sql": "SELECT dummy_col, AVG(ib_lower_bound) FROM income_band", "label": 0, "tables": ["income_band"], "columns": ["income_band.ib_lower_bound"], "sql_features": [], "complexity": "easy"}
{"nl": "What is the average quantity of items on hand across all warehouses?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Across all warehouses, what is the mean number of items currently in inventory?\n\n2. What quantity of items do warehouses have on hand on average?\n\n3. If you calculated the typical inventory level across all warehouse locations, what would the average item count be?"], "sql": "SELECT AVG(inv_quantity_on_hand) AS avg_quantity FROM inventory", "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "business_intent": "To understand the overall inventory levels across the business, which helps in inventory management, planning, and identifying potential overstock or understock situations company-wide.", "complexity": "easy", "alternatives": ["SELECT AVG(inv_quantity_on_hand) AS avg_quantity, COUNT(*) AS total_inventory_records FROM inventory", "SELECT AVG(CAST(inv_quantity_on_hand AS FLOAT)) AS avg_quantity FROM inventory"], "sql_features": [], "label": 1}
{"nl": "What is the average quantity of items on hand across all warehouses?", "sql": "SELECT dummy_col, d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "label": 0, "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average quantity of items on hand across all warehouses?", "sql": "SELECT dummy_col, AVG(inv_quantity_on_hand) AS avg_quantity FROM inventory", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "sql_features": [], "complexity": "easy"}
{"nl": "How many catalog pages were active between January and June 2002 for each department?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. For each department, what was the count of active catalog pages during the period from January through June 2002?\n\n2. Could you provide the number of catalog pages that remained active in each department between the first and sixth months of 2002?\n\n3. What is the department-wise breakdown of active catalog pages for the first half of 2002 (January-June)?"], "sql": "SELECT cp_department, COUNT(*) AS page_count FROM catalog_page WHERE cp_start_date_sk <= (SELECT d_date_sk FROM date_dim WHERE d_date = '2002-06-30') AND (cp_end_date_sk IS NULL OR cp_end_date_sk >= (SELECT d_date_sk FROM date_dim WHERE d_date = '2002-01-01')) GROUP BY cp_department ORDER BY page_count DESC", "tables": ["date_dim", "catalog_page"], "columns": [], "business_intent": "To analyze the distribution of catalog pages across different departments during a specific time period. This analysis helps in understanding which departments had the most catalog representation during the first half of 2002, which could inform marketing strategy decisions and resource allocation for catalog production.", "complexity": "medium", "alternatives": ["The query assumes a date_dim table that isn't explicitly mentioned in the schema context. An alternative approach could use direct date comparisons if date values were stored in the catalog_page table rather than surrogate keys.", "If we wanted to analyze trends over time, we could modify this query to group by month or quarter to see how catalog page distribution changed throughout the period."], "sql_features": ["filter", "group_by", "order_by", "subquery"], "label": 1}
{"nl": "How many catalog pages were active between January and June 2002 for each department?", "sql": "SELECT DISTINCT i.i_item_id, i.i_product_name, i.i_item_desc FROM item i JOIN promotion p ON i.i_item_sk = p.p_item_sk WHERE p.p_channel_email = 1 AND p.p_channel_dmail = 1", "label": 0, "tables": ["promotion", "item"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "How many catalog pages were active between January and June 2002 for each department?", "sql": "SELECT dummy_col, cp_department, COUNT(*) AS page_count FROM catalog_page WHERE cp_start_date_sk <= (SELECT d_date_sk FROM date_dim WHERE d_date = '2002-06-30') AND (cp_end_date_sk IS NULL OR cp_end_date_sk >= (SELECT d_date_sk FROM date_dim WHERE d_date = '2002-01-01')) GROUP BY cp_department ORDER BY page_count DESC", "label": 0, "tables": ["date_dim", "catalog_page"], "columns": [], "sql_features": ["filter", "group_by", "order_by", "subquery"], "complexity": "hard"}
{"nl": "What is the total quantity of items purchased online but returned through the catalog channel?", "paraphrases": ["Here are three different paraphrases of the original question:\n\n1. How many products were bought via the internet but sent back through the catalog channel?\n\n2. What's the sum of all merchandise acquired online and subsequently returned via the catalog method?\n\n3. Could you provide the aggregate number of items that customers purchased on the web but later returned through catalog services?"], "sql": "SELECT SUM(cr_return_quantity) AS total_returned_quantity FROM catalog_returns cr JOIN web_sales ws ON cr.cr_item_sk = ws.ws_item_sk AND cr.cr_order_number = ws.ws_order_number", "tables": ["catalog_returns", "web_sales"], "columns": [], "business_intent": "To analyze cross-channel customer behavior by measuring how many items purchased through the web channel were subsequently returned through the catalog channel. This helps identify potential issues with product quality, online product descriptions, or customer satisfaction across different sales and return channels.", "complexity": "medium", "alternatives": ["We could calculate the percentage of web sales items that were returned through catalog by dividing the total returned quantity by the total sold quantity", "The query could be enhanced to break down returns by product category or time periods to identify patterns"], "sql_features": ["join"], "label": 1}
{"nl": "What is the total quantity of items purchased online but returned through the catalog channel?", "sql": "SELECT dummy_col, cp_department, COUNT(*) AS page_count FROM catalog_page WHERE cp_start_date_sk <= (SELECT d_date_sk FROM date_dim WHERE d_date = '2002-06-30') AND (cp_end_date_sk IS NULL OR cp_end_date_sk >= (SELECT d_date_sk FROM date_dim WHERE d_date = '2002-01-01')) GROUP BY cp_department ORDER BY page_count DESC", "label": 0, "tables": ["date_dim", "catalog_page"], "columns": [], "sql_features": ["filter", "group_by", "order_by", "subquery"], "complexity": "hard"}
{"nl": "What is the total quantity of items purchased online but returned through the catalog channel?", "sql": "SELECT dummy_col, SUM(cr_return_quantity) AS total_returned_quantity FROM catalog_returns cr JOIN web_sales ws ON cr.cr_item_sk = ws.ws_item_sk AND cr.cr_order_number = ws.ws_order_number", "label": 0, "tables": ["catalog_returns", "web_sales"], "columns": [], "sql_features": ["join"], "complexity": "hard"}
{"nl": "What was the total web sales amount by month in 2002?", "paraphrases": ["# Paraphrases of \"What was the total web sales amount by month in 2002?\"\n\n1. Can you provide a monthly breakdown of the total online sales figures for the year 2002?\n\n2. How much revenue was generated through web sales during each month of 2002?\n\n3. For the year 2002, what were the monthly totals for all sales conducted via the web?"], "sql": "SELECT d.d_month, SUM(ws.ws_net_paid) as total_sales\nFROM web_sales ws\nJOIN date_dim d ON ws.ws_sold_date_sk = d.d_date_sk\nWHERE d.d_year = 2002\nGROUP BY d.d_month\nORDER BY d.d_month;", "tables": ["web_sales", "date_dim"], "columns": [], "business_intent": "To analyze the monthly sales performance trend throughout the year 2002, helping to identify seasonal patterns, peak selling periods, and month-over-month changes in online sales revenue.", "complexity": "medium", "alternatives": ["Instead of d_month, could use d_month_seq for time series analysis or extract month from d_date for a numeric representation.", "Could use different sales metrics like ws_sales_price or ws_net_profit instead of ws_net_paid to analyze different aspects of sales performance."], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What was the total web sales amount by month in 2002?", "sql": "SELECT d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "label": 0, "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What was the total web sales amount by month in 2002?", "sql": "SELECT dummy_col, d.d_month, SUM(ws.ws_net_paid) as total_sales\nFROM web_sales ws\nJOIN date_dim d ON ws.ws_sold_date_sk = d.d_date_sk\nWHERE d.d_year = 2002\nGROUP BY d.d_month\nORDER BY d.d_month;", "label": 0, "tables": ["web_sales", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the top 5 most expensive items in the 'Books' category?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Which five products in the Books category have the highest price points?\n\n2. In the Books section, what are the five costliest items available?\n\n3. Could you list the five most premium-priced books that can be purchased?"], "sql": "SELECT i_item_id, i_item_desc, i_current_price FROM item WHERE i_category = 'Books' ORDER BY i_current_price DESC LIMIT 5", "tables": ["item"], "columns": ["item.i_category", "item.i_current_price", "item.i_item_id", "item.i_item_desc"], "business_intent": "To identify the premium-priced items in the Books category, which could inform pricing strategies, inventory management, and marketing decisions for high-value products.", "complexity": "easy", "alternatives": ["You could also add additional product details like brand or manufacturer if those were relevant to the business question", "The query could be modified to filter for currently active items by checking i_rec_end_date is null or in the future"], "sql_features": ["filter", "order_by"], "label": 1}
{"nl": "What are the top 5 most expensive items in the 'Books' category?", "sql": "SELECT dummy_col, d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "label": 0, "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the top 5 most expensive items in the 'Books' category?", "sql": "SELECT dummy_col, i_item_id, i_item_desc, i_current_price FROM item WHERE i_category = 'Books' ORDER BY i_current_price DESC LIMIT 5", "label": 0, "tables": ["item"], "columns": ["item.i_current_price", "item.i_category", "item.i_item_id", "item.i_item_desc"], "sql_features": ["filter", "order_by"], "complexity": "easy"}
{"nl": "Which customer made the most catalog returns in terms of total quantity?", "paraphrases": ["# Paraphrases of \"Which customer made the most catalog returns in terms of total quantity?\"\n\n1. Based on total quantity, which customer returned the highest number of catalog items?\n\n2. Who among the customers had the largest volume of catalog returns when counting total quantity?\n\n3. In terms of overall return quantity, which customer sent back the most catalog products?"], "sql": "SELECT cs_bill_customer_sk, SUM(cs_quantity) as total_quantity_returned FROM catalog_sales WHERE cs_bill_customer_sk IS NOT NULL GROUP BY cs_bill_customer_sk ORDER BY total_quantity_returned DESC LIMIT 1;", "tables": ["catalog_sales"], "columns": ["catalog_sales.cs_bill_customer_sk", "catalog_sales.cs_quantity"], "business_intent": "To identify the customer who returns the most catalog items, which can help in customer behavior analysis, fraud detection, or determining if certain customers are abusing return policies. This information could guide customer retention strategies or highlight potential issues with specific product lines.", "complexity": "easy", "alternatives": ["We could join with a customer dimension table to get more customer details if that table was available in the schema.", "We could analyze returns by other metrics like monetary value instead of quantity if the business was more concerned with financial impact."], "sql_features": ["filter", "group_by", "order_by"], "label": 1}
{"nl": "Which customer made the most catalog returns in terms of total quantity?", "sql": "SELECT DISTINCT dummy_col, i.i_item_id, i.i_product_name, i.i_item_desc FROM item i JOIN promotion p ON i.i_item_sk = p.p_item_sk WHERE p.p_channel_email = 1 AND p.p_channel_dmail = 1", "label": 0, "tables": ["promotion", "item"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "Which customer made the most catalog returns in terms of total quantity?", "sql": "SELECT dummy_col, cs_bill_customer_sk, SUM(cs_quantity) as total_quantity_returned FROM catalog_sales WHERE cs_bill_customer_sk IS NOT NULL GROUP BY cs_bill_customer_sk ORDER BY total_quantity_returned DESC LIMIT 1;", "label": 0, "tables": ["catalog_sales"], "columns": ["catalog_sales.cs_bill_customer_sk", "catalog_sales.cs_quantity"], "sql_features": ["filter", "group_by", "order_by"], "complexity": "medium"}
{"nl": "List all the reasons for returns in the system with their descriptions", "paraphrases": ["# Paraphrases of the Question\n\n1. Provide a complete inventory of return reasons currently in the system along with their accompanying descriptions.\n\n2. Enumerate all possible reasons for returns that exist in the system and include the description for each one.\n\n3. Show me the full set of return justifications available in the system, together with their explanatory descriptions."], "sql": "SELECT r_reason_id, r_reason_desc FROM reason ORDER BY r_reason_id", "tables": ["reason"], "columns": ["reason.r_reason_id", "reason.r_reason_desc"], "business_intent": "To understand the categorization of return reasons in the system, which helps business stakeholders analyze patterns in return behaviors and potentially address common return issues.", "complexity": "easy", "alternatives": ["SELECT * FROM reason ORDER BY r_reason_id", "SELECT r_reason_sk, r_reason_id, r_reason_desc FROM reason"], "sql_features": ["order_by"], "label": 1}
{"nl": "List all the reasons for returns in the system with their descriptions", "sql": "SELECT AVG(ib_lower_bound) FROM income_band", "label": 0, "tables": ["income_band"], "columns": ["income_band.ib_lower_bound"], "sql_features": [], "complexity": "easy"}
{"nl": "List all the reasons for returns in the system with their descriptions", "sql": "SELECT dummy_col, r_reason_id, r_reason_desc FROM reason ORDER BY r_reason_id", "label": 0, "tables": ["reason"], "columns": ["reason.r_reason_id", "reason.r_reason_desc"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "Which stores were closed after January 1, 2000?", "paraphrases": ["# Paraphrases of \"Which stores were closed after January 1, 2000?\"\n\n1. What retail establishments shut down following January 1, 2000?\n\n2. After the start of the year 2000, which shops ceased operations?\n\n3. Can you identify the stores that terminated their business after January 1st of 2000?"], "sql": "SELECT s_store_id, s_store_name FROM store JOIN date_dim ON s_closed_date_sk = d_date_sk WHERE d_date > '2000-01-01'", "tables": ["date_dim", "store"], "columns": [], "business_intent": "To identify stores that have been closed after a specific date, which helps in analyzing store closure patterns and potentially understanding retail location performance over time. This information could be valuable for business planning, real estate strategy, or market analysis.", "complexity": "medium", "alternatives": ["The query assumes a date_dim table exists to join with the s_closed_date_sk, which is standard in star schema data warehouses. If date_dim doesn't exist, we would need to work with the surrogate key directly or use another approach for date comparison."], "sql_features": ["join", "filter"], "label": 1}
{"nl": "Which stores were closed after January 1, 2000?", "sql": "SELECT dummy_col, d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "label": 0, "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "Which stores were closed after January 1, 2000?", "sql": "SELECT dummy_col, s_store_id, s_store_name FROM store JOIN date_dim ON s_closed_date_sk = d_date_sk WHERE d_date > '2000-01-01'", "label": 0, "tables": ["date_dim", "store"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What are the top 5 product categories with the highest total return amounts from web sales?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Which five product categories generated the most returns in terms of total monetary value from online purchases?\n\n2. Among all product categories, which five have accumulated the largest sum of returned amounts specifically from e-commerce sales?\n\n3. Identify the top five merchandise categories that experienced the highest aggregate return values from web-based transactions."], "sql": "SELECT i.i_category, SUM(wr.wr_return_amt) AS total_return_amount FROM web_returns wr JOIN item i ON wr.wr_item_sk = i.i_item_sk GROUP BY i.i_category ORDER BY total_return_amount DESC LIMIT 5", "tables": ["web_returns", "item"], "columns": [], "business_intent": "To identify which product categories generate the highest financial impact from returns in the web channel. This analysis helps business leaders understand which product categories may need quality improvements, better descriptions, or other interventions to reduce return rates and associated financial losses.", "complexity": "medium", "alternatives": ["We could analyze this data at a more granular level by looking at specific item classes or brands within categories", "We could normalize the data by dividing return amounts by sales volume to identify categories with disproportionately high return rates relative to their sales"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What are the top 5 product categories with the highest total return amounts from web sales?", "sql": "SELECT DISTINCT dummy_col, i.i_item_id, i.i_product_name, i.i_item_desc FROM item i JOIN promotion p ON i.i_item_sk = p.p_item_sk WHERE p.p_channel_email = 1 AND p.p_channel_dmail = 1", "label": 0, "tables": ["promotion", "item"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What are the top 5 product categories with the highest total return amounts from web sales?", "sql": "SELECT dummy_col, i.i_category, SUM(wr.wr_return_amt) AS total_return_amount FROM web_returns wr JOIN item i ON wr.wr_item_sk = i.i_item_sk GROUP BY i.i_category ORDER BY total_return_amount DESC LIMIT 5", "label": 0, "tables": ["web_returns", "item"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "Which warehouse has the largest square footage?", "paraphrases": ["# Paraphrases of \"Which warehouse has the largest square footage?\"\n\n1. Which storage facility contains the greatest amount of floor space?\n\n2. Among all the warehouses, which one covers the most square feet?\n\n3. What is the warehouse with the maximum area in terms of square footage?"], "sql": "SELECT w_warehouse_name, w_warehouse_sq_ft FROM warehouse ORDER BY w_warehouse_sq_ft DESC LIMIT 1;", "tables": ["warehouse"], "columns": ["warehouse.w_warehouse_name", "warehouse.w_warehouse_sq_ft"], "business_intent": "To identify the largest warehouse facility by physical size, which can help in capacity planning, resource allocation, and understanding the maximum storage capability within the organization.", "complexity": "easy", "alternatives": ["SELECT w_warehouse_name, w_warehouse_sq_ft FROM warehouse WHERE w_warehouse_sq_ft = (SELECT MAX(w_warehouse_sq_ft) FROM warehouse);", "SELECT w_warehouse_name, w_warehouse_sq_ft, w_warehouse_id FROM warehouse ORDER BY w_warehouse_sq_ft DESC LIMIT 1;"], "sql_features": ["order_by"], "label": 1}
{"nl": "Which warehouse has the largest square footage?", "sql": "SELECT AVG(ss_sales_price) as avg_sales_amount FROM store_sales JOIN time_dim ON ss_sold_time_sk = t_time_sk WHERE t_hour >= 14 AND t_hour < 16", "label": 0, "tables": ["time_dim", "store_sales"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "Which warehouse has the largest square footage?", "sql": "SELECT dummy_col, w_warehouse_name, w_warehouse_sq_ft FROM warehouse ORDER BY w_warehouse_sq_ft DESC LIMIT 1;", "label": 0, "tables": ["warehouse"], "columns": ["warehouse.w_warehouse_name", "warehouse.w_warehouse_sq_ft"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "How many call centers are owned by each company?", "paraphrases": ["# Paraphrases of \"How many call centers are owned by each company?\"\n\n1. What is the number of call centers that each company possesses?\n\n2. Could you provide a breakdown of call center ownership by company?\n\n3. For every company, how many customer service facilities do they own?"], "sql": "SELECT cc_company, COUNT(*) AS number_of_call_centers FROM call_center GROUP BY cc_company ORDER BY number_of_call_centers DESC;", "tables": ["call_center"], "columns": ["call_center.cc_company"], "business_intent": "To understand the organizational structure by analyzing how call centers are distributed across different companies, which helps in resource allocation, operational planning, and organizational hierarchy assessment.", "complexity": "easy", "alternatives": ["We could also filter for only active call centers by adding WHERE cc_rec_end_date IS NULL or compare the distribution over time by grouping by both company and year."], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "How many call centers are owned by each company?", "sql": "SELECT inv_warehouse_sk, SUM(inv_quantity_on_hand) as total_quantity FROM inventory WHERE inv_quantity_on_hand > 500 GROUP BY inv_warehouse_sk ORDER BY total_quantity DESC;", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand", "inventory.inv_warehouse_sk"], "sql_features": ["filter", "group_by", "order_by"], "complexity": "medium"}
{"nl": "How many call centers are owned by each company?", "sql": "SELECT dummy_col, cc_company, COUNT(*) AS number_of_call_centers FROM call_center GROUP BY cc_company ORDER BY number_of_call_centers DESC;", "label": 0, "tables": ["call_center"], "columns": ["call_center.cc_company"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What's the average return amount for items returned within 7 days of the catalog page's start date?", "paraphrases": ["# Paraphrased Versions\n\n1. For products returned within a week of the catalog launch date, what is the typical refund amount?\n\n2. What is the mean refund value for merchandise that customers return during the first 7 days after the catalog's introduction date?\n\n3. On average, how much money is refunded when items are sent back within 7 days following the date when the catalog first became available?"], "sql": "SELECT AVG(wr_return_amt) as avg_return_amount\nFROM web_returns wr\nJOIN catalog_page cp ON wr.wr_item_sk = cp.cp_catalog_page_sk\nWHERE DATEDIFF(day, cp.cp_start_date_sk, wr.wr_returned_date_sk) <= 7\nAND wr.wr_returned_date_sk >= cp.cp_start_date_sk;", "tables": ["web_returns", "catalog_page"], "columns": [], "business_intent": "To analyze how quickly products are returned after catalog pages become active, which could help optimize catalog page content and design or identify items that might be misleadingly presented in catalogs.", "complexity": "medium", "alternatives": ["We could also examine the median return amount instead of average to better handle outliers", "The analysis could be expanded to categorize returns by department to identify problematic catalog sections"], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What's the average return amount for items returned within 7 days of the catalog page's start date?", "sql": "SELECT dummy_col, cp_department, COUNT(*) AS page_count FROM catalog_page WHERE cp_start_date_sk <= (SELECT d_date_sk FROM date_dim WHERE d_date = '2002-06-30') AND (cp_end_date_sk IS NULL OR cp_end_date_sk >= (SELECT d_date_sk FROM date_dim WHERE d_date = '2002-01-01')) GROUP BY cp_department ORDER BY page_count DESC", "label": 0, "tables": ["date_dim", "catalog_page"], "columns": [], "sql_features": ["filter", "group_by", "order_by", "subquery"], "complexity": "hard"}
{"nl": "What's the average return amount for items returned within 7 days of the catalog page's start date?", "sql": "SELECT dummy_col, AVG(wr_return_amt) as avg_return_amount\nFROM web_returns wr\nJOIN catalog_page cp ON wr.wr_item_sk = cp.cp_catalog_page_sk\nWHERE DATEDIFF(day, cp.cp_start_date_sk, wr.wr_returned_date_sk) <= 7\nAND wr.wr_returned_date_sk >= cp.cp_start_date_sk;", "label": 0, "tables": ["web_returns", "catalog_page"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "How many unique dates are recorded in the database?", "paraphrases": ["# Paraphrases of \"How many unique dates are recorded in the database?\"\n\n1. What is the total count of distinct dates contained within the database?\n\n2. How many different dates can be found in the database records?\n\n3. What's the number of individual, non-repeating dates that exist in the database?"], "sql": "SELECT COUNT(DISTINCT d_date) FROM date_dim;", "tables": ["date_dim"], "columns": ["date_dim.d_date"], "business_intent": "To understand the time span covered by the database by counting the total number of unique dates available in the date dimension. This helps in assessing the temporal coverage of the data warehouse and is fundamental for planning time-based analyses.", "complexity": "easy", "alternatives": ["SELECT COUNT(*) FROM (SELECT DISTINCT d_date FROM date_dim) AS unique_dates;", "SELECT COUNT(1) FROM (SELECT d_date FROM date_dim GROUP BY d_date) AS distinct_dates;"], "sql_features": [], "label": 1}
{"nl": "How many unique dates are recorded in the database?", "sql": "SELECT DISTINCT dummy_col, i.i_item_id, i.i_product_name, i.i_item_desc FROM item i JOIN promotion p ON i.i_item_sk = p.p_item_sk WHERE p.p_channel_email = 1 AND p.p_channel_dmail = 1", "label": 0, "tables": ["promotion", "item"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "How many unique dates are recorded in the database?", "sql": "SELECT dummy_col, COUNT(DISTINCT d_date) FROM date_dim;", "label": 0, "tables": ["date_dim"], "columns": ["date_dim.d_date"], "sql_features": [], "complexity": "easy"}
{"nl": "What was the total quantity of catalog sales for each reason description?", "paraphrases": ["# Paraphrased Versions\n\n1. For each reason description, what was the aggregate amount of catalog sales?\n\n2. How much did catalog sales amount to when broken down by different reason descriptions?\n\n3. Can you provide the sum of catalog sales categorized by each type of reason description?"], "sql": "SELECT r.r_reason_desc, SUM(cs.cs_quantity) as total_quantity FROM catalog_sales cs JOIN reason r ON cs.cs_reason_sk = r.r_reason_sk GROUP BY r.r_reason_desc ORDER BY total_quantity DESC", "tables": ["catalog_sales", "reason"], "columns": [], "business_intent": "To analyze catalog sales volume by reason categories, helping to understand which reason descriptions are associated with higher or lower sales quantities. This information can be used for inventory planning, marketing strategy development, and identifying areas for operational improvement.", "complexity": "medium", "alternatives": ["We could also analyze this data as a percentage of total sales to get relative importance of each reason category, or compare across time periods to identify trends in reason distributions."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What was the total quantity of catalog sales for each reason description?", "sql": "SELECT s_store_id, s_store_name FROM store JOIN date_dim ON s_closed_date_sk = d_date_sk WHERE d_date > '2000-01-01'", "label": 0, "tables": ["date_dim", "store"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What was the total quantity of catalog sales for each reason description?", "sql": "SELECT dummy_col, r.r_reason_desc, SUM(cs.cs_quantity) as total_quantity FROM catalog_sales cs JOIN reason r ON cs.cs_reason_sk = r.r_reason_sk GROUP BY r.r_reason_desc ORDER BY total_quantity DESC", "label": 0, "tables": ["catalog_sales", "reason"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total refund amount for web returns processed on Mondays?", "paraphrases": ["Here are three different ways to paraphrase the question while preserving its original meaning:\n\n1. For web returns that were processed on Mondays, what is the sum of all refund amounts?\n\n2. How much money in total was refunded for online returns handled on Mondays?\n\n3. What's the aggregate refund value of all Monday-processed web returns?"], "sql": "SELECT SUM(wr_return_amt) AS total_monday_refunds FROM web_returns JOIN date_dim ON wr_returned_date_sk = d_date_sk WHERE d_day_name = 'Monday'", "tables": ["web_returns", "date_dim"], "columns": [], "business_intent": "To analyze the distribution of web return refunds by day of week, specifically focusing on Monday returns. This helps identify if there are patterns in return behavior related to specific days of the week, which could inform staffing decisions, return processing workflows, or customer service resource allocation.", "complexity": "medium", "alternatives": ["The query assumes the existence of a date_dim table with d_day_name column, which is a standard dimension table in retail analytics but wasn't explicitly provided in the schema context.", "An alternative approach could involve using date functions to extract the day of week from return dates, but this would be less efficient than using a pre-calculated dimension table."], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What is the total refund amount for web returns processed on Mondays?", "sql": "SELECT dummy_col, d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "label": 0, "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total refund amount for web returns processed on Mondays?", "sql": "SELECT dummy_col, SUM(wr_return_amt) AS total_monday_refunds FROM web_returns JOIN date_dim ON wr_returned_date_sk = d_date_sk WHERE d_day_name = 'Monday'", "label": 0, "tables": ["web_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the distribution of web sales by hour of day?", "paraphrases": ["# Paraphrases of \"What is the distribution of web sales by hour of day?\"\n\n1. How are online purchases distributed across different hours throughout the day?\n\n2. Can you break down the pattern of web-based sales according to the time of day they occur?\n\n3. What does the hourly analysis of e-commerce transactions reveal about sales distribution over a 24-hour period?"], "sql": "SELECT t.t_hour, COUNT(*) AS num_transactions, SUM(ws_net_paid) AS total_sales FROM web_sales ws JOIN time_dim t ON ws.ws_sold_time_sk = t.t_time_sk GROUP BY t.t_hour ORDER BY t.t_hour", "tables": ["web_sales", "time_dim"], "columns": [], "business_intent": "To analyze customer purchasing patterns throughout the day to identify peak shopping hours, which can inform marketing campaign timing, website capacity planning, and customer support staffing decisions.", "complexity": "medium", "alternatives": ["We could also analyze this by grouping into time periods (morning/afternoon/evening) using CASE statements with the t_hour column", "We could add additional metrics like average order value per hour by calculating SUM(ws_net_paid)/COUNT(*)"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of web sales by hour of day?", "sql": "SELECT DISTINCT dummy_col, i.i_item_id, i.i_product_name, i.i_item_desc FROM item i JOIN promotion p ON i.i_item_sk = p.p_item_sk WHERE p.p_channel_email = 1 AND p.p_channel_dmail = 1", "label": 0, "tables": ["promotion", "item"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the distribution of web sales by hour of day?", "sql": "SELECT dummy_col, t.t_hour, COUNT(*) AS num_transactions, SUM(ws_net_paid) AS total_sales FROM web_sales ws JOIN time_dim t ON ws.ws_sold_time_sk = t.t_time_sk GROUP BY t.t_hour ORDER BY t.t_hour", "label": 0, "tables": ["web_sales", "time_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of education status among customers who access web pages created after 2010?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How are educational backgrounds distributed among users who visit web pages published since 2010?\n\n2. Among customers accessing web content created after 2010, what is the breakdown of their educational attainment levels?\n\n3. For the client base that browses web pages developed post-2010, what educational qualification patterns can be observed?"], "sql": "SELECT cd_education_status, COUNT(*) as customer_count FROM customer_demographics JOIN web_page ON cd_demo_sk = wp_customer_sk WHERE EXTRACT(YEAR FROM wp_creation_date_sk) > 2010 GROUP BY cd_education_status ORDER BY customer_count DESC", "tables": ["web_page", "customer_demographics"], "columns": [], "business_intent": "To analyze the educational profile of customers accessing recently created web pages. This insight helps in tailoring content strategy and marketing approaches based on the educational background of the website visitors.", "complexity": "medium", "alternatives": ["We could also analyze this data by joining with additional tables to include more customer attributes or to filter by specific types of web pages."], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of education status among customers who access web pages created after 2010?", "sql": "SELECT dummy_col, c_birth_month, COUNT(*) as customer_count FROM customer GROUP BY c_birth_month ORDER BY c_birth_month", "label": 0, "tables": ["customer"], "columns": ["customer.c_birth_month"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the distribution of education status among customers who access web pages created after 2010?", "sql": "SELECT dummy_col, cd_education_status, COUNT(*) as customer_count FROM customer_demographics JOIN web_page ON cd_demo_sk = wp_customer_sk WHERE EXTRACT(YEAR FROM wp_creation_date_sk) > 2010 GROUP BY cd_education_status ORDER BY customer_count DESC", "label": 0, "tables": ["web_page", "customer_demographics"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What promotions have start dates in the morning hours (AM)?", "paraphrases": ["# Paraphrases of \"What promotions have start dates in the morning hours (AM)?\"\n\n1. Which promotional offers begin during the morning time period before noon?\n\n2. Can you identify the promotions that are scheduled to start in the AM hours of the day?\n\n3. Which marketing campaigns or special deals have their commencement times set during the morning hours before midday?"], "sql": "SELECT p.p_promo_id, p.p_promo_sk, td.t_time, td.t_am_pm \nFROM promotion p \nJOIN time_dim td ON p.p_start_date_sk = td.t_time_sk \nWHERE td.t_am_pm = 'AM'", "tables": ["promotion", "time_dim"], "columns": [], "business_intent": "To identify promotions that were launched during morning hours, which may help marketing teams analyze whether the timing of promotion launches affects their performance. This information could be valuable for optimizing future promotion schedules based on time-of-day effectiveness.", "complexity": "medium", "alternatives": ["Could also filter using t_hour < 12 instead of t_am_pm = 'AM'", "Could include additional promotion details such as p_channel_email or p_cost in the result set for more comprehensive analysis"], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What promotions have start dates in the morning hours (AM)?", "sql": "SELECT w_warehouse_name, w_warehouse_sq_ft FROM warehouse ORDER BY w_warehouse_sq_ft DESC LIMIT 1;", "label": 0, "tables": ["warehouse"], "columns": ["warehouse.w_warehouse_name", "warehouse.w_warehouse_sq_ft"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What promotions have start dates in the morning hours (AM)?", "sql": "SELECT dummy_col, p.p_promo_id, p.p_promo_sk, td.t_time, td.t_am_pm \nFROM promotion p \nJOIN time_dim td ON p.p_start_date_sk = td.t_time_sk \nWHERE td.t_am_pm = 'AM'", "label": 0, "tables": ["promotion", "time_dim"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the total sales amount for each promotion in 2001?", "paraphrases": ["# Paraphrases of \"What is the total sales amount for each promotion in 2001?\"\n\n1. For every promotional campaign run in 2001, what was the aggregate sales revenue?\n\n2. How much total revenue did each individual promotion generate during the year 2001?\n\n3. Can you break down the sum of sales figures by promotion type for the 2001 calendar year?"], "sql": "SELECT p.p_promo_id, p.p_promo_name, SUM(ss.ss_net_paid) as total_sales_amount\nFROM store_sales ss\nJOIN promotion p ON ss.ss_promo_sk = p.p_promo_sk\nJOIN date_dim d ON ss.ss_sold_date_sk = d.d_date_sk\nWHERE d.d_year = 2001\nGROUP BY p.p_promo_id, p.p_promo_name\nORDER BY total_sales_amount DESC", "tables": ["promotion", "date_dim", "store_sales"], "columns": [], "business_intent": "To evaluate the effectiveness of different promotional campaigns in terms of revenue generation during a specific year. This analysis helps marketing teams understand which promotions drove the most sales and can inform future promotional strategies.", "complexity": "medium", "alternatives": ["We could analyze promotion performance by looking at quantity sold instead of revenue, or we could include additional dimensions like store location or product category to get more granular insights about promotion effectiveness."], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What is the total sales amount for each promotion in 2001?", "sql": "SELECT p_promo_id, p_promo_name, p_cost, p_end_date_sk \nFROM promotion \nWHERE p_cost > 1000 \nORDER BY p_end_date_sk DESC \nLIMIT 5;", "label": 0, "tables": ["promotion"], "columns": ["promotion.p_end_date_sk", "promotion.p_promo_id", "promotion.p_cost", "promotion.p_promo_name"], "sql_features": ["filter", "order_by"], "complexity": "easy"}
{"nl": "What is the total sales amount for each promotion in 2001?", "sql": "SELECT dummy_col, p.p_promo_id, p.p_promo_name, SUM(ss.ss_net_paid) as total_sales_amount\nFROM store_sales ss\nJOIN promotion p ON ss.ss_promo_sk = p.p_promo_sk\nJOIN date_dim d ON ss.ss_sold_date_sk = d.d_date_sk\nWHERE d.d_year = 2001\nGROUP BY p.p_promo_id, p.p_promo_name\nORDER BY total_sales_amount DESC", "label": 0, "tables": ["promotion", "date_dim", "store_sales"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "How many households have more than 3 vehicles?", "paraphrases": ["# Paraphrased Versions\n\n1. What is the number of households that possess more than three vehicles?\n\n2. How many families own in excess of 3 automobiles per household?\n\n3. What quantity of homes have a collection of vehicles that exceeds three in number?"], "sql": "SELECT COUNT(*) FROM household_demographics WHERE hd_vehicle_count > 3", "tables": ["household_demographics"], "columns": ["household_demographics.hd_vehicle_count"], "business_intent": "To understand the distribution of vehicle ownership among households, specifically identifying the segment with high vehicle ownership (more than 3). This information could be valuable for marketing campaigns targeting affluent households or for transportation-related product offerings.", "complexity": "easy", "alternatives": ["SELECT COUNT(hd_demo_sk) FROM household_demographics WHERE hd_vehicle_count > 3", "SELECT hd_vehicle_count, COUNT(*) FROM household_demographics WHERE hd_vehicle_count > 3 GROUP BY hd_vehicle_count"], "sql_features": ["filter"], "label": 1}
{"nl": "How many households have more than 3 vehicles?", "sql": "SELECT web_name FROM web_site;", "label": 0, "tables": ["web_site"], "columns": ["web_site.web_name"], "sql_features": [], "complexity": "easy"}
{"nl": "How many households have more than 3 vehicles?", "sql": "SELECT dummy_col, COUNT(*) FROM household_demographics WHERE hd_vehicle_count > 3", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_vehicle_count"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What are the income bands with lower bounds above $50,000?", "paraphrases": ["# Paraphrases of \"What are the income bands with lower bounds above $50,000?\"\n\n1. Which income categories start at amounts greater than $50,000?\n\n2. Can you identify the income brackets that have minimum thresholds exceeding $50,000?\n\n3. What salary ranges begin above the $50,000 mark?"], "sql": "SELECT ib_income_band_sk, ib_lower_bound, ib_upper_bound FROM income_band WHERE ib_lower_bound > 50000 ORDER BY ib_lower_bound", "tables": ["income_band"], "columns": ["income_band.ib_lower_bound", "income_band.ib_upper_bound", "income_band.ib_income_band_sk"], "business_intent": "To identify higher income brackets for market segmentation, targeted marketing, or premium product offerings. This helps in understanding which customer segments fall into higher income categories for strategic planning.", "complexity": "easy", "alternatives": ["Another approach could filter for specific upper bounds as well, like 'SELECT * FROM income_band WHERE ib_lower_bound > 50000 AND ib_upper_bound < 150000' to identify middle-high income bands.", "For a different perspective, the query could count bands: 'SELECT COUNT(*) FROM income_band WHERE ib_lower_bound > 50000' to quantify how many higher income segments exist."], "sql_features": ["filter", "order_by"], "label": 1}
{"nl": "What are the income bands with lower bounds above $50,000?", "sql": "SELECT dummy_col, d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "label": 0, "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the income bands with lower bounds above $50,000?", "sql": "SELECT dummy_col, ib_income_band_sk, ib_lower_bound, ib_upper_bound FROM income_band WHERE ib_lower_bound > 50000 ORDER BY ib_lower_bound", "label": 0, "tables": ["income_band"], "columns": ["income_band.ib_lower_bound", "income_band.ib_upper_bound", "income_band.ib_income_band_sk"], "sql_features": ["filter", "order_by"], "complexity": "easy"}
{"nl": "How many customers have a college education and have a purchase estimate greater than $5000?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. What is the count of college-educated customers whose estimated purchases exceed $5000?\n\n2. Among customers with higher education degrees, how many have projected purchases valued above $5000?\n\n3. How many individuals in our customer base have both completed college and are expected to make purchases surpassing the $5000 threshold?"], "sql": "SELECT COUNT(*) FROM customer_demographics WHERE cd_education_status LIKE '%College%' AND cd_purchase_estimate > 5000", "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_purchase_estimate"], "business_intent": "To identify the segment of higher-educated customers with substantial purchasing power, which could be valuable for targeted marketing campaigns or premium product offerings.", "complexity": "easy", "alternatives": ["SELECT COUNT(*) FROM customer_demographics WHERE (cd_education_status = 'College' OR cd_education_status = '4 yr Degree' OR cd_education_status LIKE '%College%') AND cd_purchase_estimate > 5000"], "sql_features": ["filter"], "label": 1}
{"nl": "How many customers have a college education and have a purchase estimate greater than $5000?", "sql": "SELECT web_name FROM web_site;", "label": 0, "tables": ["web_site"], "columns": ["web_site.web_name"], "sql_features": [], "complexity": "easy"}
{"nl": "How many customers have a college education and have a purchase estimate greater than $5000?", "sql": "SELECT dummy_col, COUNT(*) FROM customer_demographics WHERE cd_education_status LIKE '%College%' AND cd_purchase_estimate > 5000", "label": 0, "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_purchase_estimate"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What is the count of web sales transactions for each income band?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How many web sales transactions occurred within each income bracket?\n\n2. For every income band category, what is the total number of transactions made through web sales?\n\n3. Can you provide the transaction count from web sales, broken down by different income bands?"], "sql": "SELECT ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound, COUNT(ws.ws_bill_customer_sk) AS transaction_count FROM web_sales ws JOIN income_band ib ON (ws.ws_bill_cdemo_sk = ib.ib_income_band_sk) GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound;", "tables": ["income_band", "web_sales"], "columns": [], "business_intent": "To analyze the distribution of online sales across different customer income segments, which helps in understanding which income brackets generate the most transactions. This information can guide marketing strategies, product development, and pricing decisions tailored to specific income demographics.", "complexity": "medium", "alternatives": ["We could also analyze average transaction value by income band instead of just counting transactions", "A more detailed analysis could include time-based trends of transactions by income band to identify seasonal patterns by income segment"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the count of web sales transactions for each income band?", "sql": "SELECT p.p_promo_id, p.p_promo_name, SUM(ss.ss_net_paid) as total_sales_amount\nFROM store_sales ss\nJOIN promotion p ON ss.ss_promo_sk = p.p_promo_sk\nJOIN date_dim d ON ss.ss_sold_date_sk = d.d_date_sk\nWHERE d.d_year = 2001\nGROUP BY p.p_promo_id, p.p_promo_name\nORDER BY total_sales_amount DESC", "label": 0, "tables": ["promotion", "date_dim", "store_sales"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the count of web sales transactions for each income band?", "sql": "SELECT dummy_col, ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound, COUNT(ws.ws_bill_customer_sk) AS transaction_count FROM web_sales ws JOIN income_band ib ON (ws.ws_bill_cdemo_sk = ib.ib_income_band_sk) GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound;", "label": 0, "tables": ["income_band", "web_sales"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total number of web sales transactions for each customer and their email addresses?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. For each customer, how many web sales transactions have they made, and what are their email addresses?\n\n2. Could you provide the count of online purchase transactions along with email addresses for individual customers?\n\n3. I need a list of customers showing their total web transaction count and corresponding email addresses. Can you generate this?"], "sql": "SELECT c.c_customer_id, c.c_email_address, COUNT(ws.ws_item_sk) AS total_transactions FROM web_sales ws JOIN customer c ON ws.ws_bill_customer_sk = c.c_customer_sk GROUP BY c.c_customer_id, c.c_email_address ORDER BY total_transactions DESC", "tables": ["web_sales", "customer"], "columns": [], "business_intent": "To analyze customer purchase behavior by identifying high-volume customers in the web sales channel. This information can be used for customer segmentation, targeted marketing campaigns, and loyalty program development.", "complexity": "medium", "alternatives": ["We could also calculate average transaction values per customer by including sales amounts from the web_sales table", "Another approach could be to segment customers by time periods to see how transaction frequency changes over time"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the total number of web sales transactions for each customer and their email addresses?", "sql": "SELECT dummy_col, d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "label": 0, "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total number of web sales transactions for each customer and their email addresses?", "sql": "SELECT dummy_col, c.c_customer_id, c.c_email_address, COUNT(ws.ws_item_sk) AS total_transactions FROM web_sales ws JOIN customer c ON ws.ws_bill_customer_sk = c.c_customer_sk GROUP BY c.c_customer_id, c.c_email_address ORDER BY total_transactions DESC", "label": 0, "tables": ["web_sales", "customer"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total amount of catalog sales for each customer in the year 2022?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. For each customer, what was the sum of all catalog purchases during 2022?\n\n2. How much did individual customers spend on catalog items throughout the 2022 calendar year?\n\n3. Calculate the aggregate catalog revenue generated by each customer over the course of 2022."], "sql": "SELECT c.c_customer_id, c.c_customer_sk, SUM(cs.cs_net_paid) as total_sales\nFROM customer c\nJOIN catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk\nWHERE EXTRACT(YEAR FROM cs.cs_sold_date_sk::date) = 2022\nGROUP BY c.c_customer_id, c.c_customer_sk\nORDER BY total_sales DESC", "tables": ["catalog_sales", "customer"], "columns": [], "business_intent": "This query helps analyze customer spending patterns in catalog sales for a specific year. It identifies high-value customers, allows for customer segmentation based on purchase volume, and provides insights into revenue distribution across the customer base for catalog sales in 2022.", "complexity": "medium", "alternatives": ["We could also join with a date dimension table if it existed in the schema to properly filter by year instead of extracting from the date_sk"], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What is the total amount of catalog sales for each customer in the year 2022?", "sql": "SELECT p.p_promo_id, p.p_promo_sk, td.t_time, td.t_am_pm \nFROM promotion p \nJOIN time_dim td ON p.p_start_date_sk = td.t_time_sk \nWHERE td.t_am_pm = 'AM'", "label": 0, "tables": ["promotion", "time_dim"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the total amount of catalog sales for each customer in the year 2022?", "sql": "SELECT dummy_col, c.c_customer_id, c.c_customer_sk, SUM(cs.cs_net_paid) as total_sales\nFROM customer c\nJOIN catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk\nWHERE EXTRACT(YEAR FROM cs.cs_sold_date_sk::date) = 2022\nGROUP BY c.c_customer_id, c.c_customer_sk\nORDER BY total_sales DESC", "label": 0, "tables": ["catalog_sales", "customer"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the most common shipping methods used for store returns?", "paraphrases": ["# Paraphrased Versions of the Question\n\n1. Which shipping options are typically used most frequently when returning items to stores?\n\n2. For product returns to retailers, what delivery methods are most popular?\n\n3. When customers send back merchandise to stores, what are the predominant shipping services they use?"], "sql": "SELECT sm.sm_type, sm.sm_carrier, COUNT(*) as return_count FROM store_returns sr JOIN ship_mode sm ON sr.sr_return_ship_mode_sk = sm.sm_ship_mode_sk GROUP BY sm.sm_type, sm.sm_carrier ORDER BY return_count DESC", "tables": ["store_returns", "ship_mode"], "columns": [], "business_intent": "To analyze which shipping methods are most commonly used for product returns, helping the business optimize return logistics, potentially negotiate better rates with frequent carriers, and improve the customer return experience.", "complexity": "medium", "alternatives": ["Could also group by sm_code to get more granular shipping method details", "Could include time dimensions by joining with date table to analyze shipping method trends over time"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What are the most common shipping methods used for store returns?", "sql": "SELECT p_promo_id, p_promo_name, p_cost, p_end_date_sk \nFROM promotion \nWHERE p_cost > 1000 \nORDER BY p_end_date_sk DESC \nLIMIT 5;", "label": 0, "tables": ["promotion"], "columns": ["promotion.p_end_date_sk", "promotion.p_promo_id", "promotion.p_cost", "promotion.p_promo_name"], "sql_features": ["filter", "order_by"], "complexity": "easy"}
{"nl": "What are the most common shipping methods used for store returns?", "sql": "SELECT dummy_col, sm.sm_type, sm.sm_carrier, COUNT(*) as return_count FROM store_returns sr JOIN ship_mode sm ON sr.sr_return_ship_mode_sk = sm.sm_ship_mode_sk GROUP BY sm.sm_type, sm.sm_carrier ORDER BY return_count DESC", "label": 0, "tables": ["store_returns", "ship_mode"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the total web sales for each product category?", "paraphrases": ["# Paraphrases of \"What are the total web sales for each product category?\"\n\n1. How much revenue was generated online for every product category?\n\n2. Could you break down the total e-commerce sales figures by product category?\n\n3. What is the sum of web-based purchases across each category of products?"], "sql": "SELECT i.i_category, SUM(ws.ws_net_paid) as total_sales FROM web_sales ws JOIN item i ON ws.ws_item_sk = i.i_item_sk GROUP BY i.i_category ORDER BY total_sales DESC", "tables": ["web_sales", "item"], "columns": [], "business_intent": "To analyze product category performance in online sales, helping business leaders understand which categories drive the most revenue through the web channel. This analysis can inform inventory decisions, marketing strategies, and category management priorities.", "complexity": "medium", "alternatives": ["Could use different sales metrics like ws_net_paid_inc_tax or ws_sales_price instead of ws_net_paid depending on the specific business definition of 'sales'", "Could add time dimensions to analyze category performance trends over time by joining with date dimensions"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What are the total web sales for each product category?", "sql": "SELECT ib.ib_lower_bound, ib.ib_upper_bound, COUNT(sr.sr_item_sk) as return_count FROM store_returns sr JOIN customer c ON sr.sr_customer_sk = c.c_customer_sk JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk JOIN income_band ib ON cd.cd_income_band_sk = ib.ib_income_band_sk GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound", "label": 0, "tables": ["store_returns", "income_band", "customer", "customer_demographics"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the total web sales for each product category?", "sql": "SELECT dummy_col, i.i_category, SUM(ws.ws_net_paid) as total_sales FROM web_sales ws JOIN item i ON ws.ws_item_sk = i.i_item_sk GROUP BY i.i_category ORDER BY total_sales DESC", "label": 0, "tables": ["web_sales", "item"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average time (in terms of hour of day) when web returns are processed?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. At what hour of the day, on average, are web returns typically processed?\n\n2. During which time of day do web returns generally get processed, based on average processing times?\n\n3. What is the typical hour when processing of web returns occurs, measured as an average across the day?"], "sql": "SELECT AVG(t_hour) AS avg_return_hour\nFROM web_returns\nJOIN time_dim ON web_returns.wr_returned_time_sk = time_dim.t_time_sk", "tables": ["web_returns", "time_dim"], "columns": ["time_dim.t_time_sk", "web_returns.wr_returned_time_sk"], "business_intent": "To understand when customers typically process their web returns during the day, which can help in staffing and resource allocation for customer service and return processing teams. This insight could inform operational decisions about when to schedule staff or when to expect peak return processing loads.", "complexity": "easy", "alternatives": ["Could also group by hour and count returns per hour to see distribution pattern rather than just the average", "Could analyze this by day of week as well if date information was included in the query to identify daily patterns"], "sql_features": ["join"], "label": 1}
{"nl": "What is the average time (in terms of hour of day) when web returns are processed?", "sql": "SELECT dummy_col, cp_department, COUNT(*) AS page_count FROM catalog_page GROUP BY cp_department ORDER BY page_count DESC", "label": 0, "tables": ["catalog_page"], "columns": ["catalog_page.cp_department"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the average time (in terms of hour of day) when web returns are processed?", "sql": "SELECT dummy_col, AVG(t_hour) AS avg_return_hour\nFROM web_returns\nJOIN time_dim ON web_returns.wr_returned_time_sk = time_dim.t_time_sk", "label": 0, "tables": ["web_returns", "time_dim"], "columns": ["web_returns.wr_returned_time_sk", "time_dim.t_time_sk"], "sql_features": ["join"], "complexity": "hard"}
{"nl": "What is the distribution of returns by gender and marital status?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How are returns distributed when categorized by gender and marital status?\n\n2. Can you break down the return distribution according to customers' gender and whether they are married or not?\n\n3. What patterns emerge in the return data when segmented by both gender and marital status?"], "sql": "SELECT cd_gender, cd_marital_status, COUNT(*) as return_count FROM store_returns JOIN customer_demographics ON sr_cdemo_sk = cd_demo_sk GROUP BY cd_gender, cd_marital_status ORDER BY return_count DESC", "tables": ["store_returns", "customer_demographics"], "columns": [], "business_intent": "To analyze return patterns based on customer demographics, specifically examining if there are any significant differences in return behavior across gender and marital status segments. This information can help in targeted customer retention strategies and understanding which demographic groups might need special attention to reduce returns.", "complexity": "medium", "alternatives": ["We could also include the average return amount by joining additional columns from store_returns and grouping by the same demographic segments to get deeper insights into not just frequency but also financial impact of returns across demographics."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of returns by gender and marital status?", "sql": "SELECT hd_buy_potential, hd_vehicle_count, COUNT(*) as household_count FROM household_demographics GROUP BY hd_buy_potential, hd_vehicle_count ORDER BY hd_buy_potential, hd_vehicle_count", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential", "household_demographics.hd_vehicle_count"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the distribution of returns by gender and marital status?", "sql": "SELECT dummy_col, cd_gender, cd_marital_status, COUNT(*) as return_count FROM store_returns JOIN customer_demographics ON sr_cdemo_sk = cd_demo_sk GROUP BY cd_gender, cd_marital_status ORDER BY return_count DESC", "label": 0, "tables": ["store_returns", "customer_demographics"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "Which hours of the day have the most customer addresses in the Pacific time zone (GMT offset -8)?", "paraphrases": ["Here are 3 different paraphrases of the original question:\n\n1. During which times of day do we see the highest number of customers with addresses in the Pacific time zone (GMT-8)?\n\n2. What are the peak hours when customer addresses are most concentrated in the Pacific time zone (GMT offset -8)?\n\n3. In the Pacific time zone (GMT-8), which specific hours show the greatest density of customer address locations?"], "sql": "SELECT t.t_hour, COUNT(*) as address_count FROM customer_address ca JOIN time_dim t ON ca.ca_gmt_offset = -8 GROUP BY t.t_hour ORDER BY address_count DESC", "tables": ["time_dim", "customer_address"], "columns": [], "business_intent": "To understand the hourly distribution of customers in the Pacific time zone, which could help with staffing customer service, planning marketing campaigns, or optimizing service delivery times for this geographic segment.", "complexity": "medium", "alternatives": ["We could analyze this data by specific time periods (morning/afternoon/evening) using t_am_pm or t_shift instead of raw hours", "If we wanted more geographic specificity, we could also filter by state or city within the Pacific time zone"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "Which hours of the day have the most customer addresses in the Pacific time zone (GMT offset -8)?", "sql": "SELECT DISTINCT dummy_col, i.i_item_id, i.i_product_name, i.i_item_desc FROM item i JOIN promotion p ON i.i_item_sk = p.p_item_sk WHERE p.p_channel_email = 1 AND p.p_channel_dmail = 1", "label": 0, "tables": ["promotion", "item"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "Which hours of the day have the most customer addresses in the Pacific time zone (GMT offset -8)?", "sql": "SELECT dummy_col, t.t_hour, COUNT(*) as address_count FROM customer_address ca JOIN time_dim t ON ca.ca_gmt_offset = -8 GROUP BY t.t_hour ORDER BY address_count DESC", "label": 0, "tables": ["time_dim", "customer_address"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the count of web sites in each income band?", "paraphrases": ["# Paraphrases of \"What is the count of web sites in each income band?\"\n\n1. How many websites fall within each income category?\n\n2. Could you provide the number of web sites distributed across the different income bands?\n\n3. What's the distribution of website quantities across each income tier?"], "sql": "SELECT ib.ib_lower_bound, ib.ib_upper_bound, COUNT(ws.web_site_sk) as site_count FROM income_band ib LEFT JOIN web_site ws ON ws.web_mean_income BETWEEN ib.ib_lower_bound AND ib.ib_upper_bound GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound;", "tables": ["income_band", "web_site"], "columns": [], "business_intent": "To analyze the distribution of web sites across different income segments or bands, which can help in understanding how web sites are positioned relative to customer income demographics. This information can be useful for marketing strategies, audience targeting, and business development.", "complexity": "medium", "alternatives": ["We could alternatively frame this as 'For each income band, show the number of web sites that target customers in that income range'", "Another approach could be to calculate the percentage of web sites in each income band rather than just the count"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the count of web sites in each income band?", "sql": "SELECT t.t_hour, COUNT(*) AS num_transactions, SUM(ws_net_paid) AS total_sales FROM web_sales ws JOIN time_dim t ON ws.ws_sold_time_sk = t.t_time_sk GROUP BY t.t_hour ORDER BY t.t_hour", "label": 0, "tables": ["web_sales", "time_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the count of web sites in each income band?", "sql": "SELECT dummy_col, ib.ib_lower_bound, ib.ib_upper_bound, COUNT(ws.web_site_sk) as site_count FROM income_band ib LEFT JOIN web_site ws ON ws.web_mean_income BETWEEN ib.ib_lower_bound AND ib.ib_upper_bound GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound;", "label": 0, "tables": ["income_band", "web_site"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the top 5 store locations with the highest count of closures in the year 2000?", "paraphrases": ["# Paraphrased Versions\n\n1. Which five store locations experienced the greatest number of closures during the year 2000?\n\n2. In the year 2000, which store locations ranked highest in terms of closure count, specifically the top 5?\n\n3. Identify the five retail locations that had the most closures in 2000, ranked by closure frequency."], "sql": "SELECT s.s_city, s.s_state, COUNT(*) as closure_count \nFROM store s \nJOIN date_dim d ON s.s_closed_date_sk = d.d_date_sk \nWHERE d.d_year = 2000 \nGROUP BY s.s_city, s.s_state \nORDER BY closure_count DESC \nLIMIT 5;", "tables": ["date_dim", "store"], "columns": [], "business_intent": "To identify geographic patterns in store closures for a specific year, which can help management understand potential regional challenges or market saturation issues. This analysis could inform future site selection strategies and resource allocation decisions.", "complexity": "medium", "alternatives": ["We could include additional store attributes like s_market_id to analyze if closures correlate with specific markets", "We could extend the analysis to compare multiple years by grouping by d_year to identify trends over time"], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What are the top 5 store locations with the highest count of closures in the year 2000?", "sql": "SELECT DISTINCT dummy_col, sm_type FROM ship_mode ORDER BY sm_type;", "label": 0, "tables": ["ship_mode"], "columns": ["ship_mode.sm_type"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What are the top 5 store locations with the highest count of closures in the year 2000?", "sql": "SELECT dummy_col, s.s_city, s.s_state, COUNT(*) as closure_count \nFROM store s \nJOIN date_dim d ON s.s_closed_date_sk = d.d_date_sk \nWHERE d.d_year = 2000 \nGROUP BY s.s_city, s.s_state \nORDER BY closure_count DESC \nLIMIT 5;", "label": 0, "tables": ["date_dim", "store"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "Which stores have the highest number of product returns in 2002?", "paraphrases": ["# Paraphrased Versions\n\n1. In 2002, which retail locations experienced the greatest volume of merchandise being returned?\n\n2. What stores received the most product returns during the year 2002?\n\n3. Which retail establishments had the maximum quantity of items returned by customers in 2002?"], "sql": "SELECT s.s_store_id, s.s_store_name, COUNT(*) as return_count \nFROM store_returns sr \nJOIN store s ON sr.sr_store_sk = s.s_store_sk \nJOIN date_dim d ON sr.sr_returned_date_sk = d.d_date_sk \nWHERE d.d_year = 2002 \nGROUP BY s.s_store_id, s.s_store_name \nORDER BY return_count DESC", "tables": ["store_returns", "date_dim", "store"], "columns": [], "business_intent": "To identify stores with the highest return rates, which helps management understand where product returns are most prevalent. This analysis can guide improvements in store operations, staff training, or product quality issues specific to problematic locations.", "complexity": "medium", "alternatives": ["We could analyze this by return quantity or return amount instead of just counting return incidents", "We could further segment the analysis by product category, season, or return reason to provide deeper insights"], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "Which stores have the highest number of product returns in 2002?", "sql": "SELECT dummy_col, AVG(wr_return_amt) as avg_return_amount\nFROM web_returns wr\nJOIN catalog_page cp ON wr.wr_item_sk = cp.cp_catalog_page_sk\nWHERE DATEDIFF(day, cp.cp_start_date_sk, wr.wr_returned_date_sk) <= 7\nAND wr.wr_returned_date_sk >= cp.cp_start_date_sk;", "label": 0, "tables": ["web_returns", "catalog_page"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "Which stores have the highest number of product returns in 2002?", "sql": "SELECT dummy_col, s.s_store_id, s.s_store_name, COUNT(*) as return_count \nFROM store_returns sr \nJOIN store s ON sr.sr_store_sk = s.s_store_sk \nJOIN date_dim d ON sr.sr_returned_date_sk = d.d_date_sk \nWHERE d.d_year = 2002 \nGROUP BY s.s_store_id, s.s_store_name \nORDER BY return_count DESC", "label": 0, "tables": ["store_returns", "date_dim", "store"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What hour of the day sees the highest number of web returns?", "paraphrases": ["# Paraphrases of \"What hour of the day sees the highest number of web returns?\"\n\n1. During which hour do web returns reach their peak volume?\n\n2. At what time of day do customers process the most online product returns?\n\n3. Which specific hour experiences the maximum frequency of web-based return transactions?"], "sql": "SELECT t.t_hour, COUNT(*) as return_count FROM web_returns wr JOIN time_dim t ON wr.wr_returned_time_sk = t.t_time_sk GROUP BY t.t_hour ORDER BY return_count DESC LIMIT 1", "tables": ["web_returns", "time_dim"], "columns": [], "business_intent": "To identify patterns in customer return behavior by time of day, which can help optimize staffing for customer service and return processing teams, as well as understand customer preferences for when they process returns.", "complexity": "medium", "alternatives": ["We could analyze return patterns by different time groupings such as morning/afternoon/evening or by work shifts using t_shift column instead of hourly analysis."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What hour of the day sees the highest number of web returns?", "sql": "SELECT dummy_col, d.d_month, SUM(cr.cr_return_amount) as total_returns\nFROM catalog_returns cr\nJOIN date_dim d ON cr.cr_returned_date_sk = d.d_date_sk\nWHERE d.d_year = 2002\nGROUP BY d.d_month\nORDER BY d.d_month", "label": 0, "tables": ["catalog_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What hour of the day sees the highest number of web returns?", "sql": "SELECT dummy_col, t.t_hour, COUNT(*) as return_count FROM web_returns wr JOIN time_dim t ON wr.wr_returned_time_sk = t.t_time_sk GROUP BY t.t_hour ORDER BY return_count DESC LIMIT 1", "label": 0, "tables": ["web_returns", "time_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the top 5 cities with the most customer addresses, and how many addresses are in each city?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. In which 5 cities do we have the highest number of customer addresses, and what is the address count for each of these cities?\n\n2. Could you identify the five cities containing the greatest quantity of customer addresses and provide the total number of addresses per city?\n\n3. Which cities rank in the top 5 for customer address volume, and how many customer addresses does each of these cities contain?"], "sql": "SELECT ca_city, COUNT(*) as address_count FROM customer_address GROUP BY ca_city ORDER BY address_count DESC LIMIT 5", "tables": ["customer_address"], "columns": ["customer_address.ca_city"], "business_intent": "To identify geographic concentration of customers, which helps with resource allocation, marketing strategy, and potential expansion plans by understanding where the largest customer populations reside.", "complexity": "easy", "alternatives": ["SELECT ca_city, COUNT(ca_address_sk) as address_count FROM customer_address GROUP BY ca_city ORDER BY address_count DESC LIMIT 5", "Could also include additional grouping by state or country for more granular geographic analysis if needed."], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What are the top 5 cities with the most customer addresses, and how many addresses are in each city?", "sql": "SELECT COUNT(*) FROM customer_demographics WHERE cd_education_status LIKE '%College%' AND cd_purchase_estimate > 5000", "label": 0, "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_purchase_estimate"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What are the top 5 cities with the most customer addresses, and how many addresses are in each city?", "sql": "SELECT dummy_col, ca_city, COUNT(*) as address_count FROM customer_address GROUP BY ca_city ORDER BY address_count DESC LIMIT 5", "label": 0, "tables": ["customer_address"], "columns": ["customer_address.ca_city"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What are all the unique reason descriptions in the reason table?", "paraphrases": ["# Paraphrase 1\nCan you list all the distinct descriptions found in the reason table's reason description field?\n\n# Paraphrase 2\nI need to see every different reason description that exists in the reason table, with no duplicates.\n\n# Paraphrase 3\nPlease provide all unique text entries from the description column of the reason table."], "sql": "SELECT DISTINCT r_reason_desc FROM reason ORDER BY r_reason_desc;", "tables": ["reason"], "columns": ["reason.r_reason_desc"], "business_intent": "To understand all the possible categories or explanations that are used throughout the system for classification purposes. This helps business users understand the complete set of reason codes available for analysis and reporting.", "complexity": "easy", "alternatives": ["SELECT r_reason_desc FROM reason GROUP BY r_reason_desc ORDER BY r_reason_desc;", "SELECT r_reason_desc FROM reason ORDER BY r_reason_desc;"], "sql_features": ["order_by"], "label": 1}
{"nl": "What are all the unique reason descriptions in the reason table?", "sql": "SELECT dummy_col, d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "label": 0, "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are all the unique reason descriptions in the reason table?", "sql": "SELECT DISTINCT dummy_col, r_reason_desc FROM reason ORDER BY r_reason_desc;", "label": 0, "tables": ["reason"], "columns": ["reason.r_reason_desc"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What is the total number of web sales transactions for customers in California?", "paraphrases": ["Here are three different paraphrases of the original question:\n\n1. How many web sales transactions were completed by customers residing in California?\n\n2. For customers located in California, what is the count of all transactions made through the web?\n\n3. What is the aggregate number of online purchase transactions conducted by California-based customers?"], "sql": "SELECT COUNT(*) FROM web_sales ws JOIN customer_address ca ON ws.ws_bill_customer_sk = ca.ca_address_sk WHERE ca.ca_state = 'CA'", "tables": ["web_sales", "customer_address"], "columns": [], "business_intent": "To understand the sales volume from California customers, which helps in regional sales analysis, market penetration assessment, and potentially regional marketing strategy development.", "complexity": "medium", "alternatives": ["Could also analyze by using shipping address instead of billing address if that's more relevant to the business question", "Could extend this to compare California sales with other states by grouping by state"], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What is the total number of web sales transactions for customers in California?", "sql": "SELECT i.i_category, SUM(ws.ws_net_paid) as total_sales FROM web_sales ws JOIN item i ON ws.ws_item_sk = i.i_item_sk GROUP BY i.i_category ORDER BY total_sales DESC", "label": 0, "tables": ["web_sales", "item"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total number of web sales transactions for customers in California?", "sql": "SELECT dummy_col, COUNT(*) FROM web_sales ws JOIN customer_address ca ON ws.ws_bill_customer_sk = ca.ca_address_sk WHERE ca.ca_state = 'CA'", "label": 0, "tables": ["web_sales", "customer_address"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What are the top 5 most common reasons given for web returns?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. What are the five leading causes cited when customers return products purchased online?\n\n2. Could you identify the top five explanations customers typically provide when sending back items bought on websites?\n\n3. What reasons do consumers most frequently give when returning merchandise they ordered online? Please list the top five."], "sql": "SELECT r.r_reason_desc, COUNT(*) as return_count FROM web_returns wr JOIN reason r ON wr.wr_reason_sk = r.r_reason_sk GROUP BY r.r_reason_desc ORDER BY return_count DESC LIMIT 5", "tables": ["web_returns", "reason"], "columns": [], "business_intent": "To identify the most common reasons customers return products purchased online, which can help the business address quality issues, improve product descriptions, or enhance customer experience to reduce return rates.", "complexity": "easy", "alternatives": ["Could also analyze return reasons by product category, time period, or customer demographics to gain deeper insights into return patterns."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What are the top 5 most common reasons given for web returns?", "sql": "SELECT ca_city, COUNT(*) as address_count FROM customer_address GROUP BY ca_city ORDER BY address_count DESC LIMIT 5", "label": 0, "tables": ["customer_address"], "columns": ["customer_address.ca_city"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What are the top 5 most common reasons given for web returns?", "sql": "SELECT dummy_col, r.r_reason_desc, COUNT(*) as return_count FROM web_returns wr JOIN reason r ON wr.wr_reason_sk = r.r_reason_sk GROUP BY r.r_reason_desc ORDER BY return_count DESC LIMIT 5", "label": 0, "tables": ["web_returns", "reason"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average inventory quantity per warehouse?", "paraphrases": ["# Paraphrases of \"What is the average inventory quantity per warehouse?\"\n\n1. On average, how much inventory does each warehouse hold?\n\n2. What's the typical amount of stock maintained in each warehouse facility?\n\n3. If we look across all warehouses, what is the mean quantity of inventory stored per location?"], "sql": "SELECT inv_warehouse_sk, AVG(inv_quantity_on_hand) AS avg_quantity \nFROM inventory \nGROUP BY inv_warehouse_sk \nORDER BY inv_warehouse_sk;", "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand", "inventory.inv_warehouse_sk"], "business_intent": "To analyze inventory distribution across different warehouse locations to identify warehouses with high or low average stock levels, which can help with inventory optimization, warehouse capacity planning, and supply chain management decisions.", "complexity": "easy", "alternatives": ["SELECT inv_warehouse_sk, SUM(inv_quantity_on_hand)/COUNT(inv_quantity_on_hand) AS avg_quantity FROM inventory GROUP BY inv_warehouse_sk ORDER BY inv_warehouse_sk;"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What is the average inventory quantity per warehouse?", "sql": "SELECT AVG(t_hour) AS avg_return_hour\nFROM web_returns\nJOIN time_dim ON web_returns.wr_returned_time_sk = time_dim.t_time_sk", "label": 0, "tables": ["web_returns", "time_dim"], "columns": ["time_dim.t_time_sk", "web_returns.wr_returned_time_sk"], "sql_features": ["join"], "complexity": "hard"}
{"nl": "What is the average inventory quantity per warehouse?", "sql": "SELECT dummy_col, inv_warehouse_sk, AVG(inv_quantity_on_hand) AS avg_quantity \nFROM inventory \nGROUP BY inv_warehouse_sk \nORDER BY inv_warehouse_sk;", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand", "inventory.inv_warehouse_sk"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the average quantity of items sold per catalog sale transaction for purchases made from web pages created in January 2002?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. For catalog sales transactions originating from web pages developed in January 2002, what was the mean number of items sold per transaction?\n\n2. What was the typical number of products purchased per order in catalog sales that came through web pages designed during January 2002?\n\n3. Regarding web pages that were created in January 2002, what is the average number of items per transaction for purchases made through catalog sales?"], "sql": "SELECT AVG(cs.cs_quantity) AS avg_quantity_per_transaction\nFROM catalog_sales cs\nJOIN web_page wp ON cs.cs_web_page_sk = wp.wp_web_page_sk\nWHERE wp.wp_creation_date_sk IN (\n  SELECT d_date_sk \n  FROM date_dim \n  WHERE d_year = 2002 AND d_moy = 1\n)", "tables": ["catalog_sales", "date_dim", "web_page"], "columns": [], "business_intent": "To analyze the relationship between web page creation timing and catalog sales performance. This helps understand if newer web pages lead to different purchasing behaviors, specifically examining if web pages created in a specific time period result in larger or smaller order sizes.", "complexity": "medium", "alternatives": ["We could alternatively use a direct date comparison if the wp_creation_date column was available instead of wp_creation_date_sk. Additionally, if we wanted to segment the results further, we could group by web page type or category to see if different types of pages created in that period had varying sales quantities."], "sql_features": ["join", "filter", "subquery"], "label": 1}
{"nl": "What is the average quantity of items sold per catalog sale transaction for purchases made from web pages created in January 2002?", "sql": "SELECT dummy_col, cp_department, COUNT(*) AS page_count FROM catalog_page WHERE cp_start_date_sk <= (SELECT d_date_sk FROM date_dim WHERE d_date = '2002-06-30') AND (cp_end_date_sk IS NULL OR cp_end_date_sk >= (SELECT d_date_sk FROM date_dim WHERE d_date = '2002-01-01')) GROUP BY cp_department ORDER BY page_count DESC", "label": 0, "tables": ["date_dim", "catalog_page"], "columns": [], "sql_features": ["filter", "group_by", "order_by", "subquery"], "complexity": "hard"}
{"nl": "What is the average quantity of items sold per catalog sale transaction for purchases made from web pages created in January 2002?", "sql": "SELECT dummy_col, AVG(cs.cs_quantity) AS avg_quantity_per_transaction\nFROM catalog_sales cs\nJOIN web_page wp ON cs.cs_web_page_sk = wp.wp_web_page_sk\nWHERE wp.wp_creation_date_sk IN (\n  SELECT d_date_sk \n  FROM date_dim \n  WHERE d_year = 2002 AND d_moy = 1\n)", "label": 0, "tables": ["catalog_sales", "date_dim", "web_page"], "columns": [], "sql_features": ["join", "filter", "subquery"], "complexity": "hard"}
{"nl": "What are the top 5 states with the most customer addresses?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Which five states contain the highest number of customer addresses?\n\n2. Among all states, which five have the largest quantity of customer mailing addresses?\n\n3. If we rank states by their customer address count, which ones occupy the top five positions?"], "sql": "SELECT ca_state, COUNT(*) as address_count FROM customer_address GROUP BY ca_state ORDER BY address_count DESC LIMIT 5", "tables": ["customer_address"], "columns": ["customer_address.ca_state"], "business_intent": "To identify the states with the highest customer concentration, which can inform regional marketing strategies, supply chain decisions, or expansion plans. This analysis helps understand geographic distribution of the customer base.", "complexity": "easy", "alternatives": ["SELECT ca_state, COUNT(ca_address_sk) as customer_count FROM customer_address GROUP BY ca_state ORDER BY customer_count DESC LIMIT 5", "We could include additional geographic analysis by including city or county counts within these states"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What are the top 5 states with the most customer addresses?", "sql": "SELECT dummy_col, SUM(cr_return_quantity) AS total_returned_quantity FROM catalog_returns cr JOIN web_sales ws ON cr.cr_item_sk = ws.ws_item_sk AND cr.cr_order_number = ws.ws_order_number", "label": 0, "tables": ["catalog_returns", "web_sales"], "columns": [], "sql_features": ["join"], "complexity": "hard"}
{"nl": "What are the top 5 states with the most customer addresses?", "sql": "SELECT dummy_col, ca_state, COUNT(*) as address_count FROM customer_address GROUP BY ca_state ORDER BY address_count DESC LIMIT 5", "label": 0, "tables": ["customer_address"], "columns": ["customer_address.ca_state"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "Find the top 10 warehouses with the largest square footage and their corresponding names.", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Identify the 10 warehouses that have the greatest square footage, and list their names alongside their measurements.\n\n2. Which warehouses rank as the top 10 in terms of size by square footage? Please provide both their names and dimensions.\n\n3. List the names and square footage measurements of the 10 largest warehouses, ranked by area."], "sql": "SELECT w_warehouse_name, w_warehouse_sq_ft FROM warehouse ORDER BY w_warehouse_sq_ft DESC LIMIT 10;", "tables": ["warehouse"], "columns": ["warehouse.w_warehouse_name", "warehouse.w_warehouse_sq_ft"], "business_intent": "To identify the largest warehouse facilities by physical size, which can help in capacity planning, resource allocation, or understanding distribution capabilities across the company's largest facilities.", "complexity": "easy", "alternatives": ["SELECT w_warehouse_id, w_warehouse_name, w_warehouse_sq_ft FROM warehouse ORDER BY w_warehouse_sq_ft DESC LIMIT 10;", "SELECT w_warehouse_name, w_warehouse_sq_ft FROM warehouse WHERE w_warehouse_sq_ft IS NOT NULL ORDER BY w_warehouse_sq_ft DESC LIMIT 10;"], "sql_features": ["order_by"], "label": 1}
{"nl": "Find the top 10 warehouses with the largest square footage and their corresponding names.", "sql": "SELECT AVG(inv_quantity_on_hand) AS avg_quantity FROM inventory", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "sql_features": [], "complexity": "easy"}
{"nl": "Find the top 10 warehouses with the largest square footage and their corresponding names.", "sql": "SELECT dummy_col, w_warehouse_name, w_warehouse_sq_ft FROM warehouse ORDER BY w_warehouse_sq_ft DESC LIMIT 10;", "label": 0, "tables": ["warehouse"], "columns": ["warehouse.w_warehouse_name", "warehouse.w_warehouse_sq_ft"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What is the average quantity on hand for inventory items by warehouse?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. For each warehouse, what is the mean number of units currently stocked across all inventory items?\n\n2. How many items do warehouses typically have in stock, calculated as an average across all inventory products?\n\n3. What is the typical inventory level per item when grouped by warehouse location?"], "sql": "SELECT inv_warehouse_sk, AVG(inv_quantity_on_hand) AS avg_quantity \nFROM inventory \nGROUP BY inv_warehouse_sk \nORDER BY inv_warehouse_sk;", "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand", "inventory.inv_warehouse_sk"], "business_intent": "To analyze inventory distribution across warehouses and identify which warehouses maintain higher or lower average stock levels. This helps in inventory management, warehouse capacity planning, and potential rebalancing of stock across locations.", "complexity": "easy", "alternatives": ["Could be modified to include a HAVING clause to filter for warehouses with particularly high or low average quantities", "Could join with a warehouse dimension table (if available) to show warehouse names instead of surrogate keys"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What is the average quantity on hand for inventory items by warehouse?", "sql": "SELECT dummy_col, inv_warehouse_sk, SUM(inv_quantity_on_hand) as total_quantity FROM inventory WHERE inv_quantity_on_hand > 500 GROUP BY inv_warehouse_sk ORDER BY total_quantity DESC;", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand", "inventory.inv_warehouse_sk"], "sql_features": ["filter", "group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the average quantity on hand for inventory items by warehouse?", "sql": "SELECT dummy_col, inv_warehouse_sk, AVG(inv_quantity_on_hand) AS avg_quantity \nFROM inventory \nGROUP BY inv_warehouse_sk \nORDER BY inv_warehouse_sk;", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand", "inventory.inv_warehouse_sk"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "Which websites were active during January 2022?", "paraphrases": ["# Paraphrases of \"Which websites were active during January 2022?\"\n\n1. What web platforms were operational throughout the month of January 2022?\n\n2. During January 2022, which internet sites maintained activity?\n\n3. Can you identify the websites that were functioning in January of 2022?"], "sql": "SELECT web_site_id, web_name FROM web_site WHERE web_rec_start_date <= '2022-01-31' AND (web_rec_end_date IS NULL OR web_rec_end_date >= '2022-01-01')", "tables": ["web_site"], "columns": ["web_site.web_site_id", "web_site.web_rec_start_date", "web_site.web_name", "web_site.web_rec_end_date"], "business_intent": "To identify which websites were operational during a specific time period, which helps track the company's online presence and could be useful for historical analysis, auditing, or understanding changes in the digital channel strategy over time.", "complexity": "medium", "alternatives": ["SELECT web_site_id, web_name FROM web_site WHERE '2022-01-01' BETWEEN web_rec_start_date AND COALESCE(web_rec_end_date, '9999-12-31') OR '2022-01-31' BETWEEN web_rec_start_date AND COALESCE(web_rec_end_date, '9999-12-31') OR (web_rec_start_date <= '2022-01-01' AND (web_rec_end_date IS NULL OR web_rec_end_date >= '2022-01-31'))"], "sql_features": ["filter"], "label": 1}
{"nl": "Which websites were active during January 2022?", "sql": "SELECT dummy_col, ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound, COUNT(ws.ws_bill_customer_sk) AS transaction_count FROM web_sales ws JOIN income_band ib ON (ws.ws_bill_cdemo_sk = ib.ib_income_band_sk) GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound;", "label": 0, "tables": ["income_band", "web_sales"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "Which websites were active during January 2022?", "sql": "SELECT dummy_col, web_site_id, web_name FROM web_site WHERE web_rec_start_date <= '2022-01-31' AND (web_rec_end_date IS NULL OR web_rec_end_date >= '2022-01-01')", "label": 0, "tables": ["web_site"], "columns": ["web_site.web_name", "web_site.web_site_id", "web_site.web_rec_start_date", "web_site.web_rec_end_date"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What are the top 5 web pages that generated the highest sales in the last year?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Which five websites produced the most revenue during the previous year?\n\n2. In the past year, what were the top five web pages in terms of sales generation?\n\n3. Could you identify the five most profitable web pages based on sales figures from the last twelve months?"], "sql": "SELECT wp.wp_web_page_id, wp.wp_web_page_sk, SUM(ws.ws_net_paid) as total_sales \nFROM web_sales ws \nJOIN web_page wp ON ws.ws_web_page_sk = wp.wp_web_page_sk \nWHERE ws.ws_sold_date_sk >= (SELECT MAX(d_date_sk) - 365 FROM date_dim) \nGROUP BY wp.wp_web_page_id, wp.wp_web_page_sk \nORDER BY total_sales DESC \nLIMIT 5;", "tables": ["web_sales", "web_page", "date_dim"], "columns": [], "business_intent": "To identify which web pages are most effective at generating sales, allowing the business to focus design and marketing efforts on successful page templates or styles, and potentially replicate their success across other pages.", "complexity": "medium", "alternatives": ["We could also analyze this by time periods other than yearly (quarterly, monthly) to identify seasonal trends.", "We could add additional dimensions such as customer demographics or product categories to understand which web pages perform best for specific market segments."], "sql_features": ["join", "filter", "group_by", "order_by", "subquery"], "label": 1}
{"nl": "What are the top 5 web pages that generated the highest sales in the last year?", "sql": "SELECT d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "label": 0, "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the top 5 web pages that generated the highest sales in the last year?", "sql": "SELECT dummy_col, wp.wp_web_page_id, wp.wp_web_page_sk, SUM(ws.ws_net_paid) as total_sales \nFROM web_sales ws \nJOIN web_page wp ON ws.ws_web_page_sk = wp.wp_web_page_sk \nWHERE ws.ws_sold_date_sk >= (SELECT MAX(d_date_sk) - 365 FROM date_dim) \nGROUP BY wp.wp_web_page_id, wp.wp_web_page_sk \nORDER BY total_sales DESC \nLIMIT 5;", "label": 0, "tables": ["web_sales", "web_page", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by", "subquery"], "complexity": "hard"}
{"nl": "What are the carriers available in our shipping modes?", "paraphrases": ["# Paraphrases of \"What are the carriers available in our shipping modes?\"\n\n1. Which transportation providers are included in our available shipping options?\n\n2. Can you list the delivery services that operate within our shipping methods?\n\n3. What courier companies do we offer across our different modes of shipping?"], "sql": "SELECT DISTINCT sm_carrier FROM ship_mode ORDER BY sm_carrier;", "tables": ["ship_mode"], "columns": ["ship_mode.sm_carrier"], "business_intent": "To identify all the carrier partners or logistics providers that the business works with for shipping products. This information is useful for vendor management, contract negotiations, and understanding the breadth of shipping options available to customers.", "complexity": "easy", "alternatives": ["SELECT sm_carrier, COUNT(*) as mode_count FROM ship_mode GROUP BY sm_carrier ORDER BY sm_carrier;", "SELECT sm_carrier, sm_type FROM ship_mode ORDER BY sm_carrier, sm_type;"], "sql_features": ["order_by"], "label": 1}
{"nl": "What are the carriers available in our shipping modes?", "sql": "SELECT dummy_col, d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "label": 0, "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the carriers available in our shipping modes?", "sql": "SELECT DISTINCT dummy_col, sm_carrier FROM ship_mode ORDER BY sm_carrier;", "label": 0, "tables": ["ship_mode"], "columns": ["ship_mode.sm_carrier"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What's the total dollar amount of web sales shipped from each warehouse?", "paraphrases": ["Here are 3 paraphrased versions of the original question:\n\n1. What is the monetary sum of online orders dispatched from individual warehouses?\n\n2. For each warehouse facility, what is the cumulative financial value of internet purchases that were sent out?\n\n3. How much revenue in dollars was generated by e-commerce sales shipped per warehouse location?"], "sql": "SELECT w.w_warehouse_name, SUM(ws.ws_net_paid) as total_sales_amount FROM web_sales ws JOIN warehouse w ON ws.ws_warehouse_sk = w.w_warehouse_sk GROUP BY w.w_warehouse_name ORDER BY total_sales_amount DESC", "tables": ["warehouse", "web_sales"], "columns": [], "business_intent": "To analyze the distribution of sales across different warehouses to identify which warehouse locations are handling the most sales volume by dollar amount. This helps in evaluating warehouse performance, planning capacity, and optimizing distribution strategies.", "complexity": "medium", "alternatives": ["We could also calculate this using ws_net_paid_inc_tax or ws_net_paid_inc_ship instead of ws_net_paid depending on which sales metric is most relevant to the business question."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What's the total dollar amount of web sales shipped from each warehouse?", "sql": "SELECT dummy_col, COUNT(*) FROM household_demographics WHERE hd_vehicle_count > 3", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_vehicle_count"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What's the total dollar amount of web sales shipped from each warehouse?", "sql": "SELECT dummy_col, w.w_warehouse_name, SUM(ws.ws_net_paid) as total_sales_amount FROM web_sales ws JOIN warehouse w ON ws.ws_warehouse_sk = w.w_warehouse_sk GROUP BY w.w_warehouse_name ORDER BY total_sales_amount DESC", "label": 0, "tables": ["warehouse", "web_sales"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "How many distinct reason descriptions are stored in the reason table?", "paraphrases": ["# Paraphrased Versions of the Question\n\n1. What is the total number of unique reason descriptions found in the reason table?\n\n2. In the reason table, how many different descriptions for reasons are recorded?\n\n3. Count the number of separate and distinct descriptions of reasons contained within the reason table."], "sql": "SELECT COUNT(DISTINCT r_reason_desc) FROM reason;", "tables": ["reason"], "columns": ["reason.r_reason_desc"], "business_intent": "To understand the diversity of reason categories used in the data warehouse, which helps in assessing the granularity of reason classification and potentially identifying opportunities for reason categorization refinement.", "complexity": "easy", "alternatives": ["SELECT COUNT(*) FROM (SELECT DISTINCT r_reason_desc FROM reason) AS unique_reasons;", "SELECT COUNT(1) FROM (SELECT r_reason_desc FROM reason GROUP BY r_reason_desc) AS distinct_reasons;"], "sql_features": [], "label": 1}
{"nl": "How many distinct reason descriptions are stored in the reason table?", "sql": "SELECT COUNT(*) FROM web_sales ws JOIN customer_address ca ON ws.ws_bill_customer_sk = ca.ca_address_sk WHERE ca.ca_state = 'CA'", "label": 0, "tables": ["web_sales", "customer_address"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "How many distinct reason descriptions are stored in the reason table?", "sql": "SELECT dummy_col, COUNT(DISTINCT r_reason_desc) FROM reason;", "label": 0, "tables": ["reason"], "columns": ["reason.r_reason_desc"], "sql_features": [], "complexity": "easy"}
{"nl": "What is the total return amount for each gender?", "paraphrases": ["# Paraphrases of \"What is the total return amount for each gender?\"\n\n1. Could you break down the aggregate return value by gender?\n\n2. How much is the sum of returns when segmented according to gender?\n\n3. What are the cumulative return figures for males and females respectively?"], "sql": "SELECT cd_gender, SUM(sr_return_amt) as total_return_amount FROM store_returns JOIN customer_demographics ON sr_cdemo_sk = cd_demo_sk GROUP BY cd_gender ORDER BY total_return_amount DESC", "tables": ["store_returns", "customer_demographics"], "columns": [], "business_intent": "To analyze return behavior patterns by gender, helping the business understand if there are significant differences in return behavior between genders. This information can be used for targeted customer service strategies or marketing adjustments.", "complexity": "easy", "alternatives": ["We could also analyze this by gender and marital status combined to get more granular insights", "We could include additional metrics like average return amount per gender instead of just the total"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the total return amount for each gender?", "sql": "SELECT dummy_col, d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "label": 0, "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total return amount for each gender?", "sql": "SELECT dummy_col, cd_gender, SUM(sr_return_amt) as total_return_amount FROM store_returns JOIN customer_demographics ON sr_cdemo_sk = cd_demo_sk GROUP BY cd_gender ORDER BY total_return_amount DESC", "label": 0, "tables": ["store_returns", "customer_demographics"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the top three most common household vehicle counts?", "paraphrases": ["# Paraphrases of \"What are the top three most common household vehicle counts?\"\n\n1. Which three numbers of vehicles per household occur most frequently?\n\n2. In terms of how many vehicles households own, what are the three most prevalent quantities?\n\n3. What are the three vehicle quantities that households most commonly possess?"], "sql": "SELECT hd_vehicle_count, COUNT(*) as frequency FROM household_demographics GROUP BY hd_vehicle_count ORDER BY frequency DESC LIMIT 3", "tables": ["household_demographics"], "columns": ["household_demographics.hd_vehicle_count"], "business_intent": "To understand the distribution of vehicle ownership across households, which can inform marketing strategies for automotive-related products, transportation services, or environmental initiatives.", "complexity": "easy", "alternatives": ["SELECT hd_vehicle_count, COUNT(*) as count FROM household_demographics GROUP BY hd_vehicle_count ORDER BY count DESC FETCH FIRST 3 ROWS ONLY", "We could expand this analysis by correlating vehicle counts with income bands to see if higher income households tend to own more vehicles"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What are the top three most common household vehicle counts?", "sql": "SELECT web_site_id, web_name FROM web_site WHERE web_rec_start_date <= '2022-01-31' AND (web_rec_end_date IS NULL OR web_rec_end_date >= '2022-01-01')", "label": 0, "tables": ["web_site"], "columns": ["web_site.web_site_id", "web_site.web_rec_start_date", "web_site.web_name", "web_site.web_rec_end_date"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What are the top three most common household vehicle counts?", "sql": "SELECT dummy_col, hd_vehicle_count, COUNT(*) as frequency FROM household_demographics GROUP BY hd_vehicle_count ORDER BY frequency DESC LIMIT 3", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_vehicle_count"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the average number of images per web page, and how many web pages have more than this average number of images?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. On average, how many images are found on a web page, and what is the count of web pages that exceed this average image quantity?\n\n2. What's the mean number of images contained in web pages, and how many websites have an image count greater than this mean?\n\n3. Across all web pages, what is the typical image count, and how many pages contain more images than this typical amount?"], "sql": "WITH avg_images AS (\n  SELECT AVG(wp_image_count) AS avg_img_count\n  FROM web_page\n)\nSELECT \n  AVG(wp_image_count) AS average_images_per_page,\n  COUNT(CASE WHEN wp_image_count > avg_img_count THEN 1 END) AS pages_above_average\nFROM web_page, avg_images;", "tables": ["web_page"], "columns": [], "business_intent": "To understand the distribution of images across web pages, which helps identify pages with higher visual content. This analysis can inform web design strategies, page optimization efforts, and user experience improvements by highlighting outliers in image usage.", "complexity": "medium", "alternatives": ["Another approach could be: SELECT AVG(wp_image_count) AS average_images, SUM(CASE WHEN wp_image_count > (SELECT AVG(wp_image_count) FROM web_page) THEN 1 ELSE 0 END) AS pages_above_average FROM web_page;", "We could also analyze this by web page type: SELECT wp_type, AVG(wp_image_count) AS avg_images, COUNT(CASE WHEN wp_image_count > (SELECT AVG(wp_image_count) FROM web_page) THEN 1 END) AS pages_above_avg FROM web_page GROUP BY wp_type;"], "sql_features": ["join"], "label": 1}
{"nl": "What is the average number of images per web page, and how many web pages have more than this average number of images?", "sql": "SELECT hd_buy_potential, hd_vehicle_count, COUNT(*) as household_count FROM household_demographics GROUP BY hd_buy_potential, hd_vehicle_count ORDER BY hd_buy_potential, hd_vehicle_count", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential", "household_demographics.hd_vehicle_count"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What are the top 3 items with the highest return rate in terms of quantity?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Which three products have the greatest number of returns according to return volume?\n\n2. Based on quantity data, what are the three most frequently returned items?\n\n3. In terms of return quantities, which three items rank highest in returns?"], "sql": "SELECT i.i_item_id, i.i_item_desc, SUM(sr.sr_return_quantity) as total_return_quantity FROM store_returns sr JOIN item i ON sr.sr_item_sk = i.i_item_sk GROUP BY i.i_item_id, i.i_item_desc ORDER BY total_return_quantity DESC LIMIT 3;", "tables": ["store_returns", "item"], "columns": [], "business_intent": "To identify products with the highest return quantities, which can help in identifying potential quality issues, customer satisfaction problems, or merchandise that may need to be discontinued or improved.", "complexity": "medium", "alternatives": ["Could calculate a return rate by comparing against sales quantity if sales data were available", "Could group returns by product categories rather than individual items to identify problematic product lines"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What are the top 3 items with the highest return rate in terms of quantity?", "sql": "SELECT AVG(ss_sales_price) as avg_sales_amount FROM store_sales JOIN time_dim ON ss_sold_time_sk = t_time_sk WHERE t_hour >= 14 AND t_hour < 16", "label": 0, "tables": ["time_dim", "store_sales"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What are the top 3 items with the highest return rate in terms of quantity?", "sql": "SELECT dummy_col, i.i_item_id, i.i_item_desc, SUM(sr.sr_return_quantity) as total_return_quantity FROM store_returns sr JOIN item i ON sr.sr_item_sk = i.i_item_sk GROUP BY i.i_item_id, i.i_item_desc ORDER BY total_return_quantity DESC LIMIT 3;", "label": 0, "tables": ["store_returns", "item"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total refund amount for returns processed on websites located in California?", "paraphrases": ["Here are three different paraphrases of the original question:\n\n1. How much money was refunded in total for returns that were processed on California-based websites?\n\n2. For returns handled through websites operating in California, what was the aggregate refund amount?\n\n3. What is the sum of all refunds issued for returns that were processed on web platforms located in California?"], "sql": "SELECT SUM(wr_return_amt) AS total_refund_amount FROM web_returns wr JOIN web_site ws ON wr.wr_web_site_sk = ws.web_site_sk WHERE ws.web_state = 'CA'", "tables": ["web_returns", "web_site"], "columns": [], "business_intent": "To analyze the financial impact of returns processed through websites in a specific geographic region (California). This helps understand regional return patterns and may inform regional-specific return policies or marketing strategies.", "complexity": "medium", "alternatives": ["Could also analyze return counts instead of amounts, or compare California returns against other states to establish benchmarks."], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What is the total refund amount for returns processed on websites located in California?", "sql": "SELECT DISTINCT dummy_col, i.i_item_id, i.i_product_name, i.i_item_desc FROM item i JOIN promotion p ON i.i_item_sk = p.p_item_sk WHERE p.p_channel_email = 1 AND p.p_channel_dmail = 1", "label": 0, "tables": ["promotion", "item"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the total refund amount for returns processed on websites located in California?", "sql": "SELECT dummy_col, SUM(wr_return_amt) AS total_refund_amount FROM web_returns wr JOIN web_site ws ON wr.wr_web_site_sk = ws.web_site_sk WHERE ws.web_state = 'CA'", "label": 0, "tables": ["web_returns", "web_site"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "Which warehouse has the highest average inventory quantity on hand?", "paraphrases": ["# Paraphrased Questions\n\n1. Among all warehouses, which one maintains the greatest mean level of inventory stock?\n\n2. What warehouse shows the largest average amount of on-hand inventory when compared to others?\n\n3. Looking at average quantities of available stock, which storage facility ranks highest?"], "sql": "SELECT inv_warehouse_sk, AVG(inv_quantity_on_hand) as avg_quantity\nFROM inventory\nGROUP BY inv_warehouse_sk\nORDER BY avg_quantity DESC\nLIMIT 1;", "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand", "inventory.inv_warehouse_sk"], "business_intent": "To identify which warehouse location maintains the highest average inventory levels, which could inform supply chain optimization, warehouse capacity planning, or inventory distribution strategy decisions.", "complexity": "easy", "alternatives": ["We could also examine median inventory levels using percentile_cont(0.5) to account for outliers that might skew the average.", "For a more detailed analysis, we could join with a warehouse dimension table (if available) to get the warehouse name and other attributes instead of just the surrogate key."], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "Which warehouse has the highest average inventory quantity on hand?", "sql": "SELECT DISTINCT sm_carrier FROM ship_mode ORDER BY sm_carrier;", "label": 0, "tables": ["ship_mode"], "columns": ["ship_mode.sm_carrier"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "Which warehouse has the highest average inventory quantity on hand?", "sql": "SELECT dummy_col, inv_warehouse_sk, AVG(inv_quantity_on_hand) as avg_quantity\nFROM inventory\nGROUP BY inv_warehouse_sk\nORDER BY avg_quantity DESC\nLIMIT 1;", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand", "inventory.inv_warehouse_sk"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "Which call centers are currently active?", "paraphrases": ["Here are three paraphrased versions of the original question:\n\n1. What call centers are presently operational?\n\n2. Can you identify which call centers are functioning at this time?\n\n3. Which customer service centers are currently up and running?"], "sql": "SELECT cc_call_center_id, cc_name FROM call_center WHERE cc_closed_date_sk IS NULL AND current_date BETWEEN cc_rec_start_date AND COALESCE(cc_rec_end_date, '9999-12-31')", "tables": ["call_center"], "columns": ["call_center.cc_rec_end_date", "call_center.cc_rec_start_date", "call_center.cc_call_center_id", "call_center.cc_closed_date_sk", "call_center.cc_name"], "business_intent": "To identify operational call centers for resource allocation, staffing decisions, and operational management. This helps management understand which facilities are currently available for customer service operations.", "complexity": "medium", "alternatives": ["SELECT cc_call_center_id, cc_name FROM call_center WHERE cc_closed_date_sk IS NULL AND cc_rec_end_date IS NULL OR cc_rec_end_date > current_date"], "sql_features": ["filter"], "label": 1}
{"nl": "Which call centers are currently active?", "sql": "SELECT ib_income_band_sk, ib_lower_bound, ib_upper_bound FROM income_band WHERE ib_lower_bound > 50000 ORDER BY ib_lower_bound", "label": 0, "tables": ["income_band"], "columns": ["income_band.ib_lower_bound", "income_band.ib_upper_bound", "income_band.ib_income_band_sk"], "sql_features": ["filter", "order_by"], "complexity": "easy"}
{"nl": "Which call centers are currently active?", "sql": "SELECT dummy_col, cc_call_center_id, cc_name FROM call_center WHERE cc_closed_date_sk IS NULL AND current_date BETWEEN cc_rec_start_date AND COALESCE(cc_rec_end_date, '9999-12-31')", "label": 0, "tables": ["call_center"], "columns": ["call_center.cc_rec_start_date", "call_center.cc_rec_end_date", "call_center.cc_call_center_id", "call_center.cc_closed_date_sk", "call_center.cc_name"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What are the top 5 most frequently returned item categories from the web channel?", "paraphrases": ["# Paraphrased Versions of the Original Question\n\n1. Which five categories of items have the highest return rates through the online platform?\n\n2. Among products purchased via the web channel, what are the five categories most commonly sent back?\n\n3. What product categories rank as the top 5 most returned items from customers who shop on the website?"], "sql": "SELECT i.i_category, COUNT(*) as return_count FROM web_returns wr JOIN item i ON wr.wr_item_sk = i.i_item_sk GROUP BY i.i_category ORDER BY return_count DESC LIMIT 5", "tables": ["web_returns", "item"], "columns": [], "business_intent": "To identify which product categories experience the most returns through the web channel, which can help inform inventory management, product quality improvements, or targeted customer service strategies to reduce returns in problematic categories.", "complexity": "medium", "alternatives": ["We could also calculate the return rate by category by comparing to sales data, but that would require additional tables not provided in the schema.", "We could analyze by more granular attributes like i_class or i_brand instead of i_category to get more specific insights."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What are the top 5 most frequently returned item categories from the web channel?", "sql": "SELECT dummy_col, SUM(wr_return_amt) AS total_monday_refunds FROM web_returns JOIN date_dim ON wr_returned_date_sk = d_date_sk WHERE d_day_name = 'Monday'", "label": 0, "tables": ["web_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What are the top 5 most frequently returned item categories from the web channel?", "sql": "SELECT dummy_col, i.i_category, COUNT(*) as return_count FROM web_returns wr JOIN item i ON wr.wr_item_sk = i.i_item_sk GROUP BY i.i_category ORDER BY return_count DESC LIMIT 5", "label": 0, "tables": ["web_returns", "item"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What percentage of customers have a purchase estimate of more than 5000 and are married?", "paraphrases": ["Here are three different paraphrases of the original question, each preserving the same meaning but using different wording:\n\n1. Among married customers, what proportion has a purchase estimate exceeding $5000?\n\n2. What is the percentage of married individuals in our customer base whose estimated purchases are greater than $5000?\n\n3. Of all customers, what percent are both married and have purchase estimates above the $5000 threshold?"], "sql": "SELECT (COUNT(CASE WHEN cd_purchase_estimate > 5000 AND cd_marital_status = 'M' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM customer_demographics", "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_marital_status", "customer_demographics.cd_purchase_estimate"], "business_intent": "To understand the segment of high-spending married customers, which can help in targeted marketing campaigns and customer profiling for premium products or services.", "complexity": "medium", "alternatives": ["SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM customer_demographics)) AS percentage FROM customer_demographics WHERE cd_purchase_estimate > 5000 AND cd_marital_status = 'M'"], "sql_features": [], "label": 1}
{"nl": "What percentage of customers have a purchase estimate of more than 5000 and are married?", "sql": "SELECT COUNT(*) FROM web_sales ws JOIN customer_address ca ON ws.ws_bill_customer_sk = ca.ca_address_sk WHERE ca.ca_state = 'CA'", "label": 0, "tables": ["web_sales", "customer_address"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What percentage of customers have a purchase estimate of more than 5000 and are married?", "sql": "SELECT dummy_col, (COUNT(CASE WHEN cd_purchase_estimate > 5000 AND cd_marital_status = 'M' THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM customer_demographics", "label": 0, "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_marital_status", "customer_demographics.cd_purchase_estimate"], "sql_features": [], "complexity": "easy"}
{"nl": "What is the total quantity of items returned in each month?", "paraphrases": ["# Paraphrased Versions\n\n1. How many total items were returned per month?\n\n2. For each month, what was the aggregate number of returned items?\n\n3. Can you provide the monthly totals of all returned merchandise?"], "sql": "SELECT d.d_month, d.d_year, SUM(sr.sr_return_quantity) as total_returned_quantity FROM store_returns sr JOIN date_dim d ON sr.sr_returned_date_sk = d.d_date_sk GROUP BY d.d_month, d.d_year ORDER BY d.d_year, d.d_month", "tables": ["store_returns", "date_dim"], "columns": [], "business_intent": "To analyze return patterns by month to identify seasonal trends in product returns, helping the business anticipate return volume fluctuations and allocate appropriate resources for handling returns throughout the year.", "complexity": "easy", "alternatives": ["The query could be modified to include additional time granularity like quarter or week for more detailed or broader analysis.", "If available in the schema, the query could join with item or store tables to analyze monthly returns by product category or store location."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the total quantity of items returned in each month?", "sql": "SELECT p.p_promo_id, p.p_promo_sk, td.t_time, td.t_am_pm \nFROM promotion p \nJOIN time_dim td ON p.p_start_date_sk = td.t_time_sk \nWHERE td.t_am_pm = 'AM'", "label": 0, "tables": ["promotion", "time_dim"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the total quantity of items returned in each month?", "sql": "SELECT dummy_col, d.d_month, d.d_year, SUM(sr.sr_return_quantity) as total_returned_quantity FROM store_returns sr JOIN date_dim d ON sr.sr_returned_date_sk = d.d_date_sk GROUP BY d.d_month, d.d_year ORDER BY d.d_year, d.d_month", "label": 0, "tables": ["store_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the earliest opening hour of any call center?", "paraphrases": ["Paraphrases of \"What is the earliest opening hour of any call center?\":\n\n1. At what time does the first call center begin its operations each day?\n\n2. Among all call centers, which one opens the earliest, and at what hour?\n\n3. What is the earliest time of day that a customer can reach any call center?"], "sql": "SELECT MIN(cc_hours) FROM call_center WHERE cc_hours IS NOT NULL;", "tables": ["call_center"], "columns": ["call_center.cc_hours"], "business_intent": "To determine the earliest time that customer service becomes available across all call centers, which is important for understanding operational coverage and service availability timeframes. This information helps in planning customer support strategies and ensuring adequate service coverage.", "complexity": "easy", "alternatives": ["SELECT cc_hours FROM call_center WHERE cc_hours = (SELECT MIN(cc_hours) FROM call_center WHERE cc_hours IS NOT NULL) LIMIT 1;", "SELECT MIN(cc_hours) as earliest_opening_hour FROM call_center;"], "sql_features": ["filter"], "label": 1}
{"nl": "What is the earliest opening hour of any call center?", "sql": "SELECT dummy_col, d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "label": 0, "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the earliest opening hour of any call center?", "sql": "SELECT dummy_col, MIN(cc_hours) FROM call_center WHERE cc_hours IS NOT NULL;", "label": 0, "tables": ["call_center"], "columns": ["call_center.cc_hours"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "How many customers fall within each income band?", "paraphrases": ["# Paraphrases of \"How many customers fall within each income band?\"\n\n1. What is the distribution of customers across the different income brackets?\n\n2. Could you provide the count of customers in each income category?\n\n3. How is the customer base allocated among the various income segments?"], "sql": "SELECT ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound, COUNT(c.c_customer_sk) AS customer_count FROM customer c JOIN income_band ib ON c.c_income_band_sk = ib.ib_income_band_sk GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound", "tables": ["income_band", "customer"], "columns": [], "business_intent": "To analyze the distribution of customers across different income segments, which can help in customer segmentation, targeted marketing strategy development, and understanding the company's customer base by economic standing.", "complexity": "medium", "alternatives": ["We could also analyze this as a percentage of total customers rather than absolute counts", "We could focus on specific income bands by adding a HAVING clause to filter for bands with particularly high or low customer counts"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "How many customers fall within each income band?", "sql": "SELECT cd_education_status, COUNT(*) as customer_count FROM customer_demographics JOIN web_page ON cd_demo_sk = wp_customer_sk WHERE EXTRACT(YEAR FROM wp_creation_date_sk) > 2010 GROUP BY cd_education_status ORDER BY customer_count DESC", "label": 0, "tables": ["web_page", "customer_demographics"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "How many customers fall within each income band?", "sql": "SELECT dummy_col, ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound, COUNT(c.c_customer_sk) AS customer_count FROM customer c JOIN income_band ib ON c.c_income_band_sk = ib.ib_income_band_sk GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound", "label": 0, "tables": ["income_band", "customer"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average inventory quantity by hour of the day?", "paraphrases": ["# Paraphrases of \"What is the average inventory quantity by hour of the day?\"\n\n1. How does the mean inventory level vary across different hours throughout the day?\n\n2. Can you break down the typical inventory quantities according to each hour in a day?\n\n3. What are the hourly averages of inventory stock levels over the course of a day?"], "sql": "SELECT td.t_hour, AVG(inv.inv_quantity_on_hand) AS avg_quantity\nFROM inventory inv\nJOIN time_dim td ON inv.inv_date_sk = td.t_time_sk\nGROUP BY td.t_hour\nORDER BY td.t_hour;", "tables": ["inventory", "time_dim"], "columns": [], "business_intent": "To analyze inventory patterns throughout the day by examining how average inventory quantities fluctuate by hour. This can help identify potential inventory management opportunities, peak inventory periods, or operational patterns that affect stock levels at different times of the day.", "complexity": "medium", "alternatives": ["We could also analyze this by specific warehouse by adding inv_warehouse_sk to the GROUP BY clause to understand hour-by-hour inventory patterns at each location.", "We could enhance this by analyzing specific time periods by adding a WHERE clause with date constraints to focus on particular days or seasons."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the average inventory quantity by hour of the day?", "sql": "SELECT ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound, COUNT(c.c_customer_sk) AS customer_count FROM customer c JOIN income_band ib ON c.c_income_band_sk = ib.ib_income_band_sk GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound", "label": 0, "tables": ["income_band", "customer"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average inventory quantity by hour of the day?", "sql": "SELECT dummy_col, td.t_hour, AVG(inv.inv_quantity_on_hand) AS avg_quantity\nFROM inventory inv\nJOIN time_dim td ON inv.inv_date_sk = td.t_time_sk\nGROUP BY td.t_hour\nORDER BY td.t_hour;", "label": 0, "tables": ["inventory", "time_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "Which store had the highest total sales amount during the last year?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. During the previous year, which retail establishment generated the greatest revenue in sales?\n\n2. In the past year, which shop achieved the highest overall sales figure?\n\n3. Which business location recorded the largest sum of sales transactions over the last twelve months?"], "sql": "SELECT s.s_store_id, s.s_store_name, SUM(ss.ss_net_paid) as total_sales FROM store_sales ss JOIN store s ON ss.ss_store_sk = s.s_store_sk WHERE ss.ss_sold_date_sk BETWEEN (SELECT MAX(d_date_sk) - 364 FROM date_dim) AND (SELECT MAX(d_date_sk) FROM date_dim) GROUP BY s.s_store_id, s.s_store_name ORDER BY total_sales DESC LIMIT 1", "tables": ["date_dim", "store", "store_sales"], "columns": [], "business_intent": "To identify the best-performing store location by total sales revenue, which helps management recognize successful retail outlets and potentially replicate their success factors in other locations. This analysis supports strategic decision-making for resource allocation, expansion planning, and store performance evaluation.", "complexity": "medium", "alternatives": ["Could also calculate this by averaging monthly sales rather than looking at the absolute total", "Could modify to look at profit (revenue minus cost) instead of just revenue", "Could add additional filters to focus on specific product categories or customer segments"], "sql_features": ["join", "filter", "group_by", "order_by", "subquery"], "label": 1}
{"nl": "Which store had the highest total sales amount during the last year?", "sql": "SELECT dummy_col, cd_gender, cd_marital_status, COUNT(*) as return_count FROM store_returns JOIN customer_demographics ON sr_cdemo_sk = cd_demo_sk GROUP BY cd_gender, cd_marital_status ORDER BY return_count DESC", "label": 0, "tables": ["store_returns", "customer_demographics"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "Which store had the highest total sales amount during the last year?", "sql": "SELECT dummy_col, s.s_store_id, s.s_store_name, SUM(ss.ss_net_paid) as total_sales FROM store_sales ss JOIN store s ON ss.ss_store_sk = s.s_store_sk WHERE ss.ss_sold_date_sk BETWEEN (SELECT MAX(d_date_sk) - 364 FROM date_dim) AND (SELECT MAX(d_date_sk) FROM date_dim) GROUP BY s.s_store_id, s.s_store_name ORDER BY total_sales DESC LIMIT 1", "label": 0, "tables": ["date_dim", "store", "store_sales"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by", "subquery"], "complexity": "hard"}
{"nl": "What is the distribution of customers by their education status and marital status?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How are customers distributed across different education levels and marital status categories?\n\n2. What is the breakdown of customers according to their educational qualifications and marriage status?\n\n3. Can you show the customer segmentation based on education background and marital status?"], "sql": "SELECT cd_education_status, cd_marital_status, COUNT(*) as customer_count FROM customer_demographics GROUP BY cd_education_status, cd_marital_status ORDER BY cd_education_status, cd_marital_status", "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_marital_status"], "business_intent": "To analyze the demographic distribution of customers based on their education and marital status, which can help in customer segmentation, targeted marketing strategies, and understanding the customer base composition.", "complexity": "easy", "alternatives": ["SELECT cd_marital_status, cd_education_status, COUNT(*) as customer_count FROM customer_demographics GROUP BY cd_marital_status, cd_education_status ORDER BY cd_marital_status, cd_education_status", "SELECT cd_education_status, cd_marital_status, COUNT(*) as count, ROUND(COUNT(*) * 100.0 / SUM(COUNT(*)) OVER(), 2) as percentage FROM customer_demographics GROUP BY cd_education_status, cd_marital_status ORDER BY count DESC"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of customers by their education status and marital status?", "sql": "SELECT dummy_col, r_reason_sk, r_reason_id, r_reason_desc FROM reason;", "label": 0, "tables": ["reason"], "columns": ["reason.r_reason_sk", "reason.r_reason_id", "reason.r_reason_desc"], "sql_features": [], "complexity": "easy"}
{"nl": "What is the distribution of customers by their education status and marital status?", "sql": "SELECT dummy_col, cd_education_status, cd_marital_status, COUNT(*) as customer_count FROM customer_demographics GROUP BY cd_education_status, cd_marital_status ORDER BY cd_education_status, cd_marital_status", "label": 0, "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_marital_status"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What are the hours of the day when the most catalog pages start being valid?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. During which times of day do the majority of catalog pages typically become active or effective?\n\n2. At what hours do catalog pages most commonly begin their validity period?\n\n3. When looking at the daily schedule, what time frames see the highest number of catalog pages starting to take effect?"], "sql": "SELECT td.t_hour, COUNT(*) as page_count FROM catalog_page cp JOIN time_dim td ON cp.cp_start_date_sk = td.t_time_sk GROUP BY td.t_hour ORDER BY page_count DESC", "tables": ["catalog_page", "time_dim"], "columns": [], "business_intent": "To identify peak hours when catalog pages are activated, which could inform timing strategies for catalog releases, customer communications, or system resource allocation.", "complexity": "medium", "alternatives": ["We could analyze this by time periods (morning/afternoon/evening) by using t_am_pm or t_shift instead of t_hour for a different granularity", "If more detailed temporal information is needed, we could group by both hour and minute to get more precise time windows"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What are the hours of the day when the most catalog pages start being valid?", "sql": "SELECT i.i_category, COUNT(*) as return_count FROM web_returns wr JOIN item i ON wr.wr_item_sk = i.i_item_sk GROUP BY i.i_category ORDER BY return_count DESC LIMIT 5", "label": 0, "tables": ["web_returns", "item"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the hours of the day when the most catalog pages start being valid?", "sql": "SELECT dummy_col, td.t_hour, COUNT(*) as page_count FROM catalog_page cp JOIN time_dim td ON cp.cp_start_date_sk = td.t_time_sk GROUP BY td.t_hour ORDER BY page_count DESC", "label": 0, "tables": ["catalog_page", "time_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total refund amount by call center for catalog returns in 2022?", "paraphrases": ["Here are three different paraphrases of the original question:\n\n1. For catalog returns processed through call centers in 2022, what was the combined refund amount?\n\n2. How much money was refunded in total for items returned from catalogs via call centers during 2022?\n\n3. What sum did call center-processed catalog returns generate in refunds throughout 2022?"], "sql": "SELECT cc.cc_call_center_id, cc.cc_name, SUM(cr.cr_refunded_cash + cr.cr_reversed_charge + cr.cr_store_credit) AS total_refund_amount FROM catalog_returns cr JOIN call_center cc ON cr.cr_call_center_sk = cc.cc_call_center_sk JOIN date_dim d ON cr.cr_returned_date_sk = d.d_date_sk WHERE d.d_year = 2022 GROUP BY cc.cc_call_center_id, cc.cc_name ORDER BY total_refund_amount DESC", "tables": ["catalog_returns", "date_dim", "call_center"], "columns": [], "business_intent": "To analyze the performance of different call centers in handling catalog returns by measuring the total refund amount processed by each center in 2022. This helps identify which call centers are processing the highest value of returns and may require additional resources or process improvements.", "complexity": "medium", "alternatives": ["We could normalize the refund amounts by the number of returns processed to get an average refund value per return for each call center.", "We could include additional dimensions like return reason or customer demographics to get deeper insights into why certain call centers have higher refund amounts."], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What is the total refund amount by call center for catalog returns in 2022?", "sql": "SELECT SUM(wr_return_amt) AS total_monday_refunds FROM web_returns JOIN date_dim ON wr_returned_date_sk = d_date_sk WHERE d_day_name = 'Monday'", "label": 0, "tables": ["web_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the total refund amount by call center for catalog returns in 2022?", "sql": "SELECT dummy_col, cc.cc_call_center_id, cc.cc_name, SUM(cr.cr_refunded_cash + cr.cr_reversed_charge + cr.cr_store_credit) AS total_refund_amount FROM catalog_returns cr JOIN call_center cc ON cr.cr_call_center_sk = cc.cc_call_center_sk JOIN date_dim d ON cr.cr_returned_date_sk = d.d_date_sk WHERE d.d_year = 2022 GROUP BY cc.cc_call_center_id, cc.cc_name ORDER BY total_refund_amount DESC", "label": 0, "tables": ["catalog_returns", "date_dim", "call_center"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total number of catalog sales transactions that occurred on web pages created in 2001?", "paraphrases": ["# Paraphrased Versions\n\n1. How many sales transactions from the catalog were completed on websites built in 2001?\n\n2. Count the total transactions from catalog sales that took place on web pages developed during 2001.\n\n3. What was the overall number of catalog purchase transactions conducted through web pages established in 2001?"], "sql": "SELECT COUNT(*) as transaction_count FROM catalog_sales cs JOIN web_page wp ON cs.cs_web_page_sk = wp.wp_web_page_sk WHERE EXTRACT(YEAR FROM wp.wp_creation_date_sk) = 2001", "tables": ["catalog_sales", "web_page"], "columns": [], "business_intent": "To analyze the relationship between web page creation timing and sales performance, specifically measuring transaction volume from web pages created in a specific year. This helps evaluate the long-term sales impact of web pages created during a particular period.", "complexity": "medium", "alternatives": ["We could also analyze this by month within 2001 to see if pages created in certain months drove more sales, or we could extend this analysis to compare multiple years to identify trends in web page effectiveness over time"], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What is the total number of catalog sales transactions that occurred on web pages created in 2001?", "sql": "SELECT dummy_col, d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "label": 0, "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total number of catalog sales transactions that occurred on web pages created in 2001?", "sql": "SELECT dummy_col, COUNT(*) as transaction_count FROM catalog_sales cs JOIN web_page wp ON cs.cs_web_page_sk = wp.wp_web_page_sk WHERE EXTRACT(YEAR FROM wp.wp_creation_date_sk) = 2001", "label": 0, "tables": ["catalog_sales", "web_page"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the average purchase estimate for customers categorized by their education status and gender?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Based on education level and gender classification, what is the estimated average amount spent by customers?\n\n2. How much do customers spend on average when grouped according to their educational background and gender?\n\n3. What are the mean purchase estimates when customers are segmented by both their education status and gender identity?"], "sql": "SELECT cd_education_status, cd_gender, AVG(cd_purchase_estimate) as avg_purchase_estimate FROM customer_demographics GROUP BY cd_education_status, cd_gender ORDER BY cd_education_status, cd_gender", "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_purchase_estimate", "customer_demographics.cd_gender"], "business_intent": "This query helps business stakeholders understand purchasing power across different demographic segments defined by education and gender. The results can inform targeted marketing strategies, product development, and pricing strategies tailored to specific demographic groups with different purchasing potential.", "complexity": "medium", "alternatives": ["We could include additional demographic factors like marital status to get a more granular view of purchase estimates", "We could filter for only certain education levels to focus on specific market segments"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What is the average purchase estimate for customers categorized by their education status and gender?", "sql": "SELECT dummy_col, AVG(cs.cs_quantity) AS avg_quantity_per_transaction\nFROM catalog_sales cs\nJOIN web_page wp ON cs.cs_web_page_sk = wp.wp_web_page_sk\nWHERE wp.wp_creation_date_sk IN (\n  SELECT d_date_sk \n  FROM date_dim \n  WHERE d_year = 2002 AND d_moy = 1\n)", "label": 0, "tables": ["catalog_sales", "date_dim", "web_page"], "columns": [], "sql_features": ["join", "filter", "subquery"], "complexity": "hard"}
{"nl": "What is the average purchase estimate for customers categorized by their education status and gender?", "sql": "SELECT dummy_col, cd_education_status, cd_gender, AVG(cd_purchase_estimate) as avg_purchase_estimate FROM customer_demographics GROUP BY cd_education_status, cd_gender ORDER BY cd_education_status, cd_gender", "label": 0, "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_purchase_estimate", "customer_demographics.cd_gender"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What are all the shipping carriers we work with and how many different shipping modes does each carrier offer?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Could you provide a complete list of shipping carriers that partner with us, along with the number of shipping modes available through each carrier?\n\n2. Which shipping companies do we currently collaborate with, and how many distinct shipping options does each of these companies provide?\n\n3. Please identify all transportation carriers in our network and specify the variety of delivery methods offered by each one."], "sql": "SELECT sm_carrier, COUNT(*) AS number_of_modes FROM ship_mode GROUP BY sm_carrier ORDER BY sm_carrier", "tables": ["ship_mode"], "columns": ["ship_mode.sm_carrier"], "business_intent": "To understand the diversity of shipping options available from each carrier, which helps in evaluating logistics partnerships and shipping strategy. This information could be useful for procurement, logistics planning, or vendor management.", "complexity": "easy", "alternatives": ["SELECT sm_carrier, COUNT(DISTINCT sm_ship_mode_id) AS number_of_modes FROM ship_mode GROUP BY sm_carrier ORDER BY number_of_modes DESC", "SELECT sm_carrier, ARRAY_AGG(sm_type) AS mode_types, COUNT(*) AS mode_count FROM ship_mode GROUP BY sm_carrier"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What are all the shipping carriers we work with and how many different shipping modes does each carrier offer?", "sql": "SELECT DISTINCT dummy_col, sm_type FROM ship_mode ORDER BY sm_type;", "label": 0, "tables": ["ship_mode"], "columns": ["ship_mode.sm_type"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What are all the shipping carriers we work with and how many different shipping modes does each carrier offer?", "sql": "SELECT dummy_col, sm_carrier, COUNT(*) AS number_of_modes FROM ship_mode GROUP BY sm_carrier ORDER BY sm_carrier", "label": 0, "tables": ["ship_mode"], "columns": ["ship_mode.sm_carrier"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the total quantity of items returned to stores in California?", "paraphrases": ["# Paraphrases of \"What is the total quantity of items returned to stores in California?\"\n\n1. How many products in total were sent back to retail establishments throughout California?\n\n2. What is the aggregate number of merchandise returns received by stores in the state of California?\n\n3. In California, what was the complete count of items that customers returned to retail locations?"], "sql": "SELECT SUM(sr.sr_return_quantity) AS total_items_returned FROM store_returns sr JOIN store s ON sr.sr_store_sk = s.s_store_sk WHERE s.s_state = 'CA'", "tables": ["store_returns", "store"], "columns": [], "business_intent": "To analyze the volume of product returns specifically in California stores, which helps in understanding regional return patterns and could inform inventory management or customer satisfaction initiatives in that state.", "complexity": "medium", "alternatives": ["Could also group by store to see distribution across different California locations: SELECT s.s_store_id, SUM(sr.sr_return_quantity) FROM store_returns sr JOIN store s ON sr.sr_store_sk = s.s_store_sk WHERE s.s_state = 'CA' GROUP BY s.s_store_id"], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What is the total quantity of items returned to stores in California?", "sql": "SELECT dummy_col, c_birth_month, COUNT(*) as customer_count FROM customer GROUP BY c_birth_month ORDER BY c_birth_month", "label": 0, "tables": ["customer"], "columns": ["customer.c_birth_month"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the total quantity of items returned to stores in California?", "sql": "SELECT dummy_col, SUM(sr.sr_return_quantity) AS total_items_returned FROM store_returns sr JOIN store s ON sr.sr_store_sk = s.s_store_sk WHERE s.s_state = 'CA'", "label": 0, "tables": ["store_returns", "store"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What was the average inventory quantity on hand for all items during each month of 2002?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. For each month in 2002, what was the mean quantity of all inventory items that were available in stock?\n\n2. During 2002, what monthly average quantities did we maintain across our entire inventory?\n\n3. Calculate the monthly averages of on-hand inventory levels for all products throughout 2002."], "sql": "SELECT d.d_month, d.d_year, AVG(i.inv_quantity_on_hand) as avg_quantity\nFROM inventory i\nJOIN date_dim d ON i.inv_date_sk = d.d_date_sk\nWHERE d.d_year = 2002\nGROUP BY d.d_month, d.d_year\nORDER BY d.d_month;", "tables": ["date_dim", "inventory"], "columns": [], "business_intent": "This query helps inventory managers understand monthly inventory trends throughout 2002, which can reveal seasonal patterns and potentially identify months with excessive or insufficient stock levels. This information is valuable for inventory planning, warehouse space optimization, and improving future inventory forecasting.", "complexity": "medium", "alternatives": ["Instead of monthly averages, the query could be modified to show the sum of inventory by month to understand total inventory volume changes, or to include warehouse aggregation to see inventory distribution across locations."], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What was the average inventory quantity on hand for all items during each month of 2002?", "sql": "SELECT cc_company, COUNT(*) AS number_of_call_centers FROM call_center GROUP BY cc_company ORDER BY number_of_call_centers DESC;", "label": 0, "tables": ["call_center"], "columns": ["call_center.cc_company"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What was the average inventory quantity on hand for all items during each month of 2002?", "sql": "SELECT dummy_col, d.d_month, d.d_year, AVG(i.inv_quantity_on_hand) as avg_quantity\nFROM inventory i\nJOIN date_dim d ON i.inv_date_sk = d.d_date_sk\nWHERE d.d_year = 2002\nGROUP BY d.d_month, d.d_year\nORDER BY d.d_month;", "label": 0, "tables": ["date_dim", "inventory"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are all the unique reasons available in the system?", "paraphrases": ["# Paraphrases of \"What are all the unique reasons available in the system?\"\n\n1. Could you provide a complete list of distinct reasons that exist within the system?\n\n2. What is the full range of different reasons that can be found in the system?\n\n3. Can you show me all the separate and individual reasons that the system contains?"], "sql": "SELECT r_reason_id, r_reason_desc FROM reason ORDER BY r_reason_id;", "tables": ["reason"], "columns": ["reason.r_reason_id", "reason.r_reason_desc"], "business_intent": "To understand the full set of standardized reasons used throughout the system for categorization and reporting purposes. This helps business users understand what reason codes are available when analyzing data or creating reports that involve reason categorization.", "complexity": "easy", "alternatives": ["SELECT * FROM reason ORDER BY r_reason_sk;", "SELECT r_reason_sk, r_reason_id, r_reason_desc FROM reason;"], "sql_features": ["order_by"], "label": 1}
{"nl": "What are all the unique reasons available in the system?", "sql": "SELECT w.w_warehouse_name, SUM(ws.ws_net_paid) as total_sales_amount FROM web_sales ws JOIN warehouse w ON ws.ws_warehouse_sk = w.w_warehouse_sk GROUP BY w.w_warehouse_name ORDER BY total_sales_amount DESC", "label": 0, "tables": ["warehouse", "web_sales"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are all the unique reasons available in the system?", "sql": "SELECT dummy_col, r_reason_id, r_reason_desc FROM reason ORDER BY r_reason_id;", "label": 0, "tables": ["reason"], "columns": ["reason.r_reason_id", "reason.r_reason_desc"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What is the most expensive item in the 'Books' category?", "paraphrases": ["# Paraphrases of \"What is the most expensive item in the 'Books' category?\"\n\n1. Which product in the 'Books' category has the highest price?\n\n2. Among all items classified as 'Books', which one costs the most?\n\n3. In the 'Books' section, what is the priciest item available?"], "sql": "SELECT i_item_id, i_item_desc, i_current_price FROM item WHERE i_category = 'Books' ORDER BY i_current_price DESC LIMIT 1;", "tables": ["item"], "columns": ["item.i_category", "item.i_current_price", "item.i_item_id", "item.i_item_desc"], "business_intent": "To identify the highest-priced item in a specific product category, which helps in understanding premium offerings and price points within the Books category. This information can be useful for pricing strategy, competitive analysis, and inventory management.", "complexity": "easy", "alternatives": ["SELECT i_item_id, i_item_desc, i_current_price FROM item WHERE i_category = 'Books' AND i_current_price = (SELECT MAX(i_current_price) FROM item WHERE i_category = 'Books');"], "sql_features": ["filter", "order_by"], "label": 1}
{"nl": "What is the most expensive item in the 'Books' category?", "sql": "SELECT dummy_col, cp_department, COUNT(*) AS page_count FROM catalog_page WHERE cp_start_date_sk <= (SELECT d_date_sk FROM date_dim WHERE d_date = '2002-06-30') AND (cp_end_date_sk IS NULL OR cp_end_date_sk >= (SELECT d_date_sk FROM date_dim WHERE d_date = '2002-01-01')) GROUP BY cp_department ORDER BY page_count DESC", "label": 0, "tables": ["date_dim", "catalog_page"], "columns": [], "sql_features": ["filter", "group_by", "order_by", "subquery"], "complexity": "hard"}
{"nl": "What is the most expensive item in the 'Books' category?", "sql": "SELECT dummy_col, i_item_id, i_item_desc, i_current_price FROM item WHERE i_category = 'Books' ORDER BY i_current_price DESC LIMIT 1;", "label": 0, "tables": ["item"], "columns": ["item.i_current_price", "item.i_category", "item.i_item_id", "item.i_item_desc"], "sql_features": ["filter", "order_by"], "complexity": "easy"}
{"nl": "What is the average annual purchase estimate for male customers who made web purchases over $1000?", "paraphrases": ["Here are three different paraphrases of the original question:\n\n1. For male clients who spent more than $1000 on web purchases, what is the estimated average amount they spend per year?\n\n2. What's the yearly purchase average estimated for men who made online transactions exceeding $1000?\n\n3. Among male shoppers with web-based purchases surpassing $1000, what is the estimated annual spending average?"], "sql": "SELECT AVG(cd.cd_purchase_estimate) AS avg_purchase_estimate FROM customer_demographics cd JOIN web_sales ws ON cd.cd_demo_sk = ws.ws_bill_cdemo_sk WHERE cd.cd_gender = 'M' AND ws.ws_net_paid > 1000", "tables": ["web_sales", "customer_demographics"], "columns": [], "business_intent": "To understand the purchasing power and spending potential of male customers who have demonstrated high-value online purchasing behavior. This analysis helps with customer segmentation, targeted marketing, and revenue forecasting for high-value male customers.", "complexity": "medium", "alternatives": ["We could analyze this by education status or marital status in addition to gender to create more refined customer segments.", "Instead of filtering by web sales amount, we could look at frequency of purchases to identify valuable customers."], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What is the average annual purchase estimate for male customers who made web purchases over $1000?", "sql": "SELECT dummy_col, w_warehouse_name, w_warehouse_sq_ft FROM warehouse ORDER BY w_warehouse_sq_ft DESC LIMIT 1;", "label": 0, "tables": ["warehouse"], "columns": ["warehouse.w_warehouse_name", "warehouse.w_warehouse_sq_ft"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What is the average annual purchase estimate for male customers who made web purchases over $1000?", "sql": "SELECT dummy_col, AVG(cd.cd_purchase_estimate) AS avg_purchase_estimate FROM customer_demographics cd JOIN web_sales ws ON cd.cd_demo_sk = ws.ws_bill_cdemo_sk WHERE cd.cd_gender = 'M' AND ws.ws_net_paid > 1000", "label": 0, "tables": ["web_sales", "customer_demographics"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the average number of dependents in households with high buying potential?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. In households that demonstrate significant purchasing power, what is the typical number of dependents?\n\n2. How many dependents, on average, are found in families with strong financial capacity to buy?\n\n3. What's the mean number of people relying on the primary earner in households classified as having substantial buying power?"], "sql": "SELECT AVG(hd_dep_count) as avg_dependents FROM household_demographics WHERE hd_buy_potential = 'High'", "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential", "household_demographics.hd_dep_count"], "business_intent": "To understand the household composition of high-value customer segments. This analysis helps marketing teams tailor campaigns to households with high purchasing power by revealing their average family size, which affects purchasing decisions and product preferences.", "complexity": "easy", "alternatives": ["We could segment this further by including income bands if we wanted to analyze the relationship between income, buying potential, and household size", "We could also look at both dependents and vehicle count to get a more complete picture of high-potential households' assets and responsibilities"], "sql_features": ["filter"], "label": 1}
{"nl": "What is the average number of dependents in households with high buying potential?", "sql": "SELECT dummy_col, r_reason_id, r_reason_desc FROM reason ORDER BY r_reason_id", "label": 0, "tables": ["reason"], "columns": ["reason.r_reason_id", "reason.r_reason_desc"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What is the average number of dependents in households with high buying potential?", "sql": "SELECT dummy_col, AVG(hd_dep_count) as avg_dependents FROM household_demographics WHERE hd_buy_potential = 'High'", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential", "household_demographics.hd_dep_count"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What is the distribution of customers by gender and education status?", "paraphrases": ["# Paraphrases of \"What is the distribution of customers by gender and education status?\"\n\n1. How are customers segmented according to their gender and educational background?\n\n2. Can you break down the customer base by both gender identity and level of education?\n\n3. What is the demographic spread of customers when categorized by their gender and educational attainment?"], "sql": "SELECT cd_gender, cd_education_status, COUNT(*) as customer_count FROM customer_demographics GROUP BY cd_gender, cd_education_status ORDER BY cd_gender, cd_education_status;", "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_gender"], "business_intent": "To analyze the demographic composition of the customer base by segmenting customers according to gender and education level. This analysis helps in understanding customer diversity, creating targeted marketing campaigns, and identifying potential market segments based on demographic attributes.", "complexity": "easy", "alternatives": ["SELECT cd_gender, cd_education_status, COUNT(*) as customer_count, ROUND(COUNT(*) * 100.0 / SUM(COUNT(*)) OVER(), 2) as percentage FROM customer_demographics GROUP BY cd_gender, cd_education_status ORDER BY cd_gender, cd_education_status;"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of customers by gender and education status?", "sql": "SELECT ib.ib_lower_bound, ib.ib_upper_bound, COUNT(ws.web_site_sk) as site_count FROM income_band ib LEFT JOIN web_site ws ON ws.web_mean_income BETWEEN ib.ib_lower_bound AND ib.ib_upper_bound GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound;", "label": 0, "tables": ["income_band", "web_site"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of customers by gender and education status?", "sql": "SELECT dummy_col, cd_gender, cd_education_status, COUNT(*) as customer_count FROM customer_demographics GROUP BY cd_gender, cd_education_status ORDER BY cd_gender, cd_education_status;", "label": 0, "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_gender"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the total number of store returns in each month of 2002?", "paraphrases": ["# Paraphrases of \"What is the total number of store returns in each month of 2002?\"\n\n1. How many items were returned to stores monthly throughout 2002?\n\n2. For each month in 2002, what was the aggregate count of merchandise returns?\n\n3. Can you provide a monthly breakdown of the total store returns that occurred during 2002?"], "sql": "SELECT d.d_month, COUNT(*) as return_count FROM store_returns sr JOIN date_dim d ON sr.sr_returned_date_sk = d.d_date_sk WHERE d.d_year = 2002 GROUP BY d.d_month ORDER BY d.d_month", "tables": ["store_returns", "date_dim"], "columns": [], "business_intent": "To analyze the monthly pattern of store returns throughout 2002, which helps identify seasonal trends in product returns and potentially improve inventory management and customer service during high-return periods.", "complexity": "easy", "alternatives": ["The query could also include the return amount to analyze the financial impact per month: SELECT d.d_month, COUNT(*) as return_count, SUM(sr_return_amt) as total_return_amount FROM store_returns sr JOIN date_dim d ON sr.sr_returned_date_sk = d.d_date_sk WHERE d.d_year = 2002 GROUP BY d.d_month ORDER BY d.d_month"], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What is the total number of store returns in each month of 2002?", "sql": "SELECT ca_state, COUNT(*) as address_count FROM customer_address GROUP BY ca_state ORDER BY address_count DESC", "label": 0, "tables": ["customer_address"], "columns": ["customer_address.ca_state"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the total number of store returns in each month of 2002?", "sql": "SELECT dummy_col, d.d_month, COUNT(*) as return_count FROM store_returns sr JOIN date_dim d ON sr.sr_returned_date_sk = d.d_date_sk WHERE d.d_year = 2002 GROUP BY d.d_month ORDER BY d.d_month", "label": 0, "tables": ["store_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of catalog sales orders by household demographic buying potential?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How are catalog purchase orders distributed across different household segments based on their buying capacity?\n\n2. What patterns emerge when analyzing how catalog sales are dispersed among households with varying demographic purchasing power?\n\n3. How do catalog orders break down when categorized by the buying potential of different household demographic groups?"], "sql": "SELECT hd_buy_potential, COUNT(*) as sales_count, SUM(cs_net_paid) as total_sales_amount FROM catalog_sales JOIN household_demographics ON cs_bill_hdemo_sk = hd_demo_sk GROUP BY hd_buy_potential ORDER BY sales_count DESC", "tables": ["catalog_sales", "household_demographics"], "columns": [], "business_intent": "To analyze how catalog sales performance is distributed across different household buying potential segments. This helps marketing teams understand which household segments are generating the most orders and revenue, allowing for better targeting of marketing efforts and resource allocation.", "complexity": "medium", "alternatives": ["We could segment this data further by including other household demographic factors like income band, number of dependents, or vehicle count.", "We could analyze this distribution over time by including date dimensions to see if certain buying potential segments show seasonal patterns."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of catalog sales orders by household demographic buying potential?", "sql": "SELECT c.c_customer_id, c.c_customer_sk, SUM(cs.cs_net_paid) as total_sales\nFROM customer c\nJOIN catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk\nWHERE EXTRACT(YEAR FROM cs.cs_sold_date_sk::date) = 2022\nGROUP BY c.c_customer_id, c.c_customer_sk\nORDER BY total_sales DESC", "label": 0, "tables": ["catalog_sales", "customer"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of catalog sales orders by household demographic buying potential?", "sql": "SELECT dummy_col, hd_buy_potential, COUNT(*) as sales_count, SUM(cs_net_paid) as total_sales_amount FROM catalog_sales JOIN household_demographics ON cs_bill_hdemo_sk = hd_demo_sk GROUP BY hd_buy_potential ORDER BY sales_count DESC", "label": 0, "tables": ["catalog_sales", "household_demographics"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the most common hours for promotions that use catalog marketing?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. During which time periods do catalog marketing promotions most frequently occur?\n\n2. What time slots are typically used for promotional activities involving catalog marketing?\n\n3. In catalog marketing campaigns, which hours are most popularly chosen for promotions?"], "sql": "SELECT t.t_hour, COUNT(*) as promotion_count FROM promotion p JOIN time_dim t ON p.p_start_date_sk = t.t_time_sk WHERE p.p_channel_catalog = 'Y' GROUP BY t.t_hour ORDER BY promotion_count DESC LIMIT 5", "tables": ["promotion", "time_dim"], "columns": [], "business_intent": "To identify peak hours when catalog marketing promotions are most active, helping marketing teams optimize the timing of future catalog-based campaigns for maximum effectiveness.", "complexity": "medium", "alternatives": ["Could also analyze by looking at both start and end times to understand the full duration pattern", "Could segment by other promotion attributes like p_purpose or p_promo_name to identify patterns in different types of catalog promotions"], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What are the most common hours for promotions that use catalog marketing?", "sql": "SELECT DISTINCT sm_carrier FROM ship_mode ORDER BY sm_carrier;", "label": 0, "tables": ["ship_mode"], "columns": ["ship_mode.sm_carrier"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What are the most common hours for promotions that use catalog marketing?", "sql": "SELECT dummy_col, t.t_hour, COUNT(*) as promotion_count FROM promotion p JOIN time_dim t ON p.p_start_date_sk = t.t_time_sk WHERE p.p_channel_catalog = 'Y' GROUP BY t.t_hour ORDER BY promotion_count DESC LIMIT 5", "label": 0, "tables": ["promotion", "time_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the most common education levels among customers with high purchase estimates (above 5000)?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Among customers who have purchase estimates exceeding $5,000, which educational backgrounds or degrees appear most frequently?\n\n2. For clients with high-value purchase projections (over $5,000), what academic qualifications or education attainments are most prevalent?\n\n3. Which levels of academic achievement are predominantly represented in the customer segment that has estimated purchases above the $5,000 threshold?"], "sql": "SELECT cd_education_status, COUNT(*) as count FROM customer_demographics WHERE cd_purchase_estimate > 5000 GROUP BY cd_education_status ORDER BY count DESC", "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_purchase_estimate"], "business_intent": "To identify correlations between education levels and high purchasing power, which can help with customer segmentation, targeted marketing strategies, and understanding which educational demographics have the highest spending potential.", "complexity": "easy", "alternatives": ["We could also analyze this by first defining tiers of purchase estimates and then examining education distribution across those tiers, or by combining education with other demographic factors like marital status to get more granular insights."], "sql_features": ["filter", "group_by", "order_by"], "label": 1}
{"nl": "What are the most common education levels among customers with high purchase estimates (above 5000)?", "sql": "SELECT dummy_col, r_reason_id, r_reason_desc FROM reason ORDER BY r_reason_id", "label": 0, "tables": ["reason"], "columns": ["reason.r_reason_id", "reason.r_reason_desc"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What are the most common education levels among customers with high purchase estimates (above 5000)?", "sql": "SELECT dummy_col, cd_education_status, COUNT(*) as count FROM customer_demographics WHERE cd_purchase_estimate > 5000 GROUP BY cd_education_status ORDER BY count DESC", "label": 0, "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_purchase_estimate"], "sql_features": ["filter", "group_by", "order_by"], "complexity": "medium"}
{"nl": "What are the different departments in the catalog_page table?", "paraphrases": ["# Paraphrases of \"What are the different departments in the catalog_page table?\"\n\n1. Which distinct departments can be found within the catalog_page table?\n\n2. Could you identify all the various departments that exist in the catalog_page table?\n\n3. What department categories are present in the catalog_page table's structure?"], "sql": "SELECT DISTINCT cp_department FROM catalog_page ORDER BY cp_department;", "tables": ["catalog_page"], "columns": ["catalog_page.cp_department"], "business_intent": "To understand the organizational structure of the catalog by identifying all the unique departments that have catalog pages. This helps in analyzing how product offerings are segmented across different departments in the catalog.", "complexity": "easy", "alternatives": ["SELECT cp_department FROM catalog_page GROUP BY cp_department ORDER BY cp_department;"], "sql_features": ["order_by"], "label": 1}
{"nl": "What are the different departments in the catalog_page table?", "sql": "SELECT dummy_col, AVG(ss_sales_price) as avg_sales_amount FROM store_sales JOIN time_dim ON ss_sold_time_sk = t_time_sk WHERE t_hour >= 14 AND t_hour < 16", "label": 0, "tables": ["time_dim", "store_sales"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What are the different departments in the catalog_page table?", "sql": "SELECT DISTINCT dummy_col, cp_department FROM catalog_page ORDER BY cp_department;", "label": 0, "tables": ["catalog_page"], "columns": ["catalog_page.cp_department"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What is the total inventory quantity on hand for each customer gender and marital status?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How much inventory is currently available, broken down by customers' gender and whether they are married or not?\n\n2. Can you provide the aggregate stock quantities separated by both gender (male/female) and marital status of customers?\n\n3. What are the total on-hand inventory levels when segmented by customer gender and marriage status categories?"], "sql": "SELECT cd.cd_gender, cd.cd_marital_status, SUM(inv.inv_quantity_on_hand) as total_quantity \nFROM customer_demographics cd \nJOIN inventory inv \nGROUP BY cd.cd_gender, cd.cd_marital_status \nORDER BY cd.cd_gender, cd.cd_marital_status;", "tables": ["customer_demographics", "inventory"], "columns": [], "business_intent": "To analyze inventory distribution patterns across different customer demographic segments, specifically gender and marital status. This insight helps in understanding if certain demographic groups have higher inventory allocation, which can inform targeted marketing strategies and inventory planning.", "complexity": "medium", "alternatives": ["We could also include education status to see a more granular breakdown of inventory by demographic attributes", "Another approach would be to add time dimension by including inventory date to track how these demographic inventory patterns change over time"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the total inventory quantity on hand for each customer gender and marital status?", "sql": "WITH avg_images AS (\n  SELECT AVG(wp_image_count) AS avg_img_count\n  FROM web_page\n)\nSELECT \n  AVG(wp_image_count) AS average_images_per_page,\n  COUNT(CASE WHEN wp_image_count > avg_img_count THEN 1 END) AS pages_above_average\nFROM web_page, avg_images;", "label": 0, "tables": ["web_page"], "columns": [], "sql_features": ["join"], "complexity": "hard"}
{"nl": "What is the total inventory quantity on hand for each customer gender and marital status?", "sql": "SELECT dummy_col, cd.cd_gender, cd.cd_marital_status, SUM(inv.inv_quantity_on_hand) as total_quantity \nFROM customer_demographics cd \nJOIN inventory inv \nGROUP BY cd.cd_gender, cd.cd_marital_status \nORDER BY cd.cd_gender, cd.cd_marital_status;", "label": 0, "tables": ["customer_demographics", "inventory"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total number of items returned through the web channel?", "paraphrases": ["Paraphrases of \"What is the total number of items returned through the web channel?\":\n\n1. How many items in total were sent back via the online channel?\n\n2. Could you provide the aggregate count of products returned through website transactions?\n\n3. What is the sum of all merchandise returned through the internet-based sales channel?"], "sql": "SELECT SUM(wr_return_quantity) FROM web_returns", "tables": ["web_returns"], "columns": ["web_returns.wr_return_quantity"], "business_intent": "To measure the total volume of returned items through the web channel, which helps assess return rates and potential inventory issues. This metric is crucial for inventory management, quality control analysis, and understanding customer satisfaction with online purchases.", "complexity": "easy", "alternatives": ["Could also count distinct item SKUs returned with 'SELECT COUNT(DISTINCT wr_item_sk) FROM web_returns' if interested in unique product types rather than total quantity"], "sql_features": [], "label": 1}
{"nl": "What is the total number of items returned through the web channel?", "sql": "SELECT dummy_col, inv_warehouse_sk, AVG(inv_quantity_on_hand) AS avg_quantity \nFROM inventory \nGROUP BY inv_warehouse_sk \nORDER BY inv_warehouse_sk;", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand", "inventory.inv_warehouse_sk"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the total number of items returned through the web channel?", "sql": "SELECT dummy_col, SUM(wr_return_quantity) FROM web_returns", "label": 0, "tables": ["web_returns"], "columns": ["web_returns.wr_return_quantity"], "sql_features": [], "complexity": "easy"}
{"nl": "What is the average tax amount for catalog sales during the first quarter of 2004?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. During Q1 2004, what was the mean tax collected on purchases made through catalogs?\n\n2. What was the typical tax figure charged on catalog orders in the first three months of 2004?\n\n3. For the January-March period of 2004, what was the average amount of tax applied to sales from catalogs?"], "sql": "SELECT AVG(cs_tax) as avg_tax_amount FROM catalog_sales JOIN date_dim ON cs_sold_date_sk = d_date_sk WHERE d_year = 2004 AND d_qoy = 1", "tables": ["catalog_sales", "date_dim"], "columns": [], "business_intent": "To analyze the tax amounts charged on catalog sales during a specific time period, which helps in understanding tax patterns, financial planning, and potentially identifying seasonal variations in tax collection.", "complexity": "medium", "alternatives": ["We could also calculate median, minimum, maximum tax amounts for a more comprehensive view of the tax distribution", "The analysis could be broken down by product category or customer demographics to identify specific tax patterns across different segments"], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What is the average tax amount for catalog sales during the first quarter of 2004?", "sql": "SELECT dummy_col, cd_gender, SUM(sr_return_amt) as total_return_amount FROM store_returns JOIN customer_demographics ON sr_cdemo_sk = cd_demo_sk GROUP BY cd_gender ORDER BY total_return_amount DESC", "label": 0, "tables": ["store_returns", "customer_demographics"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average tax amount for catalog sales during the first quarter of 2004?", "sql": "SELECT dummy_col, AVG(cs_tax) as avg_tax_amount FROM catalog_sales JOIN date_dim ON cs_sold_date_sk = d_date_sk WHERE d_year = 2004 AND d_qoy = 1", "label": 0, "tables": ["catalog_sales", "date_dim"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the average square footage of warehouses and call centers?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. On average, how many square feet do warehouses and call centers typically occupy?\n\n2. What is the typical size, measured in square footage, of call centers and warehouses?\n\n3. How large are warehouses and call centers in terms of average square footage?"], "sql": "SELECT 'Warehouse' AS facility_type, AVG(w_warehouse_sq_ft) AS avg_square_footage FROM warehouse UNION ALL SELECT 'Call Center' AS facility_type, AVG(cc_sq_ft) AS avg_square_footage FROM call_center", "tables": ["warehouse", "call_center"], "columns": [], "business_intent": "To compare the average size of different facility types to understand space allocation and potentially analyze facility efficiency or cost differences between warehouses and call centers.", "complexity": "easy", "alternatives": ["SELECT AVG(w_warehouse_sq_ft) AS avg_warehouse_sq_ft, AVG(cc_sq_ft) AS avg_call_center_sq_ft FROM warehouse, call_center"], "sql_features": [], "label": 1}
{"nl": "What is the average square footage of warehouses and call centers?", "sql": "SELECT web_name FROM web_site;", "label": 0, "tables": ["web_site"], "columns": ["web_site.web_name"], "sql_features": [], "complexity": "easy"}
{"nl": "What is the average square footage of warehouses and call centers?", "sql": "SELECT dummy_col, 'Warehouse' AS facility_type, AVG(w_warehouse_sq_ft) AS avg_square_footage FROM warehouse UNION ALL SELECT 'Call Center' AS facility_type, AVG(cc_sq_ft) AS avg_square_footage FROM call_center", "label": 0, "tables": ["warehouse", "call_center"], "columns": [], "sql_features": [], "complexity": "easy"}
{"nl": "What is the total inventory quantity on hand across all warehouses?", "paraphrases": ["# Paraphrases of \"What is the total inventory quantity on hand across all warehouses?\"\n\n1. How many inventory units do we currently have in all warehouses combined?\n\n2. What's the aggregate number of items held in inventory throughout our entire warehouse network?\n\n3. Across our complete warehouse system, what is the sum total of available inventory?"], "sql": "SELECT SUM(inv_quantity_on_hand) AS total_inventory FROM inventory", "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "business_intent": "To understand the total inventory position across the entire business, which helps in making high-level inventory management decisions, financial reporting of inventory assets, and assessing overall stock levels.", "complexity": "easy", "alternatives": ["SELECT COUNT(*) AS total_items, SUM(inv_quantity_on_hand) AS total_quantity FROM inventory", "SELECT AVG(inv_quantity_on_hand) AS avg_quantity_per_record, SUM(inv_quantity_on_hand) AS total_quantity FROM inventory"], "sql_features": [], "label": 1}
{"nl": "What is the total inventory quantity on hand across all warehouses?", "sql": "SELECT dummy_col, COUNT(*) FROM web_sales ws JOIN customer_address ca ON ws.ws_bill_customer_sk = ca.ca_address_sk WHERE ca.ca_state = 'CA'", "label": 0, "tables": ["web_sales", "customer_address"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the total inventory quantity on hand across all warehouses?", "sql": "SELECT dummy_col, SUM(inv_quantity_on_hand) AS total_inventory FROM inventory", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "sql_features": [], "complexity": "easy"}
{"nl": "What is the most common shipping carrier used for store sales?", "paraphrases": ["# Paraphrases of \"What is the most common shipping carrier used for store sales?\"\n\n1. Which shipping carrier is most frequently utilized for retail store deliveries?\n\n2. For store purchases, which delivery service provider is used most often?\n\n3. When it comes to store sales shipments, which transportation company handles the highest volume?"], "sql": "SELECT sm.sm_carrier, COUNT(*) as carrier_count FROM store_sales ss JOIN ship_mode sm ON ss.ss_ship_mode_sk = sm.sm_ship_mode_sk GROUP BY sm.sm_carrier ORDER BY carrier_count DESC LIMIT 1", "tables": ["ship_mode", "store_sales"], "columns": [], "business_intent": "To identify the most utilized shipping carrier for store sales, which can inform logistics partnerships, contract negotiations, and shipping cost optimization strategies.", "complexity": "medium", "alternatives": ["We could also analyze this by time periods to see if carrier preference changes seasonally", "The analysis could be extended to look at shipping carrier distribution by product category or customer demographics"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the most common shipping carrier used for store sales?", "sql": "SELECT cd_education_status, cd_gender, AVG(cd_purchase_estimate) as avg_purchase_estimate FROM customer_demographics GROUP BY cd_education_status, cd_gender ORDER BY cd_education_status, cd_gender", "label": 0, "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_purchase_estimate", "customer_demographics.cd_gender"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the most common shipping carrier used for store sales?", "sql": "SELECT dummy_col, sm.sm_carrier, COUNT(*) as carrier_count FROM store_sales ss JOIN ship_mode sm ON ss.ss_ship_mode_sk = sm.sm_ship_mode_sk GROUP BY sm.sm_carrier ORDER BY carrier_count DESC LIMIT 1", "label": 0, "tables": ["ship_mode", "store_sales"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total number of items returned compared to the total number of items sold?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How does the quantity of returned merchandise compare to the overall sales volume?\n\n2. What is the ratio between items that were sent back and the total number of products sold?\n\n3. Can you provide a comparison between the count of returns and the complete sales quantity?"], "sql": "SELECT SUM(ss_quantity) AS total_items_sold, SUM(sr_return_quantity) AS total_items_returned, ROUND(SUM(sr_return_quantity)*100.0/SUM(ss_quantity), 2) AS return_percentage FROM store_sales LEFT JOIN store_returns ON ss_item_sk = sr_item_sk AND ss_customer_sk = sr_customer_sk", "tables": ["store_returns", "store_sales"], "columns": [], "business_intent": "To measure the return rate which is a critical retail performance metric that helps businesses understand customer satisfaction, product quality issues, and potential financial impact of returns. A high return rate might indicate problems with product quality, description accuracy, or customer expectations.", "complexity": "medium", "alternatives": ["We could also calculate the return rate by item category by joining with an item dimension table, or by time period by joining with date dimension tables to identify seasonal return patterns."], "sql_features": ["join"], "label": 1}
{"nl": "What is the total number of items returned compared to the total number of items sold?", "sql": "SELECT AVG(hd_dep_count) as avg_dependents FROM household_demographics WHERE hd_buy_potential = 'High'", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential", "household_demographics.hd_dep_count"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What is the total number of items returned compared to the total number of items sold?", "sql": "SELECT dummy_col, SUM(ss_quantity) AS total_items_sold, SUM(sr_return_quantity) AS total_items_returned, ROUND(SUM(sr_return_quantity)*100.0/SUM(ss_quantity), 2) AS return_percentage FROM store_sales LEFT JOIN store_returns ON ss_item_sk = sr_item_sk AND ss_customer_sk = sr_customer_sk", "label": 0, "tables": ["store_returns", "store_sales"], "columns": [], "sql_features": ["join"], "complexity": "hard"}
{"nl": "What are all the different carriers in the ship_mode table?", "paraphrases": ["Here are 3 different paraphrases of the original question:\n\n1. Can you list all the unique shipping carriers that appear in the ship_mode table?\n\n2. Which transportation providers are recorded in the ship_mode table?\n\n3. Could you identify all distinct carrier companies present in the ship_mode table?"], "sql": "SELECT DISTINCT sm_carrier FROM ship_mode ORDER BY sm_carrier", "tables": ["ship_mode"], "columns": ["ship_mode.sm_carrier"], "business_intent": "To identify all the logistics providers or shipping carriers the business works with, which helps in understanding the shipping options available and potentially analyzing vendor relationships.", "complexity": "easy", "alternatives": ["SELECT sm_carrier FROM ship_mode GROUP BY sm_carrier ORDER BY sm_carrier", "SELECT sm_carrier FROM ship_mode WHERE sm_carrier IS NOT NULL ORDER BY sm_carrier"], "sql_features": ["order_by"], "label": 1}
{"nl": "What are all the different carriers in the ship_mode table?", "sql": "SELECT DISTINCT dummy_col, i.i_item_id, i.i_product_name, i.i_item_desc FROM item i JOIN promotion p ON i.i_item_sk = p.p_item_sk WHERE p.p_channel_email = 1 AND p.p_channel_dmail = 1", "label": 0, "tables": ["promotion", "item"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What are all the different carriers in the ship_mode table?", "sql": "SELECT DISTINCT dummy_col, sm_carrier FROM ship_mode ORDER BY sm_carrier", "label": 0, "tables": ["ship_mode"], "columns": ["ship_mode.sm_carrier"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What is the total web sales amount for each web page, ordered by highest sales first?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Could you provide a breakdown of web sales totals for each webpage, ranked from the highest sales amount to the lowest?\n\n2. Please list the web pages by their total sales amounts in descending order, with the best-performing pages appearing first.\n\n3. What are the aggregate sales figures for individual web pages, sorted in decreasing order based on total revenue?"], "sql": "SELECT wp.wp_web_page_id, SUM(ws.ws_net_paid) as total_sales FROM web_sales ws JOIN web_page wp ON ws.ws_web_page_sk = wp.wp_web_page_sk GROUP BY wp.wp_web_page_id ORDER BY total_sales DESC", "tables": ["web_sales", "web_page"], "columns": [], "business_intent": "To identify which web pages are generating the most sales revenue, helping to prioritize improvement efforts, allocate marketing resources, and understand customer purchasing behavior across different pages of the website.", "complexity": "medium", "alternatives": ["We could analyze sales by specific time periods to see if web page performance varies seasonally or over time", "We might include additional metrics like average order value or conversion rate per page to get deeper insights into page performance"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the total web sales amount for each web page, ordered by highest sales first?", "sql": "SELECT dummy_col, i.i_category, COUNT(*) as return_count FROM web_returns wr JOIN item i ON wr.wr_item_sk = i.i_item_sk GROUP BY i.i_category ORDER BY return_count DESC LIMIT 5", "label": 0, "tables": ["web_returns", "item"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total web sales amount for each web page, ordered by highest sales first?", "sql": "SELECT dummy_col, wp.wp_web_page_id, SUM(ws.ws_net_paid) as total_sales FROM web_sales ws JOIN web_page wp ON ws.ws_web_page_sk = wp.wp_web_page_sk GROUP BY wp.wp_web_page_id ORDER BY total_sales DESC", "label": 0, "tables": ["web_sales", "web_page"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the count of promotions for each income band?", "paraphrases": ["# Paraphrases of \"What is the count of promotions for each income band?\"\n\n1. How many promotions occur within each income category?\n\n2. For every income bracket, what is the total number of promotions?\n\n3. Can you provide the promotion frequency broken down by income level?"], "sql": "SELECT ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound, COUNT(p.p_promo_sk) AS promotion_count FROM income_band ib LEFT JOIN promotion p ON (p.p_item_sk BETWEEN ib.ib_lower_bound AND ib.ib_upper_bound) GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound;", "tables": ["income_band", "promotion"], "columns": [], "business_intent": "To analyze how promotions are distributed across different income segments, which helps in understanding which income bands are targeted more frequently by marketing campaigns. This information can guide future promotional strategies to better target specific income demographics.", "complexity": "medium", "alternatives": ["Another approach could be to first categorize each promotion by income band using a subquery or CTE before counting, which might be more efficient for large datasets", "If p_item_sk doesn't actually represent income values, a more accurate implementation would require joining through another table that connects promotions to income bands"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the count of promotions for each income band?", "sql": "SELECT dummy_col, COUNT(*) FROM web_sales ws JOIN customer_address ca ON ws.ws_bill_customer_sk = ca.ca_address_sk WHERE ca.ca_state = 'CA'", "label": 0, "tables": ["web_sales", "customer_address"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the count of promotions for each income band?", "sql": "SELECT dummy_col, ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound, COUNT(p.p_promo_sk) AS promotion_count FROM income_band ib LEFT JOIN promotion p ON (p.p_item_sk BETWEEN ib.ib_lower_bound AND ib.ib_upper_bound) GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound;", "label": 0, "tables": ["income_band", "promotion"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "Which websites have a matching promotion in terms of their name?", "paraphrases": ["# Paraphrases of \"Which websites have a matching promotion in terms of their name?\"\n\n1. What online sites feature a promotional offer that corresponds to their domain name?\n\n2. Can you identify web platforms where the promotional deal aligns with the website's title?\n\n3. Which internet domains are running special offers that directly relate to their site name?"], "sql": "SELECT w.web_site_id, w.web_name, p.p_promo_id, p.p_promo_name FROM web_site w JOIN promotion p ON w.web_name = p.p_promo_name", "tables": ["promotion", "web_site"], "columns": [], "business_intent": "To identify marketing alignment between website branding and promotional campaigns by finding cases where websites and promotions share the same name. This helps marketing teams understand promotional consistency across channels and may reveal opportunities for better cross-channel integration.", "complexity": "medium", "alternatives": ["We could also look for partial matches using LIKE operator: SELECT w.web_site_id, w.web_name, p.p_promo_id, p.p_promo_name FROM web_site w JOIN promotion p ON p.p_promo_name LIKE CONCAT('%', w.web_name, '%')"], "sql_features": ["join"], "label": 1}
{"nl": "Which websites have a matching promotion in terms of their name?", "sql": "SELECT dummy_col, td.t_hour, AVG(inv.inv_quantity_on_hand) AS avg_quantity\nFROM inventory inv\nJOIN time_dim td ON inv.inv_date_sk = td.t_time_sk\nGROUP BY td.t_hour\nORDER BY td.t_hour;", "label": 0, "tables": ["inventory", "time_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "Which websites have a matching promotion in terms of their name?", "sql": "SELECT dummy_col, w.web_site_id, w.web_name, p.p_promo_id, p.p_promo_name FROM web_site w JOIN promotion p ON w.web_name = p.p_promo_name", "label": 0, "tables": ["promotion", "web_site"], "columns": [], "sql_features": ["join"], "complexity": "hard"}
{"nl": "What is the average inventory quantity on hand across all warehouses?", "paraphrases": ["# Paraphrases of \"What is the average inventory quantity on hand across all warehouses?\"\n\n1. Across the entire network of warehouses, what is the mean amount of inventory currently being stored?\n\n2. How much inventory do our warehouses hold on average when considering all storage locations?\n\n3. What's the typical quantity of stock maintained across all warehouse facilities when calculated as an average?"], "sql": "SELECT AVG(inv_quantity_on_hand) as avg_quantity FROM inventory", "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "business_intent": "To understand the overall inventory levels across the entire warehouse network, which helps determine if the company is maintaining appropriate stock levels overall. This metric provides a baseline for comparing individual warehouse performance and can inform inventory management strategies.", "complexity": "easy", "alternatives": ["SELECT ROUND(AVG(inv_quantity_on_hand), 2) as avg_quantity FROM inventory", "SELECT COUNT(*) as total_records, SUM(inv_quantity_on_hand) as total_quantity, SUM(inv_quantity_on_hand)/COUNT(*) as avg_quantity FROM inventory"], "sql_features": [], "label": 1}
{"nl": "What is the average inventory quantity on hand across all warehouses?", "sql": "SELECT SUM(wr_return_amt) AS total_monday_refunds FROM web_returns JOIN date_dim ON wr_returned_date_sk = d_date_sk WHERE d_day_name = 'Monday'", "label": 0, "tables": ["web_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the average inventory quantity on hand across all warehouses?", "sql": "SELECT dummy_col, AVG(inv_quantity_on_hand) as avg_quantity FROM inventory", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "sql_features": [], "complexity": "easy"}
{"nl": "What is the total quantity of items sold for each item category?", "paraphrases": ["# Paraphrases of \"What is the total quantity of items sold for each item category?\"\n\n1. How many units were sold in each product category?\n\n2. Could you provide the sum of sales quantities broken down by item category?\n\n3. For every category of items, what was the aggregate number of units sold?"], "sql": "SELECT i.i_category, SUM(ss.ss_quantity) as total_quantity_sold FROM store_sales ss JOIN item i ON ss.ss_item_sk = i.i_item_sk GROUP BY i.i_category ORDER BY total_quantity_sold DESC", "tables": ["item", "store_sales"], "columns": [], "business_intent": "To understand sales volume distribution across different product categories, which helps in inventory planning, marketing resource allocation, and identifying top-performing product segments.", "complexity": "medium", "alternatives": ["We could analyze this at a more granular level by grouping by both category and brand, or by adding time dimensions to see how category sales volumes change over time."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the total quantity of items sold for each item category?", "sql": "SELECT inv_warehouse_sk, SUM(inv_quantity_on_hand) as total_quantity FROM inventory WHERE inv_quantity_on_hand > 500 GROUP BY inv_warehouse_sk ORDER BY total_quantity DESC;", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand", "inventory.inv_warehouse_sk"], "sql_features": ["filter", "group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the total quantity of items sold for each item category?", "sql": "SELECT dummy_col, i.i_category, SUM(ss.ss_quantity) as total_quantity_sold FROM store_sales ss JOIN item i ON ss.ss_item_sk = i.i_item_sk GROUP BY i.i_category ORDER BY total_quantity_sold DESC", "label": 0, "tables": ["item", "store_sales"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the names of websites that have web pages created in the year 2000?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Which websites contain pages that were developed or published during the year 2000?\n\n2. Can you identify internet sites with web content that dates back to 2000?\n\n3. What are some website names that feature pages created in the millennium year 2000?"], "sql": "SELECT DISTINCT ws.web_name \nFROM web_site ws \nJOIN web_page wp ON ws.web_site_sk = wp.wp_web_page_sk \nWHERE EXTRACT(YEAR FROM wp.wp_creation_date_sk::date) = 2000 \nORDER BY ws.web_name", "tables": ["web_site", "web_page"], "columns": [], "business_intent": "Identify websites that were actively developing content during the year 2000, which could help analyze web development trends, content creation patterns, or digital presence establishment during the early internet era.", "complexity": "medium", "alternatives": ["The query assumes wp_creation_date_sk is a date that can be cast directly. If it's actually a foreign key to a date dimension table (as suggested in the schema description), the query would need to join to that table instead."], "sql_features": ["join", "filter", "order_by"], "label": 1}
{"nl": "What are the names of websites that have web pages created in the year 2000?", "sql": "SELECT DISTINCT sm_type FROM ship_mode ORDER BY sm_type;", "label": 0, "tables": ["ship_mode"], "columns": ["ship_mode.sm_type"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What are the names of websites that have web pages created in the year 2000?", "sql": "SELECT DISTINCT dummy_col, ws.web_name \nFROM web_site ws \nJOIN web_page wp ON ws.web_site_sk = wp.wp_web_page_sk \nWHERE EXTRACT(YEAR FROM wp.wp_creation_date_sk::date) = 2000 \nORDER BY ws.web_name", "label": 0, "tables": ["web_site", "web_page"], "columns": [], "sql_features": ["join", "filter", "order_by"], "complexity": "hard"}
{"nl": "Which promotions were active during the Christmas season (December) of 2001?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. What promotional campaigns were running in December 2001 during the Christmas holiday period?\n\n2. Can you identify which marketing promotions were in effect during the Christmas month (December) of 2001?\n\n3. During the 2001 Christmas season in December, which special offers or promotions were active?"], "sql": "SELECT p.p_promo_id, p.p_promo_name, p.p_channel_dmail, p.p_channel_email, p.p_channel_tv, p.p_channel_radio \nFROM promotion p \nJOIN date_dim d1 ON p.p_start_date_sk = d1.d_date_sk \nJOIN date_dim d2 ON p.p_end_date_sk = d2.d_date_sk \nWHERE (d1.d_year = 2001 AND d1.d_moy = 12) \nOR (d2.d_year = 2001 AND d2.d_moy = 12) \nOR (d1.d_year < 2001 AND d2.d_year > 2001) \nOR (d1.d_year = 2001 AND d1.d_moy < 12 AND d2.d_year = 2001 AND d2.d_moy > 12) \nOR (d1.d_year = 2001 AND d1.d_moy < 12 AND d2.d_year > 2001) \nOR (d1.d_year < 2001 AND d2.d_year = 2001 AND d2.d_moy > 12);", "tables": ["promotion", "date_dim"], "columns": [], "business_intent": "To identify marketing promotions that were running during December 2001, which is typically a high-value holiday shopping season. This analysis helps marketing teams understand which campaigns were active during this critical retail period and which marketing channels were used, enabling assessment of seasonal marketing strategies.", "complexity": "medium", "alternatives": ["A simpler but less accurate approach would be to only check if either the start date or end date falls in December 2001, but this would miss promotions that started before and ended after December 2001."], "sql_features": ["join", "filter"], "label": 1}
{"nl": "Which promotions were active during the Christmas season (December) of 2001?", "sql": "SELECT DISTINCT dummy_col, sm_type FROM ship_mode ORDER BY sm_type;", "label": 0, "tables": ["ship_mode"], "columns": ["ship_mode.sm_type"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "Which promotions were active during the Christmas season (December) of 2001?", "sql": "SELECT dummy_col, p.p_promo_id, p.p_promo_name, p.p_channel_dmail, p.p_channel_email, p.p_channel_tv, p.p_channel_radio \nFROM promotion p \nJOIN date_dim d1 ON p.p_start_date_sk = d1.d_date_sk \nJOIN date_dim d2 ON p.p_end_date_sk = d2.d_date_sk \nWHERE (d1.d_year = 2001 AND d1.d_moy = 12) \nOR (d2.d_year = 2001 AND d2.d_moy = 12) \nOR (d1.d_year < 2001 AND d2.d_year > 2001) \nOR (d1.d_year = 2001 AND d1.d_moy < 12 AND d2.d_year = 2001 AND d2.d_moy > 12) \nOR (d1.d_year = 2001 AND d1.d_moy < 12 AND d2.d_year > 2001) \nOR (d1.d_year < 2001 AND d2.d_year = 2001 AND d2.d_moy > 12);", "label": 0, "tables": ["promotion", "date_dim"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the average square footage of warehouses by state?", "paraphrases": ["# Paraphrased Questions\n\n1. How does the typical warehouse size in square feet vary across different states?\n\n2. What are the state-by-state averages for warehouse square footage?\n\n3. If we compare warehouse dimensions by state, what is the mean square footage in each?"], "sql": "SELECT w_state, AVG(w_warehouse_sq_ft) as avg_square_footage FROM warehouse GROUP BY w_state ORDER BY w_state", "tables": ["warehouse"], "columns": ["warehouse.w_state", "warehouse.w_warehouse_sq_ft"], "business_intent": "To analyze the average size of warehouse facilities across different states, which can help with regional capacity planning, strategic facility management, and understanding geographic distribution of storage infrastructure.", "complexity": "easy", "alternatives": ["SELECT w_state, AVG(w_warehouse_sq_ft) as avg_sq_ft, COUNT(*) as warehouse_count FROM warehouse GROUP BY w_state ORDER BY avg_sq_ft DESC"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What is the average square footage of warehouses by state?", "sql": "SELECT i.i_category, SUM(ss.ss_quantity) as total_quantity_sold FROM store_sales ss JOIN item i ON ss.ss_item_sk = i.i_item_sk GROUP BY i.i_category ORDER BY total_quantity_sold DESC", "label": 0, "tables": ["item", "store_sales"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average square footage of warehouses by state?", "sql": "SELECT dummy_col, w_state, AVG(w_warehouse_sq_ft) as avg_square_footage FROM warehouse GROUP BY w_state ORDER BY w_state", "label": 0, "tables": ["warehouse"], "columns": ["warehouse.w_state", "warehouse.w_warehouse_sq_ft"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the average inventory quantity for each shipping carrier?", "paraphrases": ["# Paraphrases of \"What is the average inventory quantity for each shipping carrier?\"\n\n1. For each transport provider, what is the mean stock level?\n\n2. What are the average stock quantities when broken down by shipping carrier?\n\n3. How much inventory do we maintain on average per logistics carrier?"], "sql": "SELECT sm.sm_carrier, AVG(i.inv_quantity_on_hand) AS avg_quantity\nFROM inventory i\nJOIN ship_mode sm ON i.inv_item_sk = sm.sm_ship_mode_sk\nGROUP BY sm.sm_carrier\nORDER BY avg_quantity DESC;", "tables": ["ship_mode", "inventory"], "columns": [], "business_intent": "To analyze average inventory levels by shipping carrier, which can help identify if certain carriers are associated with higher or lower inventory quantities. This information can be useful for logistics planning and carrier selection strategies.", "complexity": "medium", "alternatives": ["We could also join using warehouse_sk if there was a relationship between warehouses and shipping modes in the schema. The current query assumes a direct relationship between inventory items and shipping modes."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the average inventory quantity for each shipping carrier?", "sql": "SELECT dummy_col, p.p_promo_id, p.p_promo_sk, td.t_time, td.t_am_pm \nFROM promotion p \nJOIN time_dim td ON p.p_start_date_sk = td.t_time_sk \nWHERE td.t_am_pm = 'AM'", "label": 0, "tables": ["promotion", "time_dim"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the average inventory quantity for each shipping carrier?", "sql": "SELECT dummy_col, sm.sm_carrier, AVG(i.inv_quantity_on_hand) AS avg_quantity\nFROM inventory i\nJOIN ship_mode sm ON i.inv_item_sk = sm.sm_ship_mode_sk\nGROUP BY sm.sm_carrier\nORDER BY avg_quantity DESC;", "label": 0, "tables": ["ship_mode", "inventory"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What's the total number of returns made by customers with a college education?", "paraphrases": ["Here are three paraphrases of the original question, each preserving the meaning while using different wording:\n\n1. How many items were returned in total by customers who have completed college?\n\n2. Can you calculate the sum of all returns from consumers with university-level education?\n\n3. What is the aggregate count of product returns submitted by customers who hold college degrees?"], "sql": "SELECT COUNT(*) as return_count FROM catalog_returns cr JOIN customer_demographics cd ON cr.cr_refunded_cdemo_sk = cd.cd_demo_sk WHERE cd.cd_education_status LIKE '%College%'", "tables": ["catalog_returns", "customer_demographics"], "columns": [], "business_intent": "To analyze return patterns based on customer education level, specifically focusing on college-educated customers. This helps understand if education level correlates with return behavior and could inform targeted marketing or return policy adjustments for specific demographic segments.", "complexity": "medium", "alternatives": ["Could also analyze by using different education levels for comparison", "Could expand the analysis to include additional demographic factors along with education status"], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What's the total number of returns made by customers with a college education?", "sql": "SELECT r_reason_sk, r_reason_id, r_reason_desc FROM reason;", "label": 0, "tables": ["reason"], "columns": ["reason.r_reason_sk", "reason.r_reason_id", "reason.r_reason_desc"], "sql_features": [], "complexity": "easy"}
{"nl": "What's the total number of returns made by customers with a college education?", "sql": "SELECT dummy_col, COUNT(*) as return_count FROM catalog_returns cr JOIN customer_demographics cd ON cr.cr_refunded_cdemo_sk = cd.cd_demo_sk WHERE cd.cd_education_status LIKE '%College%'", "label": 0, "tables": ["catalog_returns", "customer_demographics"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What's the count of catalog sales transactions by state, ordered by count in descending order?", "paraphrases": ["# Paraphrases of the Question\n\n1. How many catalog sales transactions occurred in each state, with results sorted from highest to lowest count?\n\n2. Rank the states by their total number of catalog sales transactions, displaying them in descending order based on transaction count.\n\n3. Can you provide a breakdown of catalog sales transaction quantities per state, listing states with the most transactions first?"], "sql": "SELECT ca.ca_state, COUNT(*) as transaction_count FROM catalog_sales cs JOIN customer_address ca ON cs.cs_bill_customer_sk = ca.ca_address_sk GROUP BY ca.ca_state ORDER BY transaction_count DESC", "tables": ["catalog_sales", "customer_address"], "columns": [], "business_intent": "To analyze the geographic distribution of catalog sales across different states, helping identify high-volume regions for strategic business planning, marketing targeting, and resource allocation.", "complexity": "medium", "alternatives": ["Could analyze by shipping address instead of billing address by using a different join condition", "Could segment by additional geographic dimensions like city or county for more granular analysis"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What's the count of catalog sales transactions by state, ordered by count in descending order?", "sql": "SELECT dummy_col, c_birth_month, COUNT(*) as customer_count FROM customer GROUP BY c_birth_month ORDER BY c_birth_month", "label": 0, "tables": ["customer"], "columns": ["customer.c_birth_month"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What's the count of catalog sales transactions by state, ordered by count in descending order?", "sql": "SELECT dummy_col, ca.ca_state, COUNT(*) as transaction_count FROM catalog_sales cs JOIN customer_address ca ON cs.cs_bill_customer_sk = ca.ca_address_sk GROUP BY ca.ca_state ORDER BY transaction_count DESC", "label": 0, "tables": ["catalog_sales", "customer_address"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average quantity of inventory on hand across all warehouses?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Across all warehouse locations, what is the mean amount of inventory currently being stored?\n\n2. What quantity of stock do we have on average when considering all of our warehouses?\n\n3. If we calculate the typical inventory level across our entire warehouse network, what is that average figure?"], "sql": "SELECT AVG(inv_quantity_on_hand) AS avg_inventory_quantity FROM inventory", "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "business_intent": "To understand the overall inventory levels across the business, which helps with supply chain planning, inventory optimization, and identifying if the company is over or understocked on average.", "complexity": "easy", "alternatives": ["SELECT AVG(inv_quantity_on_hand) AS avg_inventory_quantity, COUNT(*) AS total_inventory_records FROM inventory", "SELECT MIN(inv_quantity_on_hand) AS min_quantity, AVG(inv_quantity_on_hand) AS avg_quantity, MAX(inv_quantity_on_hand) AS max_quantity FROM inventory"], "sql_features": [], "label": 1}
{"nl": "What is the average quantity of inventory on hand across all warehouses?", "sql": "SELECT DISTINCT dummy_col, i.i_item_id, i.i_product_name, i.i_item_desc FROM item i JOIN promotion p ON i.i_item_sk = p.p_item_sk WHERE p.p_channel_email = 1 AND p.p_channel_dmail = 1", "label": 0, "tables": ["promotion", "item"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the average quantity of inventory on hand across all warehouses?", "sql": "SELECT dummy_col, AVG(inv_quantity_on_hand) AS avg_inventory_quantity FROM inventory", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "sql_features": [], "complexity": "easy"}
{"nl": "What is the average inventory quantity on hand during meal times?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. During periods when meals are served, what is the typical amount of inventory maintained?\n\n2. What quantity of stock do we generally have available when food is being served?\n\n3. How much inventory is kept on hand, on average, during the times when meals are being prepared and consumed?"], "sql": "SELECT AVG(inv_quantity_on_hand) as avg_inventory_during_meals FROM inventory i JOIN time_dim t ON i.inv_date_sk = t.t_time_sk WHERE t.t_meal_time = 'Y'", "tables": ["inventory", "time_dim"], "columns": [], "business_intent": "To analyze inventory patterns during meal times, which could help optimize inventory management during potentially busier periods when customers may be shopping for meals or ingredients.", "complexity": "medium", "alternatives": ["We could also group by meal times if t_meal_time has multiple categories rather than a simple Y/N flag", "Could analyze this trend over different time periods by incorporating date dimensions"], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What is the average inventory quantity on hand during meal times?", "sql": "SELECT dummy_col, i_item_id, i_item_desc, i_current_price FROM item WHERE i_category = 'Books' ORDER BY i_current_price DESC LIMIT 1;", "label": 0, "tables": ["item"], "columns": ["item.i_current_price", "item.i_category", "item.i_item_id", "item.i_item_desc"], "sql_features": ["filter", "order_by"], "complexity": "easy"}
{"nl": "What is the average inventory quantity on hand during meal times?", "sql": "SELECT dummy_col, AVG(inv_quantity_on_hand) as avg_inventory_during_meals FROM inventory i JOIN time_dim t ON i.inv_date_sk = t.t_time_sk WHERE t.t_meal_time = 'Y'", "label": 0, "tables": ["inventory", "time_dim"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What are the top 5 states with the highest number of customer addresses?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Which five states have the greatest quantity of customer addresses?\n\n2. Can you identify the 5 states that contain the most customer addresses?\n\n3. In terms of customer address count, which states rank as the top five?"], "sql": "SELECT ca_state, COUNT(*) as address_count FROM customer_address GROUP BY ca_state ORDER BY address_count DESC LIMIT 5", "tables": ["customer_address"], "columns": ["customer_address.ca_state"], "business_intent": "To identify geographic concentration of customers by state, which can inform marketing strategies, resource allocation, and expansion planning. This analysis helps understand where the customer base is most heavily located.", "complexity": "easy", "alternatives": ["We could analyze customer density by joining with other tables to see not just where addresses are located but where active or high-value customers are concentrated."], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What are the top 5 states with the highest number of customer addresses?", "sql": "SELECT dummy_col, w_warehouse_name, w_warehouse_sq_ft FROM warehouse ORDER BY w_warehouse_sq_ft DESC LIMIT 1;", "label": 0, "tables": ["warehouse"], "columns": ["warehouse.w_warehouse_name", "warehouse.w_warehouse_sq_ft"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What are the top 5 states with the highest number of customer addresses?", "sql": "SELECT dummy_col, ca_state, COUNT(*) as address_count FROM customer_address GROUP BY ca_state ORDER BY address_count DESC LIMIT 5", "label": 0, "tables": ["customer_address"], "columns": ["customer_address.ca_state"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "Which call centers were opened before 2002 and are still in operation?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. What call centers that began operations prior to 2002 remain active today?\n\n2. Identify the call centers that were established before 2002 and continue to function in the present.\n\n3. Which customer service facilities launched before 2002 are still operational?"], "sql": "SELECT cc_call_center_id, cc_name FROM call_center WHERE cc_rec_start_date < '2002-01-01' AND (cc_closed_date_sk IS NULL OR cc_rec_end_date IS NULL)", "tables": ["call_center"], "columns": ["call_center.cc_rec_end_date", "call_center.cc_rec_start_date", "call_center.cc_call_center_id", "call_center.cc_closed_date_sk", "call_center.cc_name"], "business_intent": "To identify long-running call centers that have been in operation for more than two decades. This information can be valuable for operational analysis, understanding which facilities have sustained long-term success, or planning recognition for well-established centers.", "complexity": "medium", "alternatives": ["The query could be modified to include additional details like location information or manager names to provide more context about these long-running call centers"], "sql_features": ["filter"], "label": 1}
{"nl": "Which call centers were opened before 2002 and are still in operation?", "sql": "SELECT dummy_col, COUNT(*) FROM customer_demographics WHERE cd_education_status LIKE '%College%' AND cd_purchase_estimate > 5000", "label": 0, "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_purchase_estimate"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "Which call centers were opened before 2002 and are still in operation?", "sql": "SELECT dummy_col, cc_call_center_id, cc_name FROM call_center WHERE cc_rec_start_date < '2002-01-01' AND (cc_closed_date_sk IS NULL OR cc_rec_end_date IS NULL)", "label": 0, "tables": ["call_center"], "columns": ["call_center.cc_rec_start_date", "call_center.cc_rec_end_date", "call_center.cc_call_center_id", "call_center.cc_closed_date_sk", "call_center.cc_name"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "Which store has been operating for the longest time?", "paraphrases": ["# Paraphrases of \"Which store has been operating for the longest time?\"\n\n1. Which retail establishment has been in business for the greatest duration?\n\n2. Out of all the stores, which one has maintained operations for the most extended period?\n\n3. Which shop has the longest history of continuous operation?"], "sql": "SELECT s_store_id, s_store_name, s_rec_start_date FROM store WHERE s_closed_date_sk IS NULL ORDER BY s_rec_start_date ASC LIMIT 1", "tables": ["store"], "columns": ["store.s_rec_start_date", "store.s_store_id", "store.s_closed_date_sk", "store.s_store_name"], "business_intent": "To identify the store with the longest operational history that remains open, which could provide insights into successful business longevity and potentially inform decisions about store management strategies or historical performance analysis.", "complexity": "easy", "alternatives": ["SELECT s_store_id, s_store_name, DATEDIFF(CURRENT_DATE, s_rec_start_date) AS days_in_operation FROM store WHERE s_closed_date_sk IS NULL ORDER BY days_in_operation DESC LIMIT 1"], "sql_features": ["filter", "order_by"], "label": 1}
{"nl": "Which store has been operating for the longest time?", "sql": "SELECT AVG(ss_sales_price) as avg_sales_amount FROM store_sales JOIN time_dim ON ss_sold_time_sk = t_time_sk WHERE t_hour >= 14 AND t_hour < 16", "label": 0, "tables": ["time_dim", "store_sales"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "Which store has been operating for the longest time?", "sql": "SELECT dummy_col, s_store_id, s_store_name, s_rec_start_date FROM store WHERE s_closed_date_sk IS NULL ORDER BY s_rec_start_date ASC LIMIT 1", "label": 0, "tables": ["store"], "columns": ["store.s_rec_start_date", "store.s_closed_date_sk", "store.s_store_name", "store.s_store_id"], "sql_features": ["filter", "order_by"], "complexity": "easy"}
{"nl": "Which items have the highest return rate from catalog sales?", "paraphrases": ["# Paraphrases of \"Which items have the highest return rate from catalog sales?\"\n\n1. From products sold through catalogs, which ones are most frequently returned by customers?\n\n2. What merchandise purchased via catalog ordering experiences the greatest percentage of returns?\n\n3. In the context of catalog-based purchases, which products show the most significant rates of customer returns?"], "sql": "SELECT cr_item_sk, COUNT(*) as return_count FROM catalog_returns GROUP BY cr_item_sk ORDER BY return_count DESC LIMIT 10", "tables": ["catalog_returns"], "columns": ["catalog_returns.cr_item_sk"], "business_intent": "To identify the most problematic items that are frequently returned, which can help in quality control, product improvement, or potentially discontinuing problematic products. This analysis supports inventory management decisions and can reduce return-related costs.", "complexity": "easy", "alternatives": ["Could include additional metrics like total return amount or average return quantity to provide more context about the financial impact of these returns", "Could join with an item dimension table (if available) to show product names instead of just item SKs"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "Which items have the highest return rate from catalog sales?", "sql": "SELECT i.i_category, SUM(ss.ss_quantity) as total_quantity_sold FROM store_sales ss JOIN item i ON ss.ss_item_sk = i.i_item_sk GROUP BY i.i_category ORDER BY total_quantity_sold DESC", "label": 0, "tables": ["item", "store_sales"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "Which items have the highest return rate from catalog sales?", "sql": "SELECT dummy_col, cr_item_sk, COUNT(*) as return_count FROM catalog_returns GROUP BY cr_item_sk ORDER BY return_count DESC LIMIT 10", "label": 0, "tables": ["catalog_returns"], "columns": ["catalog_returns.cr_item_sk"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the distribution of education status among male customers with a high credit rating?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Among male clients with excellent credit scores, how are educational qualifications distributed?\n\n2. What educational attainment patterns can be observed in the male customer segment that maintains high credit ratings?\n\n3. How does educational background vary across male customers who possess strong credit credentials?"], "sql": "SELECT cd_education_status, COUNT(*) as customer_count FROM customer_demographics WHERE cd_gender = 'M' AND cd_credit_rating IN ('Good', 'High', 'Prime') GROUP BY cd_education_status ORDER BY customer_count DESC", "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_credit_rating", "customer_demographics.cd_gender"], "business_intent": "To analyze the educational profile of male customers with good credit for targeted marketing campaigns or financial product offerings. This helps in understanding the correlation between education level and credit-worthiness among male customers.", "complexity": "medium", "alternatives": ["We could also analyze this by including additional demographic factors like marital status to see if education and credit rating correlate differently for married vs single males.", "The query assumes certain values for 'high credit rating' - the actual values would need to be confirmed based on the specific values stored in the cd_credit_rating column."], "sql_features": ["filter", "group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of education status among male customers with a high credit rating?", "sql": "SELECT dummy_col, ib.ib_lower_bound, ib.ib_upper_bound, COUNT(ws.web_site_sk) as site_count FROM income_band ib LEFT JOIN web_site ws ON ws.web_mean_income BETWEEN ib.ib_lower_bound AND ib.ib_upper_bound GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound;", "label": 0, "tables": ["income_band", "web_site"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of education status among male customers with a high credit rating?", "sql": "SELECT dummy_col, cd_education_status, COUNT(*) as customer_count FROM customer_demographics WHERE cd_gender = 'M' AND cd_credit_rating IN ('Good', 'High', 'Prime') GROUP BY cd_education_status ORDER BY customer_count DESC", "label": 0, "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_credit_rating", "customer_demographics.cd_gender"], "sql_features": ["filter", "group_by", "order_by"], "complexity": "medium"}
{"nl": "What time of day has the highest number of catalog returns?", "paraphrases": ["Paraphrases of \"What time of day has the highest number of catalog returns?\":\n\n1. During which hours do customers send back catalog items most frequently?\n\n2. At what period of the day do catalog returns reach their peak volume?\n\n3. When, throughout the day, is the greatest quantity of catalog merchandise returned?"], "sql": "SELECT t.t_hour, COUNT(*) as return_count FROM catalog_returns cr JOIN time_dim t ON cr.cr_returned_time_sk = t.t_time_sk GROUP BY t.t_hour ORDER BY return_count DESC LIMIT 1;", "tables": ["catalog_returns", "time_dim"], "columns": [], "business_intent": "To identify peak hours for catalog return processing, which can help in resource allocation, staffing, and operational planning for customer service and returns processing departments.", "complexity": "medium", "alternatives": ["We could also analyze by time periods (morning/afternoon/evening) using t_am_pm or t_shift columns instead of specific hours", "We could break this down further by looking at both hour and minute components for more granular analysis"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What time of day has the highest number of catalog returns?", "sql": "SELECT dummy_col, p.p_promo_id, p.p_promo_sk, td.t_time, td.t_am_pm \nFROM promotion p \nJOIN time_dim td ON p.p_start_date_sk = td.t_time_sk \nWHERE td.t_am_pm = 'AM'", "label": 0, "tables": ["promotion", "time_dim"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What time of day has the highest number of catalog returns?", "sql": "SELECT dummy_col, t.t_hour, COUNT(*) as return_count FROM catalog_returns cr JOIN time_dim t ON cr.cr_returned_time_sk = t.t_time_sk GROUP BY t.t_hour ORDER BY return_count DESC LIMIT 1;", "label": 0, "tables": ["catalog_returns", "time_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total amount refunded in cash for each day in January 2022, ordered by date?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. For each day in January 2022, what was the daily sum of cash refunds, displayed chronologically?\n\n2. Can you provide a day-by-day breakdown of total cash refund amounts throughout January 2022, arranged in calendar order?\n\n3. Show the aggregate cash refund values for every date in January 2022, listing them sequentially from the beginning to the end of the month."], "sql": "SELECT d.d_date, SUM(cr.cr_refunded_cash) AS total_cash_refund\nFROM catalog_returns cr\nJOIN date_dim d ON cr.cr_returned_date_sk = d.d_date_sk\nWHERE d.d_year = 2022 AND d.d_month = 1\nGROUP BY d.d_date\nORDER BY d.d_date", "tables": ["catalog_returns", "date_dim"], "columns": [], "business_intent": "To analyze daily cash refund patterns for January 2022, which helps in understanding refund trends, cash flow impacts, and potential operational issues affecting returns during this specific month.", "complexity": "medium", "alternatives": ["We could also analyze this by looking at weekly totals instead of daily by using d_week_seq", "We could join with the call_center table to see which call centers processed the most cash refunds"], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What is the total amount refunded in cash for each day in January 2022, ordered by date?", "sql": "WITH avg_images AS (\n  SELECT AVG(wp_image_count) AS avg_img_count\n  FROM web_page\n)\nSELECT \n  AVG(wp_image_count) AS average_images_per_page,\n  COUNT(CASE WHEN wp_image_count > avg_img_count THEN 1 END) AS pages_above_average\nFROM web_page, avg_images;", "label": 0, "tables": ["web_page"], "columns": [], "sql_features": ["join"], "complexity": "hard"}
{"nl": "What is the total amount refunded in cash for each day in January 2022, ordered by date?", "sql": "SELECT dummy_col, d.d_date, SUM(cr.cr_refunded_cash) AS total_cash_refund\nFROM catalog_returns cr\nJOIN date_dim d ON cr.cr_returned_date_sk = d.d_date_sk\nWHERE d.d_year = 2022 AND d.d_month = 1\nGROUP BY d.d_date\nORDER BY d.d_date", "label": 0, "tables": ["catalog_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the names of web sites that sell items in the 'Electronics' category?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Which websites offer products for sale in the Electronics category?\n\n2. Can you list the names of online stores that market electronic items?\n\n3. What are some e-commerce platforms that specialize in selling Electronics category merchandise?"], "sql": "SELECT DISTINCT ws.web_name FROM web_site ws JOIN item i ON 1=1 WHERE i.i_category = 'Electronics'", "tables": ["web_site", "item"], "columns": [], "business_intent": "To identify which websites specialize in or carry electronics products, which could help with marketing strategies, inventory planning, or competitor analysis in the electronics retail space.", "complexity": "medium", "alternatives": ["The query could be refined if there was a direct relationship table between web_site and item, which isn't apparent in the provided schema. A more accurate approach would require additional tables that might link items to specific websites, such as sales or inventory tables."], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What are the names of web sites that sell items in the 'Electronics' category?", "sql": "SELECT t.t_hour, COUNT(*) as address_count FROM customer_address ca JOIN time_dim t ON ca.ca_gmt_offset = -8 GROUP BY t.t_hour ORDER BY address_count DESC", "label": 0, "tables": ["time_dim", "customer_address"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the names of web sites that sell items in the 'Electronics' category?", "sql": "SELECT DISTINCT dummy_col, ws.web_name FROM web_site ws JOIN item i ON 1=1 WHERE i.i_category = 'Electronics'", "label": 0, "tables": ["web_site", "item"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "Which stores have the highest number of catalog returns?", "paraphrases": ["Here are 3 different paraphrases of the original question:\n\n1. What retail establishments experience the greatest volume of catalog-based merchandise returns?\n\n2. From which shops do customers send back the most catalog-ordered items?\n\n3. Where do catalog returns occur most frequently among all stores?"], "sql": "SELECT s.s_store_id, s.s_store_name, COUNT(*) AS return_count FROM catalog_returns cr JOIN store s ON cr.cr_store_sk = s.s_store_sk GROUP BY s.s_store_id, s.s_store_name ORDER BY return_count DESC", "tables": ["catalog_returns", "store"], "columns": [], "business_intent": "To identify stores that process the most catalog returns, which helps in understanding store-level return patterns, potentially highlighting operational issues or geographic trends in return behavior. This information can inform staffing decisions, return policy adjustments, or targeted interventions at high-return locations.", "complexity": "medium", "alternatives": ["We could also analyze this by time period to see seasonal patterns, or join with additional tables to segment by product category or customer demographics to gain deeper insights into return patterns by store."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "Which stores have the highest number of catalog returns?", "sql": "SELECT ca_city, COUNT(*) as address_count FROM customer_address GROUP BY ca_city ORDER BY address_count DESC LIMIT 5", "label": 0, "tables": ["customer_address"], "columns": ["customer_address.ca_city"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "Which stores have the highest number of catalog returns?", "sql": "SELECT dummy_col, s.s_store_id, s.s_store_name, COUNT(*) AS return_count FROM catalog_returns cr JOIN store s ON cr.cr_store_sk = s.s_store_sk GROUP BY s.s_store_id, s.s_store_name ORDER BY return_count DESC", "label": 0, "tables": ["catalog_returns", "store"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of customers by household buying potential?", "paraphrases": ["# Paraphrases of \"What is the distribution of customers by household buying potential?\"\n\n1. How are customers segmented according to their household's purchasing capacity?\n\n2. Can you break down the customer base by each household's potential spending power?\n\n3. What is the spread of clientele when categorized by their household's economic ability to make purchases?"], "sql": "SELECT hd_buy_potential, COUNT(*) as customer_count FROM household_demographics GROUP BY hd_buy_potential ORDER BY customer_count DESC", "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential"], "business_intent": "To understand customer purchasing power distribution across the organization's customer base. This information can help with market segmentation, targeting specific customer groups with appropriate marketing strategies, and identifying which buying potential segments represent the largest portions of the customer base.", "complexity": "easy", "alternatives": ["We could also look at the average income band, vehicle count, or dependent count for each buying potential category by using more complex aggregations", "If we had the customer table available, we could join to get more detailed customer information associated with each buying potential segment"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of customers by household buying potential?", "sql": "SELECT t.t_hour, COUNT(*) as address_count FROM customer_address ca JOIN time_dim t ON ca.ca_gmt_offset = -8 GROUP BY t.t_hour ORDER BY address_count DESC", "label": 0, "tables": ["time_dim", "customer_address"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of customers by household buying potential?", "sql": "SELECT dummy_col, hd_buy_potential, COUNT(*) as customer_count FROM household_demographics GROUP BY hd_buy_potential ORDER BY customer_count DESC", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the average amount of money returned by customers across all store return transactions?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Across all store return transactions, what is the mean monetary value that customers receive back?\n\n2. On average, how much money do customers get back when they return items, considering all return transactions at the store?\n\n3. What is the typical refund amount when examining all customer returns processed by the store?"], "sql": "SELECT AVG(sr_return_amt) FROM store_returns", "tables": ["store_returns"], "columns": ["store_returns.sr_return_amt"], "business_intent": "To understand the average financial impact of a single return transaction, which helps in financial planning, return policy evaluation, and identifying unusual return patterns.", "complexity": "easy", "alternatives": ["We could also look at the median return amount using percentile functions if available, which might provide a better sense of 'typical' returns by avoiding skew from outliers", "Could analyze average returns segmented by time periods (days, months) to identify trends in return values"], "sql_features": [], "label": 1}
{"nl": "What is the average amount of money returned by customers across all store return transactions?", "sql": "SELECT i.i_category, SUM(ss.ss_quantity) as total_quantity_sold FROM store_sales ss JOIN item i ON ss.ss_item_sk = i.i_item_sk GROUP BY i.i_category ORDER BY total_quantity_sold DESC", "label": 0, "tables": ["item", "store_sales"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average amount of money returned by customers across all store return transactions?", "sql": "SELECT dummy_col, AVG(sr_return_amt) FROM store_returns", "label": 0, "tables": ["store_returns"], "columns": ["store_returns.sr_return_amt"], "sql_features": [], "complexity": "easy"}
{"nl": "What is the average inventory quantity on hand across all warehouses in January 2020?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. For January 2020, what was the mean level of inventory held across all warehouse locations?\n\n2. Calculating across all warehouses, what quantity of inventory was maintained on average during January 2020?\n\n3. What was the typical amount of stock on hand when averaged across the entire warehouse network in January of 2020?"], "sql": "SELECT AVG(inv.inv_quantity_on_hand) AS avg_quantity\nFROM inventory inv\nJOIN date_dim d ON inv.inv_date_sk = d.d_date_sk\nWHERE d.d_year = 2020 AND d.d_month = 1", "tables": ["date_dim", "inventory"], "columns": [], "business_intent": "To understand the average inventory levels during a specific month, which helps with inventory management, planning, and identifying potential overstocking or understocking issues across warehouses.", "complexity": "medium", "alternatives": ["The query could be modified to group by warehouse to compare average inventory levels across different locations", "Could be adjusted to look at daily averages within January 2020 to identify inventory trends throughout the month"], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What is the average inventory quantity on hand across all warehouses in January 2020?", "sql": "SELECT dummy_col, hd_buy_potential, COUNT(*) as sales_count, SUM(cs_net_paid) as total_sales_amount FROM catalog_sales JOIN household_demographics ON cs_bill_hdemo_sk = hd_demo_sk GROUP BY hd_buy_potential ORDER BY sales_count DESC", "label": 0, "tables": ["catalog_sales", "household_demographics"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average inventory quantity on hand across all warehouses in January 2020?", "sql": "SELECT dummy_col, AVG(inv.inv_quantity_on_hand) AS avg_quantity\nFROM inventory inv\nJOIN date_dim d ON inv.inv_date_sk = d.d_date_sk\nWHERE d.d_year = 2020 AND d.d_month = 1", "label": 0, "tables": ["date_dim", "inventory"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the total number of returns made by each customer in the database?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How many items has each individual customer returned according to our database records?\n\n2. Can you provide a breakdown of return quantities per customer as recorded in the database?\n\n3. For every customer in our database, what is the sum of all their returned items?"], "sql": "SELECT c.c_customer_id, COUNT(sr.sr_item_sk) AS total_returns FROM customer c JOIN store_returns sr ON c.c_customer_sk = sr.sr_customer_sk GROUP BY c.c_customer_id ORDER BY total_returns DESC", "tables": ["store_returns", "customer"], "columns": [], "business_intent": "To identify customers with high return frequencies, which can help in understanding customer return behavior, potentially flagging problematic customers, and informing customer retention strategies or return policy adjustments.", "complexity": "medium", "alternatives": ["We could also analyze the monetary value of returns by using sr_return_amt instead of counting return instances to understand financial impact per customer."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the total number of returns made by each customer in the database?", "sql": "SELECT dummy_col, r_reason_id, r_reason_desc FROM reason ORDER BY r_reason_id", "label": 0, "tables": ["reason"], "columns": ["reason.r_reason_id", "reason.r_reason_desc"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What is the total number of returns made by each customer in the database?", "sql": "SELECT dummy_col, c.c_customer_id, COUNT(sr.sr_item_sk) AS total_returns FROM customer c JOIN store_returns sr ON c.c_customer_sk = sr.sr_customer_sk GROUP BY c.c_customer_id ORDER BY total_returns DESC", "label": 0, "tables": ["store_returns", "customer"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the top 5 reasons for catalog returns based on the number of returns?", "paraphrases": ["# Paraphrased Versions\n\n1. Based on return volume, what are the five most common reasons customers send catalog items back?\n\n2. Which five justifications for catalog returns occur most frequently according to return counts?\n\n3. When analyzing catalog return data by quantity, what are the top five reasons customers give for returning their purchases?"], "sql": "SELECT r.r_reason_desc, COUNT(*) as return_count \nFROM catalog_returns cr \nJOIN reason r ON cr.cr_reason_sk = r.r_reason_sk \nGROUP BY r.r_reason_desc \nORDER BY return_count DESC \nLIMIT 5;", "tables": ["catalog_returns", "reason"], "columns": [], "business_intent": "To identify the most common reasons customers return catalog items, which helps the business understand return patterns and potentially address issues that lead to returns. This insight can inform product quality improvements, catalog descriptions, or customer service strategies.", "complexity": "easy", "alternatives": ["We could analyze this by time period by adding date filtering", "We could break this down by product category by joining with the item table", "We could calculate the financial impact by including refund amount columns in the analysis"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What are the top 5 reasons for catalog returns based on the number of returns?", "sql": "SELECT dummy_col, r.r_reason_desc, SUM(cs.cs_quantity) as total_quantity FROM catalog_sales cs JOIN reason r ON cs.cs_reason_sk = r.r_reason_sk GROUP BY r.r_reason_desc ORDER BY total_quantity DESC", "label": 0, "tables": ["catalog_sales", "reason"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the top 5 reasons for catalog returns based on the number of returns?", "sql": "SELECT dummy_col, r.r_reason_desc, COUNT(*) as return_count \nFROM catalog_returns cr \nJOIN reason r ON cr.cr_reason_sk = r.r_reason_sk \nGROUP BY r.r_reason_desc \nORDER BY return_count DESC \nLIMIT 5;", "label": 0, "tables": ["catalog_returns", "reason"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the top 10 cities with the highest total catalog sales amount?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Which 10 cities generated the largest overall revenue from catalog sales?\n\n2. Could you list the top 10 urban areas that recorded the highest cumulative amounts in catalog purchase transactions?\n\n3. Based on total catalog sales revenue, what are the 10 leading metropolitan areas?"], "sql": "SELECT ca.ca_city, SUM(cs.cs_net_paid) as total_sales_amount\nFROM catalog_sales cs\nJOIN customer_address ca ON cs.cs_bill_addr_sk = ca.ca_address_sk\nGROUP BY ca.ca_city\nORDER BY total_sales_amount DESC\nLIMIT 10;", "tables": ["catalog_sales", "customer_address"], "columns": [], "business_intent": "To identify the geographic distribution of catalog sales revenue by city, helping to understand which urban markets are most valuable to the business. This analysis can inform marketing strategy, resource allocation, and expansion planning by highlighting the most profitable city markets.", "complexity": "medium", "alternatives": ["Instead of using billing address, could use shipping address by joining on cs_ship_addr_sk instead of cs_bill_addr_sk to analyze where products are being delivered", "Could include additional dimensions such as time period (e.g., by quarter or year) to track changing city performance over time"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What are the top 10 cities with the highest total catalog sales amount?", "sql": "SELECT dummy_col, r_reason_sk, r_reason_id, r_reason_desc FROM reason;", "label": 0, "tables": ["reason"], "columns": ["reason.r_reason_sk", "reason.r_reason_id", "reason.r_reason_desc"], "sql_features": [], "complexity": "easy"}
{"nl": "What are the top 10 cities with the highest total catalog sales amount?", "sql": "SELECT dummy_col, ca.ca_city, SUM(cs.cs_net_paid) as total_sales_amount\nFROM catalog_sales cs\nJOIN customer_address ca ON cs.cs_bill_addr_sk = ca.ca_address_sk\nGROUP BY ca.ca_city\nORDER BY total_sales_amount DESC\nLIMIT 10;", "label": 0, "tables": ["catalog_sales", "customer_address"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the names and addresses of stores that closed in 2001?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Could you provide the names and locations of retail establishments that went out of business during 2001?\n\n2. Which stores shut down in 2001, and what were their physical addresses?\n\n3. I need information about businesses that ceased operations in 2001 - specifically their names and street addresses."], "sql": "SELECT s.s_store_name, s.s_street_number, s.s_street_name, s.s_street_type, s.s_suite_number, s.s_city, s.s_county, s.s_state, s.s_zip FROM store s JOIN date_dim d ON s.s_closed_date_sk = d.d_date_sk WHERE d.d_year = 2001", "tables": ["date_dim", "store"], "columns": [], "business_intent": "To identify stores that closed during the year 2001 to analyze closure patterns and potentially understand factors affecting store closures in that specific year. This information can be used for historical analysis of retail footprint changes and location-based performance evaluation.", "complexity": "medium", "alternatives": ["One could alternatively use the store's record end date (s_rec_end_date) to determine when a store record became inactive, but this would require additional filtering to ensure the inactivity was due to closure rather than record updates."], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What are the names and addresses of stores that closed in 2001?", "sql": "SELECT ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound, COUNT(ws.ws_bill_customer_sk) AS transaction_count FROM web_sales ws JOIN income_band ib ON (ws.ws_bill_cdemo_sk = ib.ib_income_band_sk) GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound;", "label": 0, "tables": ["income_band", "web_sales"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the names and addresses of stores that closed in 2001?", "sql": "SELECT dummy_col, s.s_store_name, s.s_street_number, s.s_street_name, s.s_street_type, s.s_suite_number, s.s_city, s.s_county, s.s_state, s.s_zip FROM store s JOIN date_dim d ON s.s_closed_date_sk = d.d_date_sk WHERE d.d_year = 2001", "label": 0, "tables": ["date_dim", "store"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the total net paid amount for store sales to customers living in cities that start with the letter 'M'?", "paraphrases": ["Paraphrases of the original question:\n\n1. For customers residing in cities beginning with 'M', what is the cumulative net amount paid for purchases made at stores?\n\n2. Calculate the sum of all net payments received from store purchases by customers whose home cities start with the letter 'M'.\n\n3. What total net revenue was generated from in-store sales to individuals living in cities whose names begin with 'M'?"], "sql": "SELECT SUM(ss_net_paid) AS total_net_paid \nFROM store_sales \nJOIN customer_address ON ss_addr_sk = ca_address_sk \nWHERE ca_city LIKE 'M%';", "tables": ["store_sales", "customer_address"], "columns": [], "business_intent": "To analyze sales performance by geographic location, specifically focusing on cities starting with a specific letter. This helps identify geographic sales patterns and could inform regional marketing strategies or resource allocation.", "complexity": "medium", "alternatives": ["We could filter by different geographic attributes such as state or county instead of city, or analyze other sales metrics like quantity sold or gross profit in these locations."], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What is the total net paid amount for store sales to customers living in cities that start with the letter 'M'?", "sql": "SELECT t.t_hour, COUNT(*) as promotion_count FROM promotion p JOIN time_dim t ON p.p_start_date_sk = t.t_time_sk WHERE p.p_channel_catalog = 'Y' GROUP BY t.t_hour ORDER BY promotion_count DESC LIMIT 5", "label": 0, "tables": ["promotion", "time_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total net paid amount for store sales to customers living in cities that start with the letter 'M'?", "sql": "SELECT dummy_col, SUM(ss_net_paid) AS total_net_paid \nFROM store_sales \nJOIN customer_address ON ss_addr_sk = ca_address_sk \nWHERE ca_city LIKE 'M%';", "label": 0, "tables": ["store_sales", "customer_address"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "Which items have a current price higher than the average current price of all items?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. What products are priced above the overall average price of all products in the inventory?\n\n2. Could you identify the merchandise whose present cost exceeds the mean current price across all items?\n\n3. Which goods have a selling price that is greater than the average current price calculated from all available items?"], "sql": "SELECT i_item_id, i_item_desc, i_current_price FROM item WHERE i_current_price > (SELECT AVG(i_current_price) FROM item)", "tables": ["item"], "columns": ["item.i_current_price", "item.i_item_id", "item.i_item_desc"], "business_intent": "To identify premium or above-average priced products in the catalog, which could help in pricing strategy analysis, premium product segmentation, or identifying potential candidates for promotions or margin optimization.", "complexity": "medium", "alternatives": ["SELECT i_item_id, i_item_desc, i_current_price, (SELECT AVG(i_current_price) FROM item) as avg_price FROM item WHERE i_current_price > (SELECT AVG(i_current_price) FROM item)", "WITH avg_price AS (SELECT AVG(i_current_price) as mean_price FROM item) SELECT i_item_id, i_item_desc, i_current_price FROM item, avg_price WHERE i_current_price > avg_price.mean_price"], "sql_features": ["filter", "subquery"], "label": 1}
{"nl": "Which items have a current price higher than the average current price of all items?", "sql": "SELECT dummy_col, AVG(ss_sales_price) as avg_sales_amount FROM store_sales JOIN time_dim ON ss_sold_time_sk = t_time_sk WHERE t_hour >= 14 AND t_hour < 16", "label": 0, "tables": ["time_dim", "store_sales"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "Which items have a current price higher than the average current price of all items?", "sql": "SELECT dummy_col, i_item_id, i_item_desc, i_current_price FROM item WHERE i_current_price > (SELECT AVG(i_current_price) FROM item)", "label": 0, "tables": ["item"], "columns": ["item.i_current_price", "item.i_item_id", "item.i_item_desc"], "sql_features": ["filter", "subquery"], "complexity": "hard"}
{"nl": "How many customers fall within each income band?", "paraphrases": ["# Paraphrases of \"How many customers fall within each income band?\"\n\n1. What is the distribution of customers across the different income brackets?\n\n2. Could you provide a breakdown of customer counts by income category?\n\n3. How is the customer base divided according to their respective income ranges?"], "sql": "SELECT ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound, COUNT(c.c_customer_sk) AS customer_count FROM income_band ib LEFT JOIN customer c ON c.c_income_band_id = ib.ib_income_band_sk GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound;", "tables": ["income_band", "customer"], "columns": [], "business_intent": "To analyze customer distribution across income segments for market segmentation, targeted marketing campaigns, and understanding demographic patterns. This helps in identifying which income brackets have the highest concentration of customers.", "complexity": "medium", "alternatives": ["We could filter for specific income bands if we wanted to focus on particular segments.", "We could join additional demographic tables if we wanted to further segment the data by other attributes."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "How many customers fall within each income band?", "sql": "SELECT dummy_col, d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "label": 0, "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "How many customers fall within each income band?", "sql": "SELECT dummy_col, ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound, COUNT(c.c_customer_sk) AS customer_count FROM income_band ib LEFT JOIN customer c ON c.c_income_band_id = ib.ib_income_band_sk GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound;", "label": 0, "tables": ["income_band", "customer"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total square footage of all warehouses?", "paraphrases": ["# Paraphrased Versions\n\n1. What is the combined square footage across all warehouse facilities?\n\n2. How many square feet do all the warehouses occupy in total?\n\n3. If you sum up the area of every warehouse, what is the total square footage?"], "sql": "SELECT SUM(w_warehouse_sq_ft) FROM warehouse;", "tables": ["warehouse"], "columns": ["warehouse.w_warehouse_sq_ft"], "business_intent": "To determine the total physical capacity across all warehouse facilities, which is useful for capacity planning, asset management, and understanding the overall scale of warehouse operations.", "complexity": "easy", "alternatives": ["SELECT w_warehouse_name, w_warehouse_sq_ft FROM warehouse ORDER BY w_warehouse_sq_ft DESC; -- to see individual warehouse sizes"], "sql_features": [], "label": 1}
{"nl": "What is the total square footage of all warehouses?", "sql": "SELECT dummy_col, MIN(cc_hours) FROM call_center WHERE cc_hours IS NOT NULL;", "label": 0, "tables": ["call_center"], "columns": ["call_center.cc_hours"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What is the total square footage of all warehouses?", "sql": "SELECT dummy_col, SUM(w_warehouse_sq_ft) FROM warehouse;", "label": 0, "tables": ["warehouse"], "columns": ["warehouse.w_warehouse_sq_ft"], "sql_features": [], "complexity": "easy"}
{"nl": "What is the total number of returns processed across both store and web channels?", "paraphrases": ["# Paraphrases of \"What is the total number of returns processed across both store and web channels?\"\n\n1. How many returns in total were handled through the store and web channels combined?\n\n2. What's the aggregate count of returns that were processed via both in-store and online channels?\n\n3. Considering both physical store and web-based channels, what is the sum of all processed returns?"], "sql": "SELECT COUNT(*) AS total_returns FROM store_returns UNION ALL SELECT COUNT(*) AS total_returns FROM web_returns", "tables": ["store_returns", "web_returns"], "columns": [], "business_intent": "To understand the overall volume of return transactions across all sales channels, which helps in assessing the scale of return operations and potentially identifying patterns in return behavior across different purchasing channels.", "complexity": "easy", "alternatives": ["SELECT (SELECT COUNT(*) FROM store_returns) + (SELECT COUNT(*) FROM web_returns) AS total_returns", "SELECT 'Store' as channel, COUNT(*) as returns FROM store_returns UNION ALL SELECT 'Web' as channel, COUNT(*) as returns FROM web_returns"], "sql_features": [], "label": 1}
{"nl": "What is the total number of returns processed across both store and web channels?", "sql": "SELECT hd_buy_potential, hd_vehicle_count, COUNT(*) as household_count FROM household_demographics GROUP BY hd_buy_potential, hd_vehicle_count ORDER BY hd_buy_potential, hd_vehicle_count", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential", "household_demographics.hd_vehicle_count"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the total number of returns processed across both store and web channels?", "sql": "SELECT dummy_col, COUNT(*) AS total_returns FROM store_returns UNION ALL SELECT COUNT(*) AS total_returns FROM web_returns", "label": 0, "tables": ["store_returns", "web_returns"], "columns": [], "sql_features": [], "complexity": "easy"}
{"nl": "What percentage of web returns have a purchase estimate greater than 5000 based on the refunded customer's demographics?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Based on demographic information of customers who received refunds, what proportion of online returns have an estimated purchase value exceeding $5000?\n\n2. Among web-based returns, what fraction shows purchase estimates above $5000 when analyzed by the demographics of customers who were refunded?\n\n3. Looking at the demographic profiles of refunded customers, what percentage of internet returns are associated with purchase estimates greater than $5000?"], "sql": "SELECT CAST(COUNT(CASE WHEN cd.cd_purchase_estimate > 5000 THEN 1 END) AS FLOAT) / COUNT(*) * 100 AS percentage_high_estimate_returns FROM web_returns wr JOIN customer_demographics cd ON wr.wr_refunded_cdemo_sk = cd.cd_demo_sk", "tables": ["web_returns", "customer_demographics"], "columns": [], "business_intent": "To understand what portion of web returns come from customers with higher spending potential, which could inform return policies, customer service strategies, or marketing decisions for high-value customers.", "complexity": "medium", "alternatives": ["We could also analyze this by specific return reasons or by comparing the percentage to store returns to see if high-spending customers behave differently across channels."], "sql_features": ["join"], "label": 1}
{"nl": "What percentage of web returns have a purchase estimate greater than 5000 based on the refunded customer's demographics?", "sql": "SELECT dummy_col, SUM(inv_quantity_on_hand) AS total_inventory FROM inventory", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "sql_features": [], "complexity": "easy"}
{"nl": "What percentage of web returns have a purchase estimate greater than 5000 based on the refunded customer's demographics?", "sql": "SELECT dummy_col, CAST(COUNT(CASE WHEN cd.cd_purchase_estimate > 5000 THEN 1 END) AS FLOAT) / COUNT(*) * 100 AS percentage_high_estimate_returns FROM web_returns wr JOIN customer_demographics cd ON wr.wr_refunded_cdemo_sk = cd.cd_demo_sk", "label": 0, "tables": ["web_returns", "customer_demographics"], "columns": [], "sql_features": ["join"], "complexity": "hard"}
{"nl": "What are the top 5 most returned items that typically have low inventory levels?", "paraphrases": ["# Paraphrased Versions\n\n1. Which five products with consistently low stock are most frequently returned by customers?\n\n2. Among items that tend to maintain minimal inventory, what are the five most commonly sent back?\n\n3. Can you identify the top five merchandise that experiences high return rates while simultaneously suffering from low stock availability?"], "sql": "SELECT i.inv_item_sk, COUNT(cr.cr_item_sk) as return_count, AVG(i.inv_quantity_on_hand) as avg_inventory\nFROM catalog_returns cr\nJOIN inventory i ON cr.cr_item_sk = i.inv_item_sk\nGROUP BY i.inv_item_sk\nORDER BY return_count DESC, avg_inventory ASC\nLIMIT 5", "tables": ["catalog_returns", "inventory"], "columns": [], "business_intent": "To identify products that are frequently returned and typically have low inventory levels. This information could help the business improve inventory management, address potential quality issues with these items, or reconsider stocking decisions for problematic products.", "complexity": "medium", "alternatives": ["Could use window functions to rank items by return count and then filter for those with inventory below a specific threshold", "Could join with additional tables like item to get more product details for deeper analysis"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What are the top 5 most returned items that typically have low inventory levels?", "sql": "SELECT dummy_col, td.t_hour, AVG(inv.inv_quantity_on_hand) AS avg_quantity\nFROM inventory inv\nJOIN time_dim td ON inv.inv_date_sk = td.t_time_sk\nGROUP BY td.t_hour\nORDER BY td.t_hour;", "label": 0, "tables": ["inventory", "time_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the top 5 most returned items that typically have low inventory levels?", "sql": "SELECT dummy_col, i.inv_item_sk, COUNT(cr.cr_item_sk) as return_count, AVG(i.inv_quantity_on_hand) as avg_inventory\nFROM catalog_returns cr\nJOIN inventory i ON cr.cr_item_sk = i.inv_item_sk\nGROUP BY i.inv_item_sk\nORDER BY return_count DESC, avg_inventory ASC\nLIMIT 5", "label": 0, "tables": ["catalog_returns", "inventory"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the total sales amounts for each store in 2022?", "paraphrases": ["# Paraphrases of \"What are the total sales amounts for each store in 2022?\"\n\n1. Could you provide the cumulative sales figures for all stores during the 2022 calendar year?\n\n2. How much revenue did each individual store location generate throughout 2022?\n\n3. I need a breakdown of the total sales volume per store for the year 2022."], "sql": "SELECT s.s_store_id, s.s_store_name, SUM(ss.ss_net_paid) as total_sales\nFROM store_sales ss\nJOIN store s ON ss.ss_store_sk = s.s_store_sk\nWHERE EXTRACT(YEAR FROM ss.ss_sold_date_sk) = 2022\nGROUP BY s.s_store_id, s.s_store_name\nORDER BY total_sales DESC", "tables": ["store", "store_sales"], "columns": [], "business_intent": "To analyze the performance of different store locations based on their total sales for a specific year. This helps identify top-performing and underperforming stores, which can inform business decisions about resource allocation, store expansion, or closure considerations.", "complexity": "medium", "alternatives": ["We could also include additional store attributes like size or location to provide more context for the sales figures", "The query could be modified to show monthly or quarterly breakdowns to identify seasonal trends by store"], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What are the total sales amounts for each store in 2022?", "sql": "SELECT dummy_col, cp_department, COUNT(*) AS page_count FROM catalog_page GROUP BY cp_department ORDER BY page_count DESC", "label": 0, "tables": ["catalog_page"], "columns": ["catalog_page.cp_department"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What are the total sales amounts for each store in 2022?", "sql": "SELECT dummy_col, s.s_store_id, s.s_store_name, SUM(ss.ss_net_paid) as total_sales\nFROM store_sales ss\nJOIN store s ON ss.ss_store_sk = s.s_store_sk\nWHERE EXTRACT(YEAR FROM ss.ss_sold_date_sk) = 2022\nGROUP BY s.s_store_id, s.s_store_name\nORDER BY total_sales DESC", "label": 0, "tables": ["store", "store_sales"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are all the unique reason descriptions in the system?", "paraphrases": ["# Paraphrases of \"What are all the unique reason descriptions in the system?\"\n\n1. Could you list all distinct reason descriptions available within the system?\n\n2. Please provide all the different reason descriptions that exist in the system without any duplicates.\n\n3. What is the complete set of individual reason descriptions that can be found in the system?"], "sql": "SELECT DISTINCT r_reason_desc FROM reason ORDER BY r_reason_desc;", "tables": ["reason"], "columns": ["reason.r_reason_desc"], "business_intent": "To understand the complete set of standardized reasons used across the organization. This helps business users understand what reason categories are available for classification and reporting purposes.", "complexity": "easy", "alternatives": ["SELECT r_reason_desc FROM reason GROUP BY r_reason_desc ORDER BY r_reason_desc;", "SELECT r_reason_desc, r_reason_id FROM reason ORDER BY r_reason_desc;"], "sql_features": ["order_by"], "label": 1}
{"nl": "What are all the unique reason descriptions in the system?", "sql": "SELECT AVG(ib_lower_bound) FROM income_band", "label": 0, "tables": ["income_band"], "columns": ["income_band.ib_lower_bound"], "sql_features": [], "complexity": "easy"}
{"nl": "What are all the unique reason descriptions in the system?", "sql": "SELECT DISTINCT dummy_col, r_reason_desc FROM reason ORDER BY r_reason_desc;", "label": 0, "tables": ["reason"], "columns": ["reason.r_reason_desc"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What is the total square footage of all warehouses?", "paraphrases": ["# Paraphrases of \"What is the total square footage of all warehouses?\"\n\n1. What is the combined square footage across all warehouse facilities?\n\n2. If you add up the square footage of every warehouse, what would be the total?\n\n3. What is the aggregate area, measured in square feet, of all warehouses collectively?"], "sql": "SELECT SUM(w_warehouse_sq_ft) AS total_warehouse_sq_ft FROM warehouse", "tables": ["warehouse"], "columns": ["warehouse.w_warehouse_sq_ft"], "business_intent": "To understand the total warehouse capacity available across all facilities, which is important for inventory planning, logistics management, and determining if additional warehouse space is needed for business operations.", "complexity": "easy", "alternatives": ["SELECT COUNT(*) AS warehouse_count, SUM(w_warehouse_sq_ft) AS total_sq_ft, AVG(w_warehouse_sq_ft) AS avg_sq_ft FROM warehouse"], "sql_features": [], "label": 1}
{"nl": "What is the total square footage of all warehouses?", "sql": "SELECT dummy_col, c.c_customer_id, c.c_email_address, COUNT(ws.ws_item_sk) AS total_transactions FROM web_sales ws JOIN customer c ON ws.ws_bill_customer_sk = c.c_customer_sk GROUP BY c.c_customer_id, c.c_email_address ORDER BY total_transactions DESC", "label": 0, "tables": ["web_sales", "customer"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total square footage of all warehouses?", "sql": "SELECT dummy_col, SUM(w_warehouse_sq_ft) AS total_warehouse_sq_ft FROM warehouse", "label": 0, "tables": ["warehouse"], "columns": ["warehouse.w_warehouse_sq_ft"], "sql_features": [], "complexity": "easy"}
{"nl": "Which hour of the day has the most distinct time records?", "paraphrases": ["# Paraphrases of \"Which hour of the day has the most distinct time records?\"\n\n1. During which hour of the 24-hour cycle do we observe the highest number of unique time entries?\n\n2. What time period within a day contains the greatest variety of individual time recordings?\n\n3. Of all the hourly segments in a day, which one encompasses the largest collection of different time records?"], "sql": "SELECT t_hour, COUNT(*) as record_count FROM time_dim GROUP BY t_hour ORDER BY record_count DESC LIMIT 1;", "tables": ["time_dim"], "columns": ["time_dim.t_hour"], "business_intent": "To identify which hour of the day contains the most time records in the time dimension table, which could help understand the distribution of time data or potential data quality issues if the distribution is unexpected.", "complexity": "easy", "alternatives": ["SELECT t_hour FROM time_dim GROUP BY t_hour ORDER BY COUNT(*) DESC LIMIT 1;"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "Which hour of the day has the most distinct time records?", "sql": "SELECT dummy_col, p.p_promo_id, p.p_promo_sk, td.t_time, td.t_am_pm \nFROM promotion p \nJOIN time_dim td ON p.p_start_date_sk = td.t_time_sk \nWHERE td.t_am_pm = 'AM'", "label": 0, "tables": ["promotion", "time_dim"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "Which hour of the day has the most distinct time records?", "sql": "SELECT dummy_col, t_hour, COUNT(*) as record_count FROM time_dim GROUP BY t_hour ORDER BY record_count DESC LIMIT 1;", "label": 0, "tables": ["time_dim"], "columns": ["time_dim.t_hour"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "Which web sites have been active for more than 5 years and are associated with households that have more than 2 dependents?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. What online platforms have maintained operations for over 5 years and are linked to families with more than 2 dependents?\n\n2. Can you identify websites that have been running for longer than 5 years and are connected to homes having at least 3 dependents?\n\n3. Which internet sites have existed for 5+ years and are used by households that include more than 2 dependent members?"], "sql": "SELECT DISTINCT ws.web_site_id, ws.web_name\nFROM web_site ws\nJOIN household_demographics hd ON ws.web_site_sk = hd.hd_demo_sk\nWHERE DATEDIFF(day, ws.web_rec_start_date, COALESCE(ws.web_rec_end_date, CURRENT_DATE)) > 1825\nAND hd.hd_dep_count > 2\nORDER BY ws.web_site_id;", "tables": ["web_site", "household_demographics"], "columns": [], "business_intent": "To identify long-established web sites that serve households with larger families, which could be useful for targeted marketing strategies or understanding customer demographics for websites that have demonstrated longevity in the market.", "complexity": "medium", "alternatives": ["We could calculate the duration using months or years instead of days for more readable logic", "Another approach could join through additional demographic tables if available to further refine the household characteristics"], "sql_features": ["join", "filter", "order_by"], "label": 1}
{"nl": "Which web sites have been active for more than 5 years and are associated with households that have more than 2 dependents?", "sql": "SELECT p.p_promo_id, p.p_promo_sk, td.t_time, td.t_am_pm \nFROM promotion p \nJOIN time_dim td ON p.p_start_date_sk = td.t_time_sk \nWHERE td.t_am_pm = 'AM'", "label": 0, "tables": ["promotion", "time_dim"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "Which web sites have been active for more than 5 years and are associated with households that have more than 2 dependents?", "sql": "SELECT DISTINCT dummy_col, ws.web_site_id, ws.web_name\nFROM web_site ws\nJOIN household_demographics hd ON ws.web_site_sk = hd.hd_demo_sk\nWHERE DATEDIFF(day, ws.web_rec_start_date, COALESCE(ws.web_rec_end_date, CURRENT_DATE)) > 1825\nAND hd.hd_dep_count > 2\nORDER BY ws.web_site_id;", "label": 0, "tables": ["web_site", "household_demographics"], "columns": [], "sql_features": ["join", "filter", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of purchase estimates across different education levels?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How do estimated purchases vary among people with different educational backgrounds?\n\n2. Can you show the breakdown of purchase estimates according to consumers' education levels?\n\n3. What patterns emerge when purchase estimates are analyzed by level of educational attainment?"], "sql": "SELECT cd_education_status, cd_purchase_estimate, COUNT(*) as count FROM customer_demographics GROUP BY cd_education_status, cd_purchase_estimate ORDER BY cd_education_status, cd_purchase_estimate", "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_purchase_estimate"], "business_intent": "To analyze the relationship between education levels and purchase potential, helping marketing teams understand how education status correlates with spending capacity for more targeted customer segmentation and marketing campaigns.", "complexity": "medium", "alternatives": ["SELECT cd_education_status, AVG(cd_purchase_estimate) as avg_purchase FROM customer_demographics GROUP BY cd_education_status ORDER BY cd_education_status", "SELECT cd_education_status, MIN(cd_purchase_estimate) as min_purchase, MAX(cd_purchase_estimate) as max_purchase, AVG(cd_purchase_estimate) as avg_purchase FROM customer_demographics GROUP BY cd_education_status ORDER BY cd_education_status"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of purchase estimates across different education levels?", "sql": "SELECT td.t_hour, COUNT(*) as page_count FROM catalog_page cp JOIN time_dim td ON cp.cp_start_date_sk = td.t_time_sk GROUP BY td.t_hour ORDER BY page_count DESC", "label": 0, "tables": ["catalog_page", "time_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of purchase estimates across different education levels?", "sql": "SELECT dummy_col, cd_education_status, cd_purchase_estimate, COUNT(*) as count FROM customer_demographics GROUP BY cd_education_status, cd_purchase_estimate ORDER BY cd_education_status, cd_purchase_estimate", "label": 0, "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_purchase_estimate"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the average number of vehicles owned by households with high buying potential (over 5000)?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. For households categorized as having high purchasing power (exceeding 5000), what is the mean number of vehicles they possess?\n\n2. Among families with substantial buying capacity (above 5000), what's the typical quantity of vehicles owned per household?\n\n3. What's the average vehicle ownership rate for households classified with strong purchasing potential (greater than 5000)?"], "sql": "SELECT AVG(hd_vehicle_count) AS avg_vehicles\nFROM household_demographics\nWHERE hd_buy_potential = 'over 5000'", "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential", "household_demographics.hd_vehicle_count"], "business_intent": "To understand the vehicle ownership patterns of households with high purchasing power, which could inform marketing strategies for automotive products or services, or assist in customer segmentation for targeted campaigns.", "complexity": "easy", "alternatives": ["SELECT hd_buy_potential, AVG(hd_vehicle_count) AS avg_vehicles\nFROM household_demographics\nWHERE hd_buy_potential = 'over 5000'\nGROUP BY hd_buy_potential", "SELECT ROUND(AVG(hd_vehicle_count), 2) AS avg_vehicles\nFROM household_demographics\nWHERE hd_buy_potential = 'over 5000'"], "sql_features": ["filter"], "label": 1}
{"nl": "What is the average number of vehicles owned by households with high buying potential (over 5000)?", "sql": "SELECT DISTINCT dummy_col, i.i_item_id, i.i_product_name, i.i_item_desc FROM item i JOIN promotion p ON i.i_item_sk = p.p_item_sk WHERE p.p_channel_email = 1 AND p.p_channel_dmail = 1", "label": 0, "tables": ["promotion", "item"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the average number of vehicles owned by households with high buying potential (over 5000)?", "sql": "SELECT dummy_col, AVG(hd_vehicle_count) AS avg_vehicles\nFROM household_demographics\nWHERE hd_buy_potential = 'over 5000'", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential", "household_demographics.hd_vehicle_count"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What is the average quantity of items available on hand across all warehouses for products that were sold through web sales in the past?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. For products that have been previously sold online, what is the mean inventory level per warehouse?\n\n2. What's the typical stock count per warehouse facility, averaged across all products that have historically been purchased through online sales?\n\n3. Considering only items that have been sold via web channels before, what is the average on-hand inventory quantity when looking across all warehouse locations?"], "sql": "SELECT AVG(i.inv_quantity_on_hand) as avg_quantity\nFROM inventory i\nWHERE i.inv_item_sk IN (SELECT DISTINCT ws_item_sk FROM web_sales)", "tables": ["web_sales", "inventory"], "columns": [], "business_intent": "Analyze inventory levels for products with web sales history to understand stocking patterns for popular items. This helps optimize inventory management by identifying average stock levels maintained for products that have demonstrated market demand.", "complexity": "medium", "alternatives": ["We could also group by warehouse to see differences in stocking levels: SELECT inv_warehouse_sk, AVG(inv_quantity_on_hand) FROM inventory WHERE inv_item_sk IN (SELECT DISTINCT ws_item_sk FROM web_sales) GROUP BY inv_warehouse_sk"], "sql_features": ["filter", "subquery"], "label": 1}
{"nl": "What is the average quantity of items available on hand across all warehouses for products that were sold through web sales in the past?", "sql": "SELECT dummy_col, d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "label": 0, "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average quantity of items available on hand across all warehouses for products that were sold through web sales in the past?", "sql": "SELECT dummy_col, AVG(i.inv_quantity_on_hand) as avg_quantity\nFROM inventory i\nWHERE i.inv_item_sk IN (SELECT DISTINCT ws_item_sk FROM web_sales)", "label": 0, "tables": ["web_sales", "inventory"], "columns": [], "sql_features": ["filter", "subquery"], "complexity": "hard"}
{"nl": "What are the top 5 states with the most stores?", "paraphrases": ["# Paraphrases of \"What are the top 5 states with the most stores?\"\n\n1. Which five states have the highest number of retail establishments?\n\n2. Can you list the 5 states that contain the greatest quantity of stores?\n\n3. Among all states, which ones rank in the top five for store count?"], "sql": "SELECT s_state, COUNT(*) as store_count FROM store GROUP BY s_state ORDER BY store_count DESC LIMIT 5", "tables": ["store"], "columns": ["store.s_state"], "business_intent": "To identify geographic concentration of the retail network by finding which states have the most store locations. This information is valuable for strategic planning, resource allocation, and understanding market penetration across different regions.", "complexity": "easy", "alternatives": ["The query could be modified to count only active stores by filtering out closed stores based on s_closed_date_sk", "The analysis could be extended to include market regions or divisions for a more hierarchical geographic breakdown"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What are the top 5 states with the most stores?", "sql": "SELECT dummy_col, w_warehouse_name, w_warehouse_sq_ft FROM warehouse ORDER BY w_warehouse_sq_ft DESC LIMIT 10;", "label": 0, "tables": ["warehouse"], "columns": ["warehouse.w_warehouse_name", "warehouse.w_warehouse_sq_ft"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What are the top 5 states with the most stores?", "sql": "SELECT dummy_col, s_state, COUNT(*) as store_count FROM store GROUP BY s_state ORDER BY store_count DESC LIMIT 5", "label": 0, "tables": ["store"], "columns": ["store.s_state"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "How many households fall into each income band and what is the average number of vehicles per income band?", "paraphrases": ["# Paraphrases\n\n1. For each income category, what is the total count of households and the average number of vehicles owned?\n\n2. Could you provide a breakdown of household distribution across income bands, along with the mean vehicle ownership per band?\n\n3. What is the distribution of households among different income brackets, and what average number of vehicles corresponds to each income level?"], "sql": "SELECT ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound, COUNT(hd.hd_demo_sk) AS household_count, AVG(hd.hd_vehicle_count) AS avg_vehicles FROM income_band ib LEFT JOIN household_demographics hd ON ib.ib_income_band_sk = hd.hd_income_band_sk GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound", "tables": ["income_band", "household_demographics"], "columns": [], "business_intent": "To analyze household distribution across different income segments and understand if there's a relationship between income levels and vehicle ownership. This insight can help marketing teams target specific income demographics with appropriate vehicle-related products or services.", "complexity": "medium", "alternatives": ["We could also include additional household demographic attributes like buying potential (hd_buy_potential) or number of dependents (hd_dep_count) to get a more comprehensive profile of each income band."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "How many households fall into each income band and what is the average number of vehicles per income band?", "sql": "SELECT dummy_col, SUM(wr_return_amt) AS total_refund_amount FROM web_returns wr JOIN web_site ws ON wr.wr_web_site_sk = ws.web_site_sk WHERE ws.web_state = 'CA'", "label": 0, "tables": ["web_returns", "web_site"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "How many households fall into each income band and what is the average number of vehicles per income band?", "sql": "SELECT dummy_col, ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound, COUNT(hd.hd_demo_sk) AS household_count, AVG(hd.hd_vehicle_count) AS avg_vehicles FROM income_band ib LEFT JOIN household_demographics hd ON ib.ib_income_band_sk = hd.hd_income_band_sk GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound", "label": 0, "tables": ["income_band", "household_demographics"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the average inventory quantities for each item category?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. For each category of items, what is the mean inventory level?\n\n2. What quantities, on average, are maintained in inventory across the different item categories?\n\n3. How many units, on average, do we keep in stock for each type of item category?"], "sql": "SELECT i.i_category, AVG(inv.inv_quantity_on_hand) AS avg_quantity\nFROM inventory inv\nJOIN item i ON inv.inv_item_sk = i.i_item_sk\nWHERE inv.inv_quantity_on_hand IS NOT NULL\nGROUP BY i.i_category\nORDER BY i.i_category", "tables": ["inventory", "item"], "columns": [], "business_intent": "To analyze inventory levels by product category to inform category-level inventory management strategies, identify categories with excess or insufficient stock, and support inventory optimization decisions.", "complexity": "medium", "alternatives": ["We could also segment this data further by warehouse to understand category inventory distribution across locations", "The analysis could be enhanced by adding time dimensions using inv_date_sk to track seasonal patterns by category"], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What are the average inventory quantities for each item category?", "sql": "SELECT t.t_hour, COUNT(*) as promotion_count FROM promotion p JOIN time_dim t ON p.p_start_date_sk = t.t_time_sk WHERE p.p_channel_catalog = 'Y' GROUP BY t.t_hour ORDER BY promotion_count DESC LIMIT 5", "label": 0, "tables": ["promotion", "time_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the average inventory quantities for each item category?", "sql": "SELECT dummy_col, i.i_category, AVG(inv.inv_quantity_on_hand) AS avg_quantity\nFROM inventory inv\nJOIN item i ON inv.inv_item_sk = i.i_item_sk\nWHERE inv.inv_quantity_on_hand IS NOT NULL\nGROUP BY i.i_category\nORDER BY i.i_category", "label": 0, "tables": ["inventory", "item"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the different buying potential categories in the household demographics data?", "paraphrases": ["# Paraphrased Versions\n\n1. What are the various categories used to classify purchasing power in the household demographics dataset?\n\n2. In the household demographics information, how are the different levels of consumer spending potential categorized?\n\n3. Could you identify the distinct classifications of buying capacity that exist within the household demographics data?"], "sql": "SELECT DISTINCT hd_buy_potential FROM household_demographics ORDER BY hd_buy_potential;", "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential"], "business_intent": "To understand the different qualitative classifications used to segment households based on their purchasing power or propensity. This information can help in marketing strategies, customer segmentation, and targeting specific household groups based on their buying potential.", "complexity": "easy", "alternatives": ["SELECT hd_buy_potential, COUNT(*) FROM household_demographics GROUP BY hd_buy_potential ORDER BY hd_buy_potential;", "SELECT hd_buy_potential FROM household_demographics GROUP BY hd_buy_potential ORDER BY hd_buy_potential;"], "sql_features": ["order_by"], "label": 1}
{"nl": "What are the different buying potential categories in the household demographics data?", "sql": "SELECT t.t_hour, COUNT(*) as address_count FROM customer_address ca JOIN time_dim t ON ca.ca_gmt_offset = -8 GROUP BY t.t_hour ORDER BY address_count DESC", "label": 0, "tables": ["time_dim", "customer_address"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the different buying potential categories in the household demographics data?", "sql": "SELECT DISTINCT dummy_col, hd_buy_potential FROM household_demographics ORDER BY hd_buy_potential;", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "Which carrier has the most shipping modes?", "paraphrases": ["# Paraphrases of \"Which carrier has the most shipping modes?\"\n\n1. What transportation company offers the greatest variety of delivery methods?\n\n2. Among logistics providers, which one provides the widest range of shipping options?\n\n3. Which freight service has the largest selection of transportation modes available?"], "sql": "SELECT sm_carrier, COUNT(*) as mode_count FROM ship_mode GROUP BY sm_carrier ORDER BY mode_count DESC LIMIT 1", "tables": ["ship_mode"], "columns": ["ship_mode.sm_carrier"], "business_intent": "To identify the carrier with the most diverse shipping options, which helps understand the company's logistics partnerships and shipping capabilities. This information can be valuable for supply chain management and vendor relationship assessment.", "complexity": "easy", "alternatives": ["SELECT sm_carrier FROM ship_mode GROUP BY sm_carrier ORDER BY COUNT(*) DESC LIMIT 1", "WITH carrier_counts AS (SELECT sm_carrier, COUNT(*) as mode_count FROM ship_mode GROUP BY sm_carrier) SELECT sm_carrier FROM carrier_counts WHERE mode_count = (SELECT MAX(mode_count) FROM carrier_counts)"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "Which carrier has the most shipping modes?", "sql": "SELECT dummy_col, sm.sm_carrier, COUNT(*) as carrier_count FROM store_sales ss JOIN ship_mode sm ON ss.ss_ship_mode_sk = sm.sm_ship_mode_sk GROUP BY sm.sm_carrier ORDER BY carrier_count DESC LIMIT 1", "label": 0, "tables": ["ship_mode", "store_sales"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "Which carrier has the most shipping modes?", "sql": "SELECT dummy_col, sm_carrier, COUNT(*) as mode_count FROM ship_mode GROUP BY sm_carrier ORDER BY mode_count DESC LIMIT 1", "label": 0, "tables": ["ship_mode"], "columns": ["ship_mode.sm_carrier"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the total web sales amount for each month in 2002?", "paraphrases": ["# Paraphrased Versions\n\n1. For every month during 2002, what was the sum of all web sales?\n\n2. Could you provide a monthly breakdown of the total web sales figures throughout 2002?\n\n3. How much revenue was generated from online sales in each month of 2002?"], "sql": "SELECT d.d_month, SUM(ws.ws_net_paid) as total_sales\nFROM web_sales ws\nJOIN date_dim d ON ws.ws_sold_time_sk = d.d_date_sk\nWHERE d.d_year = 2002\nGROUP BY d.d_month\nORDER BY d.d_month", "tables": ["web_sales", "date_dim"], "columns": [], "business_intent": "To analyze the monthly sales trends for the e-commerce platform throughout 2002. This helps in understanding seasonal patterns in online sales performance and identifying high and low performing months for that specific year.", "complexity": "medium", "alternatives": ["Could also use ws_ship_date_sk instead of ws_sold_time_sk if the business is interested in when orders were shipped rather than sold.", "Could use other sales metrics like ws_net_profit or ws_sales_price instead of ws_net_paid depending on the exact business need."], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What is the total web sales amount for each month in 2002?", "sql": "SELECT i_item_id, i_item_desc, i_current_price FROM item WHERE i_current_price > (SELECT AVG(i_current_price) FROM item)", "label": 0, "tables": ["item"], "columns": ["item.i_current_price", "item.i_item_id", "item.i_item_desc"], "sql_features": ["filter", "subquery"], "complexity": "hard"}
{"nl": "What is the total web sales amount for each month in 2002?", "sql": "SELECT dummy_col, d.d_month, SUM(ws.ws_net_paid) as total_sales\nFROM web_sales ws\nJOIN date_dim d ON ws.ws_sold_time_sk = d.d_date_sk\nWHERE d.d_year = 2002\nGROUP BY d.d_month\nORDER BY d.d_month", "label": 0, "tables": ["web_sales", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "Which states have customers who have spent over $10,000 in total web sales?", "paraphrases": ["# Paraphrases of \"Which states have customers who have spent over $10,000 in total web sales?\"\n\n1. In which states do you find customers whose cumulative online purchases exceed $10,000?\n\n2. For total web sales surpassing $10,000, which states are home to such high-spending customers?\n\n3. Which geographic states contain customers with aggregate internet sales of more than $10,000?"], "sql": "SELECT DISTINCT ca.ca_state\nFROM customer_address ca\nJOIN web_sales ws ON ca.ca_address_sk = ws.ws_bill_customer_sk\nGROUP BY ca.ca_state\nHAVING SUM(ws.ws_net_paid) > 10000\nORDER BY ca.ca_state", "tables": ["web_sales", "customer_address"], "columns": [], "business_intent": "To identify high-value geographic markets by finding states with significant customer spending. This information can be used for targeted marketing campaigns, expansion planning, or resource allocation based on customer concentration and spending behavior.", "complexity": "medium", "alternatives": ["Could also use ws_bill_addr_sk instead of ws_bill_customer_sk for the join if the goal is to analyze billing addresses rather than customer locations.", "Could analyze by different geographic granularities like ca_county or ca_zip instead of state for more localized insights."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "Which states have customers who have spent over $10,000 in total web sales?", "sql": "SELECT i.i_category, SUM(ws.ws_net_paid) as total_sales FROM web_sales ws JOIN item i ON ws.ws_item_sk = i.i_item_sk GROUP BY i.i_category ORDER BY total_sales DESC", "label": 0, "tables": ["web_sales", "item"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "Which states have customers who have spent over $10,000 in total web sales?", "sql": "SELECT DISTINCT dummy_col, ca.ca_state\nFROM customer_address ca\nJOIN web_sales ws ON ca.ca_address_sk = ws.ws_bill_customer_sk\nGROUP BY ca.ca_state\nHAVING SUM(ws.ws_net_paid) > 10000\nORDER BY ca.ca_state", "label": 0, "tables": ["web_sales", "customer_address"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the top 5 months with the highest number of web pages created?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Which five months had the greatest volume of new web pages being created?\n\n2. In terms of web page creation, which 5 months show the highest production rates?\n\n3. If we rank months by the quantity of web pages generated, which ones occupy the top 5 positions?"], "sql": "SELECT d.d_month, d.d_year, COUNT(*) as page_count FROM web_page wp JOIN date_dim d ON wp.wp_creation_date_sk = d.d_date_sk GROUP BY d.d_month, d.d_year ORDER BY page_count DESC LIMIT 5", "tables": ["web_page", "date_dim"], "columns": [], "business_intent": "To identify seasonal trends in web page creation activity by determining which months historically have the highest volume of new pages being created. This information can help with resource planning, content strategy, and understanding peak periods of digital content development.", "complexity": "medium", "alternatives": ["We could modify this to analyze by quarter instead of month by using d_qoy (quarter of year) instead of d_month", "We could look at web page creation trends by day of week to identify whether more pages are created on specific weekdays"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What are the top 5 months with the highest number of web pages created?", "sql": "SELECT dummy_col, cp_department, COUNT(*) AS page_count FROM catalog_page GROUP BY cp_department ORDER BY page_count DESC", "label": 0, "tables": ["catalog_page"], "columns": ["catalog_page.cp_department"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What are the top 5 months with the highest number of web pages created?", "sql": "SELECT dummy_col, d.d_month, d.d_year, COUNT(*) as page_count FROM web_page wp JOIN date_dim d ON wp.wp_creation_date_sk = d.d_date_sk GROUP BY d.d_month, d.d_year ORDER BY page_count DESC LIMIT 5", "label": 0, "tables": ["web_page", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "How many product returns were processed in each month of 2022?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. What was the monthly breakdown of processed product returns throughout 2022?\n\n2. For each month in 2022, how many items were processed as returns?\n\n3. Can you provide the number of product returns that were processed month by month during 2022?"], "sql": "SELECT d.d_month, COUNT(*) as return_count \nFROM store_returns sr \nJOIN date_dim d ON sr.sr_returned_date_sk = d.d_date_sk \nWHERE d.d_year = 2022 \nGROUP BY d.d_month \nORDER BY d.d_month", "tables": ["store_returns", "date_dim"], "columns": [], "business_intent": "To analyze the seasonal patterns in product returns throughout 2022, which helps in understanding return volume fluctuations, planning staffing needs for processing returns, and identifying potential issues with products sold during specific months.", "complexity": "easy", "alternatives": ["We could also look at this data by quarter instead of by month with 'GROUP BY d.d_qoy'", "We could enhance this analysis by including return amounts with 'SUM(sr_return_amt)' to see not just the count but the financial impact by month"], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "How many product returns were processed in each month of 2022?", "sql": "SELECT inv_warehouse_sk, AVG(inv_quantity_on_hand) AS avg_quantity \nFROM inventory \nGROUP BY inv_warehouse_sk \nORDER BY inv_warehouse_sk;", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand", "inventory.inv_warehouse_sk"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "How many product returns were processed in each month of 2022?", "sql": "SELECT dummy_col, d.d_month, COUNT(*) as return_count \nFROM store_returns sr \nJOIN date_dim d ON sr.sr_returned_date_sk = d.d_date_sk \nWHERE d.d_year = 2022 \nGROUP BY d.d_month \nORDER BY d.d_month", "label": 0, "tables": ["store_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "Which customers have made the most web returns?", "paraphrases": ["# Paraphrases of \"Which customers have made the most web returns?\"\n\n1. Who are the customers with the highest number of online product returns?\n\n2. Which clients have returned items purchased on the website more frequently than others?\n\n3. Can you identify the customers that have the greatest quantity of returns from web purchases?"], "sql": "SELECT c.c_customer_id, c.c_first_name, c.c_last_name, COUNT(*) as return_count FROM web_returns wr JOIN customer c ON wr.wr_refunded_customer_sk = c.c_customer_sk GROUP BY c.c_customer_id, c.c_first_name, c.c_last_name ORDER BY return_count DESC LIMIT 10", "tables": ["web_returns", "customer"], "columns": [], "business_intent": "To identify customers with the highest return frequency which could help improve customer service, address product quality issues, or identify potential return abuse patterns. This analysis supports customer retention strategies and reduces costs associated with excessive returns.", "complexity": "medium", "alternatives": ["We could also count returns by the returning customer (wr_returning_customer_sk) rather than the refunded customer if the business focus is on who physically returned items rather than who received refunds.", "For deeper analysis, we could include demographic data or add time dimensions to analyze return patterns over specific periods."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "Which customers have made the most web returns?", "sql": "SELECT s.s_store_id, s.s_store_name, COUNT(*) as return_count \nFROM store_returns sr \nJOIN store s ON sr.sr_store_sk = s.s_store_sk \nJOIN date_dim d ON sr.sr_returned_date_sk = d.d_date_sk \nWHERE d.d_year = 2002 \nGROUP BY s.s_store_id, s.s_store_name \nORDER BY return_count DESC", "label": 0, "tables": ["store_returns", "date_dim", "store"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "Which customers have made the most web returns?", "sql": "SELECT dummy_col, c.c_customer_id, c.c_first_name, c.c_last_name, COUNT(*) as return_count FROM web_returns wr JOIN customer c ON wr.wr_refunded_customer_sk = c.c_customer_sk GROUP BY c.c_customer_id, c.c_first_name, c.c_last_name ORDER BY return_count DESC LIMIT 10", "label": 0, "tables": ["web_returns", "customer"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the top 5 buying potential categories and how many households fall into each?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Could you identify the five categories with the highest buying potential and provide the number of households in each category?\n\n2. Which five segments represent the greatest purchasing power, and what is the household count for each of these segments?\n\n3. Please list the top 5 classifications based on buying potential and specify how many households are distributed across each of these classifications."], "sql": "SELECT hd_buy_potential, COUNT(*) as household_count FROM household_demographics GROUP BY hd_buy_potential ORDER BY household_count DESC LIMIT 5", "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential"], "business_intent": "To understand the distribution of households across different buying potential categories, which helps in market segmentation and identifying the most common purchasing power classifications among the customer base. This insight can guide marketing strategies and resource allocation.", "complexity": "easy", "alternatives": ["SELECT hd_buy_potential, COUNT(*) as count FROM household_demographics GROUP BY hd_buy_potential ORDER BY count DESC FETCH FIRST 5 ROWS ONLY", "SELECT hd_buy_potential, COUNT(hd_demo_sk) as household_count FROM household_demographics GROUP BY hd_buy_potential ORDER BY household_count DESC LIMIT 5"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What are the top 5 buying potential categories and how many households fall into each?", "sql": "SELECT SUM(ss_net_paid) AS total_net_paid \nFROM store_sales \nJOIN customer_address ON ss_addr_sk = ca_address_sk \nWHERE ca_city LIKE 'M%';", "label": 0, "tables": ["store_sales", "customer_address"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What are the top 5 buying potential categories and how many households fall into each?", "sql": "SELECT dummy_col, hd_buy_potential, COUNT(*) as household_count FROM household_demographics GROUP BY hd_buy_potential ORDER BY household_count DESC LIMIT 5", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "How many web sales transactions were made by customers with a college education status?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. What is the total number of online purchase transactions completed by customers who have attained a college education level?\n\n2. How frequently did individuals with college-level educational backgrounds make purchases through the web platform?\n\n3. Can you provide the count of web-based sales transactions that were conducted by customers who indicated their education status as college-educated?"], "sql": "SELECT COUNT(*) FROM web_sales ws JOIN customer_demographics cd ON ws.ws_bill_cdemo_sk = cd.cd_demo_sk WHERE cd.cd_education_status LIKE '%College%'", "tables": ["web_sales", "customer_demographics"], "columns": [], "business_intent": "To understand the purchasing behavior of college-educated customers in the online sales channel, which helps in demographic segmentation and targeted marketing strategies for customers with higher education levels.", "complexity": "medium", "alternatives": ["Could also analyze by specific college education status types if they exist in the data", "Could expand the query to compare college-educated customers with other education levels"], "sql_features": ["join", "filter"], "label": 1}
{"nl": "How many web sales transactions were made by customers with a college education status?", "sql": "SELECT p_promo_id, p_promo_name, p_cost, p_end_date_sk \nFROM promotion \nWHERE p_cost > 1000 \nORDER BY p_end_date_sk DESC \nLIMIT 5;", "label": 0, "tables": ["promotion"], "columns": ["promotion.p_end_date_sk", "promotion.p_promo_id", "promotion.p_cost", "promotion.p_promo_name"], "sql_features": ["filter", "order_by"], "complexity": "easy"}
{"nl": "How many web sales transactions were made by customers with a college education status?", "sql": "SELECT dummy_col, COUNT(*) FROM web_sales ws JOIN customer_demographics cd ON ws.ws_bill_cdemo_sk = cd.cd_demo_sk WHERE cd.cd_education_status LIKE '%College%'", "label": 0, "tables": ["web_sales", "customer_demographics"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the average square footage of warehouses in each state?", "paraphrases": ["# Paraphrases of \"What is the average square footage of warehouses in each state?\"\n\n1. For every state, what is the mean warehouse size measured in square feet?\n\n2. How many square feet do warehouses typically occupy, on average, in different states across the country?\n\n3. What's the state-by-state breakdown of average warehouse dimensions when measured in square footage?"], "sql": "SELECT w_state, AVG(w_warehouse_sq_ft) AS avg_square_footage FROM warehouse GROUP BY w_state ORDER BY w_state", "tables": ["warehouse"], "columns": ["warehouse.w_state", "warehouse.w_warehouse_sq_ft"], "business_intent": "To analyze warehouse capacity distribution across different states, which helps in understanding regional warehouse size patterns and can inform facility planning, capacity management, and geographic expansion strategies.", "complexity": "easy", "alternatives": ["The query could include COUNT(w_warehouse_sk) to show how many warehouses are in each state alongside the average size, providing additional context for the analysis."], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What is the average square footage of warehouses in each state?", "sql": "SELECT ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound, COUNT(c.c_customer_sk) AS customer_count FROM income_band ib LEFT JOIN customer c ON c.c_income_band_id = ib.ib_income_band_sk GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound;", "label": 0, "tables": ["income_band", "customer"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average square footage of warehouses in each state?", "sql": "SELECT dummy_col, w_state, AVG(w_warehouse_sq_ft) AS avg_square_footage FROM warehouse GROUP BY w_state ORDER BY w_state", "label": 0, "tables": ["warehouse"], "columns": ["warehouse.w_state", "warehouse.w_warehouse_sq_ft"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the total inventory quantity on hand across all warehouses?", "paraphrases": ["# Paraphrases of \"What is the total inventory quantity on hand across all warehouses?\"\n\n1. Across all warehouse locations, what is the combined total of inventory currently in stock?\n\n2. How much inventory do we have in total when counting all warehouses together?\n\n3. What's the aggregate quantity of on-hand inventory summed across every warehouse facility?"], "sql": "SELECT SUM(inv_quantity_on_hand) AS total_inventory FROM inventory WHERE inv_quantity_on_hand > 0", "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "business_intent": "To assess the overall inventory position of the business. This aggregate information helps management understand total stock levels, which is crucial for supply chain planning, financial reporting (inventory valuation), and operational capacity assessment.", "complexity": "easy", "alternatives": ["SELECT SUM(inv_quantity_on_hand) AS total_inventory FROM inventory", "SELECT COUNT(inv_item_sk) AS total_unique_items, SUM(inv_quantity_on_hand) AS total_inventory FROM inventory"], "sql_features": ["filter"], "label": 1}
{"nl": "What is the total inventory quantity on hand across all warehouses?", "sql": "SELECT dummy_col, i.i_category, COUNT(*) as return_count FROM web_returns wr JOIN item i ON wr.wr_item_sk = i.i_item_sk GROUP BY i.i_category ORDER BY return_count DESC LIMIT 5", "label": 0, "tables": ["web_returns", "item"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total inventory quantity on hand across all warehouses?", "sql": "SELECT dummy_col, SUM(inv_quantity_on_hand) AS total_inventory FROM inventory WHERE inv_quantity_on_hand > 0", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What is the distribution of buying potential classifications across households?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How are households distributed among different buying potential categories?\n\n2. What percentage of households falls into each classification of purchasing power?\n\n3. Across the population of households, how are the various levels of buying capacity distributed?"], "sql": "SELECT hd_buy_potential, COUNT(*) as household_count FROM household_demographics GROUP BY hd_buy_potential ORDER BY household_count DESC", "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential"], "business_intent": "To understand the distribution of households across different buying potential segments, which helps in marketing strategy development, customer segmentation, and sales forecasting by identifying the purchasing power demographics of the customer base.", "complexity": "easy", "alternatives": ["SELECT hd_buy_potential, COUNT(*) as count, ROUND(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM household_demographics), 2) as percentage FROM household_demographics GROUP BY hd_buy_potential ORDER BY count DESC"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of buying potential classifications across households?", "sql": "SELECT dummy_col, AVG(cs.cs_quantity) AS avg_quantity_per_transaction\nFROM catalog_sales cs\nJOIN web_page wp ON cs.cs_web_page_sk = wp.wp_web_page_sk\nWHERE wp.wp_creation_date_sk IN (\n  SELECT d_date_sk \n  FROM date_dim \n  WHERE d_year = 2002 AND d_moy = 1\n)", "label": 0, "tables": ["catalog_sales", "date_dim", "web_page"], "columns": [], "sql_features": ["join", "filter", "subquery"], "complexity": "hard"}
{"nl": "What is the distribution of buying potential classifications across households?", "sql": "SELECT dummy_col, hd_buy_potential, COUNT(*) as household_count FROM household_demographics GROUP BY hd_buy_potential ORDER BY household_count DESC", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the average net loss amount for web returns by call center?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. What is the mean financial loss incurred from online purchases returned through the call center?\n\n2. For returns processed by the call center that originated from web orders, what is the average monetary deficit?\n\n3. How much money is lost on average when customers return web-purchased items via the call center?"], "sql": "SELECT cc.cc_call_center_id, AVG(wr.wr_net_loss) as avg_net_loss\nFROM web_returns wr\nJOIN call_center cc ON wr.wr_call_center_sk = cc.cc_call_center_sk\nGROUP BY cc.cc_call_center_id\nORDER BY avg_net_loss DESC;", "tables": ["web_returns", "call_center"], "columns": [], "business_intent": "To analyze the financial impact of web returns by call center location, helping management identify which call centers handle returns with higher average losses. This information can guide operational improvements and training needs for specific call centers.", "complexity": "medium", "alternatives": ["We could include additional dimensions like time periods by adding date ranges or grouping by time periods.", "We could enhance the analysis by including call center attributes like cc_name or cc_class to provide more context about each center's characteristics."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the average net loss amount for web returns by call center?", "sql": "SELECT DISTINCT dummy_col, i.i_item_id, i.i_product_name, i.i_item_desc FROM item i JOIN promotion p ON i.i_item_sk = p.p_item_sk WHERE p.p_channel_email = 1 AND p.p_channel_dmail = 1", "label": 0, "tables": ["promotion", "item"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the average net loss amount for web returns by call center?", "sql": "SELECT dummy_col, cc.cc_call_center_id, AVG(wr.wr_net_loss) as avg_net_loss\nFROM web_returns wr\nJOIN call_center cc ON wr.wr_call_center_sk = cc.cc_call_center_sk\nGROUP BY cc.cc_call_center_id\nORDER BY avg_net_loss DESC;", "label": 0, "tables": ["web_returns", "call_center"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of promotion types by gender?", "paraphrases": ["# Paraphrases of \"What is the distribution of promotion types by gender?\"\n\n1. How are different types of promotions distributed when analyzed according to gender?\n\n2. Can you break down the various promotion categories and show how they are allocated between genders?\n\n3. What patterns emerge when examining how promotion classifications are spread across male and female employees?"], "sql": "SELECT cd_gender, p_promo_name, COUNT(*) as promotion_count FROM promotion p JOIN customer_demographics cd GROUP BY cd_gender, p_promo_name ORDER BY cd_gender, promotion_count DESC", "tables": ["promotion", "customer_demographics"], "columns": [], "business_intent": "To analyze how promotions are distributed across different gender demographics, which helps marketing teams understand if certain promotion types are more effective or frequently used for specific gender segments. This insight can guide targeted marketing strategies and help optimize promotional campaigns.", "complexity": "medium", "alternatives": ["SELECT cd_gender, COUNT(*) as promotion_count FROM promotion p JOIN customer_demographics cd GROUP BY cd_gender ORDER BY promotion_count DESC", "SELECT p_promo_name, cd_gender, COUNT(*) as count FROM promotion p JOIN customer_demographics cd GROUP BY p_promo_name, cd_gender ORDER BY p_promo_name, count DESC"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of promotion types by gender?", "sql": "SELECT dummy_col, ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound, COUNT(hd.hd_demo_sk) AS household_count, AVG(hd.hd_vehicle_count) AS avg_vehicles FROM income_band ib LEFT JOIN household_demographics hd ON ib.ib_income_band_sk = hd.hd_income_band_sk GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound", "label": 0, "tables": ["income_band", "household_demographics"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of promotion types by gender?", "sql": "SELECT dummy_col, cd_gender, p_promo_name, COUNT(*) as promotion_count FROM promotion p JOIN customer_demographics cd GROUP BY cd_gender, p_promo_name ORDER BY cd_gender, promotion_count DESC", "label": 0, "tables": ["promotion", "customer_demographics"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total inventory quantity available across all warehouses?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How many units do we have in stock when counting all warehouse locations combined?\n\n2. What's the sum of all available inventory items stored across our entire warehouse network?\n\n3. If we tallied the complete product inventory from each warehouse facility, what would be the aggregate quantity?"], "sql": "SELECT SUM(inv_quantity_on_hand) AS total_inventory FROM inventory;", "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "business_intent": "To determine the overall inventory position of the company by calculating the total quantity of all items across all warehouses. This information helps with high-level inventory management, financial reporting, and strategic planning.", "complexity": "easy", "alternatives": ["SELECT SUM(inv_quantity_on_hand) AS total_inventory FROM inventory WHERE inv_quantity_on_hand > 0;", "SELECT COUNT(*) AS total_items, SUM(inv_quantity_on_hand) AS total_quantity FROM inventory;"], "sql_features": [], "label": 1}
{"nl": "What is the total inventory quantity available across all warehouses?", "sql": "SELECT dummy_col, AVG(inv_quantity_on_hand) as avg_quantity FROM inventory", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "sql_features": [], "complexity": "easy"}
{"nl": "What is the total inventory quantity available across all warehouses?", "sql": "SELECT dummy_col, SUM(inv_quantity_on_hand) AS total_inventory FROM inventory;", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "sql_features": [], "complexity": "easy"}
{"nl": "What are the top 5 most expensive items available for sale?", "paraphrases": ["# Paraphrases of \"What are the top 5 most expensive items available for sale?\"\n\n1. Could you list the five highest-priced products currently on the market?\n\n2. Which five items for purchase have the steepest price tags?\n\n3. What are the five most costly merchandise options that can be bought right now?"], "sql": "SELECT i_item_id, i_item_desc, i_current_price FROM item ORDER BY i_current_price DESC LIMIT 5", "tables": ["item"], "columns": ["item.i_current_price", "item.i_item_id", "item.i_item_desc"], "business_intent": "To identify the highest-priced items in the inventory, which is valuable for pricing strategy analysis, luxury market positioning, and understanding the premium product segment.", "complexity": "easy", "alternatives": ["Could modify the query to include additional item attributes like brand or category to provide more context about these expensive items."], "sql_features": ["order_by"], "label": 1}
{"nl": "What are the top 5 most expensive items available for sale?", "sql": "SELECT ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound, COUNT(ws.ws_bill_customer_sk) AS transaction_count FROM web_sales ws JOIN income_band ib ON (ws.ws_bill_cdemo_sk = ib.ib_income_band_sk) GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound;", "label": 0, "tables": ["income_band", "web_sales"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the top 5 most expensive items available for sale?", "sql": "SELECT dummy_col, i_item_id, i_item_desc, i_current_price FROM item ORDER BY i_current_price DESC LIMIT 5", "label": 0, "tables": ["item"], "columns": ["item.i_current_price", "item.i_item_id", "item.i_item_desc"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "Which states have the highest number of catalog sales?", "paraphrases": ["# Paraphrases of \"Which states have the highest number of catalog sales?\"\n\n1. In which states do catalog sales reach their peak numbers?\n\n2. What are the top states ranked by volume of catalog sales?\n\n3. Which geographical regions within the United States demonstrate the greatest quantity of purchases made through catalogs?"], "sql": "SELECT ca.ca_state, COUNT(*) as sales_count FROM catalog_sales cs JOIN customer_address ca ON cs.cs_bill_addr_sk = ca.ca_address_sk GROUP BY ca.ca_state ORDER BY sales_count DESC", "tables": ["catalog_sales", "customer_address"], "columns": [], "business_intent": "To identify which geographical regions (states) generate the most catalog sales, which helps in targeting marketing efforts, optimizing distribution networks, and understanding regional customer preferences.", "complexity": "medium", "alternatives": ["You could also analyze this by shipping address instead of billing address by joining on cs_ship_addr_sk instead of cs_bill_addr_sk to see if there are differences between where customers ship to versus where they're billed.", "For more granular analysis, you could group by both state and city to identify specific metropolitan areas with high catalog sales activity."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "Which states have the highest number of catalog sales?", "sql": "SELECT d.d_month, SUM(cr.cr_return_amount) as total_returns\nFROM catalog_returns cr\nJOIN date_dim d ON cr.cr_returned_date_sk = d.d_date_sk\nWHERE d.d_year = 2002\nGROUP BY d.d_month\nORDER BY d.d_month", "label": 0, "tables": ["catalog_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "Which states have the highest number of catalog sales?", "sql": "SELECT dummy_col, ca.ca_state, COUNT(*) as sales_count FROM catalog_sales cs JOIN customer_address ca ON cs.cs_bill_addr_sk = ca.ca_address_sk GROUP BY ca.ca_state ORDER BY sales_count DESC", "label": 0, "tables": ["catalog_sales", "customer_address"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the most expensive items, and which carriers ship them?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Which products have the highest price points, and what shipping companies handle their delivery?\n\n2. Can you identify the costliest merchandise and the logistics providers that transport them?\n\n3. What items command the greatest expense, and which transportation services are responsible for their shipment?"], "sql": "SELECT i.i_item_id, i.i_item_desc, i.i_current_price, sm.sm_carrier \nFROM item i \nJOIN ship_mode sm ON 1=1 \nORDER BY i.i_current_price DESC \nLIMIT 10;", "tables": ["ship_mode", "item"], "columns": [], "business_intent": "To identify premium products and understand shipping options available for them, which can help optimize logistics for high-value items and potentially offer premium shipping services for expensive products.", "complexity": "medium", "alternatives": ["The query performs a cross join between items and ship modes. An alternative approach could be to use data from additional tables (if available) to find actual shipping relationships between items and carriers."], "sql_features": ["join", "order_by"], "label": 1}
{"nl": "What are the most expensive items, and which carriers ship them?", "sql": "SELECT dummy_col, d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "label": 0, "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the most expensive items, and which carriers ship them?", "sql": "SELECT dummy_col, i.i_item_id, i.i_item_desc, i.i_current_price, sm.sm_carrier \nFROM item i \nJOIN ship_mode sm ON 1=1 \nORDER BY i.i_current_price DESC \nLIMIT 10;", "label": 0, "tables": ["ship_mode", "item"], "columns": [], "sql_features": ["join", "order_by"], "complexity": "hard"}
{"nl": "What is the average inventory quantity on hand across all warehouses?", "paraphrases": ["# Paraphrases of \"What is the average inventory quantity on hand across all warehouses?\"\n\n1. Across the entire network of warehouses, what is the mean quantity of inventory currently being held?\n\n2. What's the typical amount of stock maintained, when calculated as an average across all warehouse facilities?\n\n3. If you consider all warehouses collectively, what is the average number of inventory units currently on hand?"], "sql": "SELECT AVG(inv_quantity_on_hand) AS avg_inventory_quantity FROM inventory;", "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "business_intent": "To understand the overall inventory levels across the business, which helps in inventory management decisions, identifying if the business is overstocked or understocked on average, and establishing baseline metrics for inventory planning.", "complexity": "easy", "alternatives": ["SELECT SUM(inv_quantity_on_hand)/COUNT(*) AS avg_inventory_quantity FROM inventory;", "SELECT SUM(inv_quantity_on_hand) AS total_quantity, COUNT(*) AS count, SUM(inv_quantity_on_hand)/COUNT(*) AS avg_quantity FROM inventory;"], "sql_features": [], "label": 1}
{"nl": "What is the average inventory quantity on hand across all warehouses?", "sql": "SELECT dummy_col, web_name FROM web_site;", "label": 0, "tables": ["web_site"], "columns": ["web_site.web_name"], "sql_features": [], "complexity": "easy"}
{"nl": "What is the average inventory quantity on hand across all warehouses?", "sql": "SELECT dummy_col, AVG(inv_quantity_on_hand) AS avg_inventory_quantity FROM inventory;", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "sql_features": [], "complexity": "easy"}
{"nl": "What is the total sales amount by day of the week for all store sales in 2022?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. For each day of the week, what was the aggregate sales revenue across all stores during 2022?\n\n2. How did total store sales in 2022 break down by day of the week when summed across all locations?\n\n3. Can you provide the daily sales totals for each day of the week, combining figures from all stores throughout 2022?"], "sql": "SELECT d.d_day_name, SUM(ss.ss_sales_price) as total_sales\nFROM store_sales ss\nJOIN date_dim d ON ss.ss_sold_time_sk = d.d_date_sk\nWHERE d.d_year = 2022\nGROUP BY d.d_day_name\nORDER BY total_sales DESC", "tables": ["date_dim", "store_sales"], "columns": [], "business_intent": "To analyze which days of the week generate the most sales revenue throughout the year 2022. This analysis can help with staffing decisions, inventory management, and promotional planning by identifying peak sales days.", "complexity": "medium", "alternatives": ["We could analyze average sales per weekday instead of total sales by using AVG() instead of SUM()", "We could further break this down by month to see if weekday patterns change seasonally by adding d_month to both the SELECT and GROUP BY clauses"], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What is the total sales amount by day of the week for all store sales in 2022?", "sql": "SELECT w_warehouse_name, w_warehouse_sq_ft FROM warehouse ORDER BY w_warehouse_sq_ft DESC LIMIT 1;", "label": 0, "tables": ["warehouse"], "columns": ["warehouse.w_warehouse_name", "warehouse.w_warehouse_sq_ft"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What is the total sales amount by day of the week for all store sales in 2022?", "sql": "SELECT dummy_col, d.d_day_name, SUM(ss.ss_sales_price) as total_sales\nFROM store_sales ss\nJOIN date_dim d ON ss.ss_sold_time_sk = d.d_date_sk\nWHERE d.d_year = 2022\nGROUP BY d.d_day_name\nORDER BY total_sales DESC", "label": 0, "tables": ["date_dim", "store_sales"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the web pages that were created after 2019 but are no longer active?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Which websites were established post-2019 but have since been discontinued or shut down?\n\n2. Can you identify web pages that came into existence after 2019 but are currently inactive or no longer accessible?\n\n3. What internet sites were launched following 2019 that have ceased to function or are no longer maintained?"], "sql": "SELECT wp_web_page_id, wp_creation_date_sk, wp_rec_start_date, wp_rec_end_date\nFROM web_page\nWHERE wp_creation_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year > 2019)\nAND wp_rec_end_date IS NOT NULL\nAND wp_rec_end_date < CURRENT_DATE\nORDER BY wp_rec_end_date DESC;", "tables": ["web_page", "date_dim"], "columns": [], "business_intent": "To identify discontinued web pages that were relatively new (created after 2019). This analysis helps understand which recent web page initiatives were short-lived, potentially revealing unsuccessful digital content strategies or content that became outdated quickly. This information can inform future content development and web strategy decisions.", "complexity": "medium", "alternatives": ["The query assumes a date_dim table exists to join with wp_creation_date_sk. An alternative approach would be to use direct date comparison if wp_creation_date was available instead of a surrogate key.", "We could also enhance this query to include additional web page attributes like page type or category to better understand what types of recent pages were discontinued."], "sql_features": ["filter", "order_by", "subquery"], "label": 1}
{"nl": "What are the web pages that were created after 2019 but are no longer active?", "sql": "SELECT DISTINCT dummy_col, sm_carrier FROM ship_mode ORDER BY sm_carrier", "label": 0, "tables": ["ship_mode"], "columns": ["ship_mode.sm_carrier"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What are the web pages that were created after 2019 but are no longer active?", "sql": "SELECT dummy_col, wp_web_page_id, wp_creation_date_sk, wp_rec_start_date, wp_rec_end_date\nFROM web_page\nWHERE wp_creation_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year > 2019)\nAND wp_rec_end_date IS NOT NULL\nAND wp_rec_end_date < CURRENT_DATE\nORDER BY wp_rec_end_date DESC;", "label": 0, "tables": ["web_page", "date_dim"], "columns": [], "sql_features": ["filter", "order_by", "subquery"], "complexity": "hard"}
{"nl": "What is the distribution of catalog sales by gender?", "paraphrases": ["# Paraphrased Versions\n\n1. How are catalog purchases distributed among different genders?\n\n2. What percentage of catalog sales can be attributed to each gender category?\n\n3. When examining catalog sales data, how does the breakdown by gender appear?"], "sql": "SELECT cd_gender, SUM(cs_net_paid) as total_sales FROM catalog_sales JOIN customer_demographics ON cs_bill_cdemo_sk = cd_demo_sk GROUP BY cd_gender ORDER BY total_sales DESC", "tables": ["catalog_sales", "customer_demographics"], "columns": [], "business_intent": "To analyze sales performance by gender demographic to identify purchasing patterns across gender segments. This can inform targeted marketing strategies, product development decisions, and help optimize customer segmentation efforts.", "complexity": "medium", "alternatives": ["We could also use cs_bill_customer_sk to join with customer table if it contained gender information directly", "Could analyze other metrics like average order value by gender using AVG(cs_net_paid) instead of SUM"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of catalog sales by gender?", "sql": "SELECT DISTINCT ws.web_site_id, ws.web_name\nFROM web_site ws\nJOIN household_demographics hd ON ws.web_site_sk = hd.hd_demo_sk\nWHERE DATEDIFF(day, ws.web_rec_start_date, COALESCE(ws.web_rec_end_date, CURRENT_DATE)) > 1825\nAND hd.hd_dep_count > 2\nORDER BY ws.web_site_id;", "label": 0, "tables": ["web_site", "household_demographics"], "columns": [], "sql_features": ["join", "filter", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of catalog sales by gender?", "sql": "SELECT dummy_col, cd_gender, SUM(cs_net_paid) as total_sales FROM catalog_sales JOIN customer_demographics ON cs_bill_cdemo_sk = cd_demo_sk GROUP BY cd_gender ORDER BY total_sales DESC", "label": 0, "tables": ["catalog_sales", "customer_demographics"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the income bands with a lower bound greater than $50,000?", "paraphrases": ["# Paraphrased Versions\n\n1. Which income categories have a minimum threshold exceeding $50,000?\n\n2. Can you identify the income ranges that start above $50,000?\n\n3. What income brackets have their lower limits set higher than $50,000?"], "sql": "SELECT ib_income_band_sk, ib_lower_bound, ib_upper_bound FROM income_band WHERE ib_lower_bound > 50000 ORDER BY ib_lower_bound", "tables": ["income_band"], "columns": ["income_band.ib_lower_bound", "income_band.ib_upper_bound", "income_band.ib_income_band_sk"], "business_intent": "To identify higher income segments for potential premium customer targeting, luxury product marketing, or financial services analysis. This helps in market segmentation and targeting strategies for products or services aimed at higher-income customers.", "complexity": "easy", "alternatives": ["Another approach could use a different threshold value depending on the specific business need", "The query could also be modified to look for specific income ranges rather than just a lower bound"], "sql_features": ["filter", "order_by"], "label": 1}
{"nl": "What are the income bands with a lower bound greater than $50,000?", "sql": "SELECT dummy_col, cd_education_status, COUNT(*) as count FROM customer_demographics WHERE cd_purchase_estimate > 5000 GROUP BY cd_education_status ORDER BY count DESC", "label": 0, "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_purchase_estimate"], "sql_features": ["filter", "group_by", "order_by"], "complexity": "medium"}
{"nl": "What are the income bands with a lower bound greater than $50,000?", "sql": "SELECT dummy_col, ib_income_band_sk, ib_lower_bound, ib_upper_bound FROM income_band WHERE ib_lower_bound > 50000 ORDER BY ib_lower_bound", "label": 0, "tables": ["income_band"], "columns": ["income_band.ib_lower_bound", "income_band.ib_upper_bound", "income_band.ib_income_band_sk"], "sql_features": ["filter", "order_by"], "complexity": "easy"}
{"nl": "What is the distribution of customers by education status during the morning hours (6AM to 12PM)?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How are customers with different educational backgrounds distributed during the morning period from 6AM to noon?\n\n2. During the morning timeframe (6AM-12PM), what is the breakdown of customers according to their education level?\n\n3. What patterns can we observe in the educational status of customers who visit between 6 in the morning and 12 in the afternoon?"], "sql": "SELECT cd_education_status, COUNT(*) as customer_count FROM customer_demographics JOIN time_dim ON 1=1 WHERE t_hour >= 6 AND t_hour < 12 GROUP BY cd_education_status ORDER BY customer_count DESC", "tables": ["customer_demographics", "time_dim"], "columns": [], "business_intent": "To analyze customer demographics by education level specifically during morning hours to help with targeting morning promotions, advertisements, or services to the right education segments. This insight could inform morning marketing campaigns or service offerings tailored to specific educational demographics.", "complexity": "medium", "alternatives": ["We could alternatively filter by t_time directly if we convert the hours to seconds, or use the t_am_pm field to filter for AM times and then further restrict by hour.", "Another approach would be to use a CTE to first filter the time dimension and then join with customer demographics."], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of customers by education status during the morning hours (6AM to 12PM)?", "sql": "SELECT dummy_col, p.p_promo_id, p.p_promo_sk, td.t_time, td.t_am_pm \nFROM promotion p \nJOIN time_dim td ON p.p_start_date_sk = td.t_time_sk \nWHERE td.t_am_pm = 'AM'", "label": 0, "tables": ["promotion", "time_dim"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the distribution of customers by education status during the morning hours (6AM to 12PM)?", "sql": "SELECT dummy_col, cd_education_status, COUNT(*) as customer_count FROM customer_demographics JOIN time_dim ON 1=1 WHERE t_hour >= 6 AND t_hour < 12 GROUP BY cd_education_status ORDER BY customer_count DESC", "label": 0, "tables": ["customer_demographics", "time_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of households by vehicle count?", "paraphrases": ["# Paraphrases of \"What is the distribution of households by vehicle count?\"\n\n1. How are households distributed according to the number of vehicles they own?\n\n2. What percentage of households have different quantities of vehicles?\n\n3. How many households possess zero, one, two, or more vehicles, and what is the breakdown of this data?"], "sql": "SELECT hd_vehicle_count, COUNT(*) as household_count FROM household_demographics GROUP BY hd_vehicle_count ORDER BY hd_vehicle_count", "tables": ["household_demographics"], "columns": ["household_demographics.hd_vehicle_count"], "business_intent": "To understand the distribution of vehicle ownership across households, which can help with market segmentation, transportation-related product targeting, and demographic profiling. This information could be valuable for automotive industry marketing, insurance offerings, or urban planning.", "complexity": "easy", "alternatives": ["We could also include income band information to see correlation between income and vehicle ownership by joining with an income_band table if it existed in the schema", "We could analyze vehicle count alongside buying potential (hd_buy_potential) to understand if there's a relationship between purchasing power and vehicle ownership"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of households by vehicle count?", "sql": "SELECT t.t_hour, COUNT(*) as address_count FROM customer_address ca JOIN time_dim t ON ca.ca_gmt_offset = -8 GROUP BY t.t_hour ORDER BY address_count DESC", "label": 0, "tables": ["time_dim", "customer_address"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of households by vehicle count?", "sql": "SELECT dummy_col, hd_vehicle_count, COUNT(*) as household_count FROM household_demographics GROUP BY hd_vehicle_count ORDER BY hd_vehicle_count", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_vehicle_count"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the total web sales amount for households with more than 3 dependents?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. For households that have greater than 3 dependents, what is the sum of all web sales?\n\n2. How much revenue was generated from online purchases made by families with 4 or more dependents?\n\n3. What is the aggregate amount of internet sales to customers whose households include more than 3 dependent members?"], "sql": "SELECT SUM(ws_net_paid) AS total_sales FROM web_sales JOIN household_demographics ON ws_bill_cdemo_sk = hd_demo_sk WHERE hd_dep_count > 3", "tables": ["web_sales", "household_demographics"], "columns": [], "business_intent": "To analyze web sales performance by household size, specifically focusing on larger families with more dependents. This analysis can help in targeting marketing efforts or product offerings to households with specific demographic characteristics.", "complexity": "medium", "alternatives": ["We could also look at average sales per transaction rather than total sales to understand spending patterns better", "The analysis could be extended to include household income bands to see if there's a correlation between number of dependents and income level in terms of sales"], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What is the total web sales amount for households with more than 3 dependents?", "sql": "SELECT i_item_id, i_item_desc, i_current_price FROM item WHERE i_current_price > (SELECT AVG(i_current_price) FROM item)", "label": 0, "tables": ["item"], "columns": ["item.i_current_price", "item.i_item_id", "item.i_item_desc"], "sql_features": ["filter", "subquery"], "complexity": "hard"}
{"nl": "What is the total web sales amount for households with more than 3 dependents?", "sql": "SELECT dummy_col, SUM(ws_net_paid) AS total_sales FROM web_sales JOIN household_demographics ON ws_bill_cdemo_sk = hd_demo_sk WHERE hd_dep_count > 3", "label": 0, "tables": ["web_sales", "household_demographics"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the total number of catalog returns for each store?", "paraphrases": ["Here are 3 different paraphrases of the original question:\n\n1. How many catalog returns were recorded at each individual store location?\n\n2. For every store, what is the aggregate count of items returned through the catalog?\n\n3. Can you provide the sum of catalog returns, broken down by store?"], "sql": "SELECT s.s_store_id, s.s_store_name, COUNT(cr.cr_item_sk) as total_returns FROM catalog_returns cr JOIN store s ON cr.cr_store_sk = s.s_store_sk GROUP BY s.s_store_id, s.s_store_name ORDER BY total_returns DESC", "tables": ["catalog_returns", "store"], "columns": [], "business_intent": "To analyze the distribution of catalog returns across different stores, helping to identify which stores have the highest return volumes. This information can be used for operational planning, staff allocation, and potentially identifying stores that may have quality or customer service issues leading to higher return rates.", "complexity": "easy", "alternatives": ["We could also analyze returns by time period by joining with a date dimension table, or we could include the return amount to see financial impact by store rather than just return count."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the total number of catalog returns for each store?", "sql": "SELECT dummy_col, ca.ca_state, COUNT(*) as sales_count FROM catalog_sales cs JOIN customer_address ca ON cs.cs_bill_addr_sk = ca.ca_address_sk GROUP BY ca.ca_state ORDER BY sales_count DESC", "label": 0, "tables": ["catalog_sales", "customer_address"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total number of catalog returns for each store?", "sql": "SELECT dummy_col, s.s_store_id, s.s_store_name, COUNT(cr.cr_item_sk) as total_returns FROM catalog_returns cr JOIN store s ON cr.cr_store_sk = s.s_store_sk GROUP BY s.s_store_id, s.s_store_name ORDER BY total_returns DESC", "label": 0, "tables": ["catalog_returns", "store"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average quantity of returned items from web transactions?", "paraphrases": ["# Original Question\nWhat is the average quantity of returned items from web transactions?\n\n# Paraphrase 1\nOn average, how many items are returned from online purchases?\n\n# Paraphrase 2\nFor transactions conducted on the web, what is the typical number of products that get sent back?\n\n# Paraphrase 3\nWhat's the mean amount of merchandise returned by customers who shop through internet transactions?"], "sql": "SELECT AVG(wr_item_sk) AS avg_returned_quantity FROM web_returns;", "tables": ["web_returns"], "columns": ["web_returns.wr_item_sk"], "business_intent": "To understand the typical volume of items being returned through web channels, which helps in inventory management, return processing resource allocation, and identifying potential issues with product quality or customer satisfaction.", "complexity": "easy", "alternatives": ["This query assumes wr_item_sk represents quantity, but a more accurate measure might exist in other columns not shown in the schema details. If there's a specific quantity column for returns, that would be more appropriate to use instead of the item surrogate key."], "sql_features": [], "label": 1}
{"nl": "What is the average quantity of returned items from web transactions?", "sql": "SELECT dummy_col, s.s_store_name, s.s_street_number, s.s_street_name, s.s_street_type, s.s_suite_number, s.s_city, s.s_county, s.s_state, s.s_zip FROM store s JOIN date_dim d ON s.s_closed_date_sk = d.d_date_sk WHERE d.d_year = 2001", "label": 0, "tables": ["date_dim", "store"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the average quantity of returned items from web transactions?", "sql": "SELECT dummy_col, AVG(wr_item_sk) AS avg_returned_quantity FROM web_returns;", "label": 0, "tables": ["web_returns"], "columns": ["web_returns.wr_item_sk"], "sql_features": [], "complexity": "easy"}
{"nl": "What was the total sales amount from transactions that occurred on weekends?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. What is the sum of all sales figures for transactions that took place on Saturdays and Sundays?\n\n2. How much revenue was generated from purchases made during weekend days?\n\n3. Can you calculate the aggregate sales value of all transactions completed on weekend dates?"], "sql": "SELECT SUM(ss_sales_price) AS total_weekend_sales FROM store_sales JOIN date_dim ON ss_sold_time_sk = d_date_sk WHERE d_weekend = 'Y'", "tables": ["date_dim", "store_sales"], "columns": [], "business_intent": "To analyze sales performance on weekends compared to weekdays, helping with staffing decisions, marketing campaign timing, and understanding customer shopping patterns.", "complexity": "medium", "alternatives": ["We could use d_day_name instead of d_weekend flag if we wanted to analyze specific days: SELECT SUM(ss_sales_price) FROM store_sales JOIN date_dim ON ss_sold_time_sk = d_date_sk WHERE d_day_name IN ('Saturday', 'Sunday')", "For more granular analysis, we could group by weekend vs weekday: SELECT CASE WHEN d_weekend = 'Y' THEN 'Weekend' ELSE 'Weekday' END as day_type, SUM(ss_sales_price) as total_sales FROM store_sales JOIN date_dim ON ss_sold_time_sk = d_date_sk GROUP BY day_type"], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What was the total sales amount from transactions that occurred on weekends?", "sql": "SELECT dummy_col, d.d_month, SUM(cr.cr_return_amount) as total_returns\nFROM catalog_returns cr\nJOIN date_dim d ON cr.cr_returned_date_sk = d.d_date_sk\nWHERE d.d_year = 2002\nGROUP BY d.d_month\nORDER BY d.d_month", "label": 0, "tables": ["catalog_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What was the total sales amount from transactions that occurred on weekends?", "sql": "SELECT dummy_col, SUM(ss_sales_price) AS total_weekend_sales FROM store_sales JOIN date_dim ON ss_sold_time_sk = d_date_sk WHERE d_weekend = 'Y'", "label": 0, "tables": ["date_dim", "store_sales"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the average inventory quantity on hand across all warehouses?", "paraphrases": ["## Paraphrases of the Original Question\n\n1. Across all warehouse locations, what is the mean quantity of inventory currently being held?\n\n2. What's the typical amount of stock on hand when calculated as an average across every warehouse?\n\n3. If you consider all warehouses collectively, what is the average number of inventory units being maintained?"], "sql": "SELECT AVG(inv_quantity_on_hand) AS avg_inventory_quantity FROM inventory", "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "business_intent": "To understand the overall inventory levels across the business, which helps with inventory planning, identifying potential overstocking or understocking situations, and establishing baseline metrics for inventory management.", "complexity": "easy", "alternatives": ["SELECT COUNT(*) as total_records, SUM(inv_quantity_on_hand) as total_quantity, SUM(inv_quantity_on_hand)/COUNT(*) as avg_quantity FROM inventory", "SELECT inv_warehouse_sk, AVG(inv_quantity_on_hand) as avg_quantity FROM inventory GROUP BY inv_warehouse_sk -- to see average by warehouse"], "sql_features": [], "label": 1}
{"nl": "What is the average inventory quantity on hand across all warehouses?", "sql": "SELECT ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound, COUNT(c.c_customer_sk) AS customer_count FROM customer c JOIN income_band ib ON c.c_income_band_sk = ib.ib_income_band_sk GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound", "label": 0, "tables": ["income_band", "customer"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average inventory quantity on hand across all warehouses?", "sql": "SELECT dummy_col, AVG(inv_quantity_on_hand) AS avg_inventory_quantity FROM inventory", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "sql_features": [], "complexity": "easy"}
{"nl": "How many sales transactions occurred between 8am and 10am?", "paraphrases": ["Here are three paraphrases of the original question:\n\n1. What was the total number of sales transactions that took place from 8am to 10am?\n\n2. Between the hours of 8am and 10am, how many transactions involving sales were completed?\n\n3. During the two-hour period from 8am until 10am, what count of sales transactions was recorded?"], "sql": "SELECT COUNT(*) FROM store_sales JOIN time_dim ON store_sales.ss_sold_time_sk = time_dim.t_time_sk WHERE t_hour >= 8 AND t_hour < 10", "tables": ["time_dim", "store_sales"], "columns": ["store_sales.ss_sold_time_sk", "time_dim.t_time_sk"], "business_intent": "To analyze the volume of sales transactions during a specific morning time window, which can help determine peak shopping hours and optimize staffing or operations for this time period.", "complexity": "easy", "alternatives": ["Could also use t_am_pm = 'AM' as part of the filter criteria along with a more specific hour check", "Alternative approach could count transactions by hour to show distribution: SELECT t_hour, COUNT(*) FROM store_sales JOIN time_dim ON store_sales.ss_sold_time_sk = time_dim.t_time_sk WHERE t_hour BETWEEN 8 AND 9 GROUP BY t_hour"], "sql_features": ["join", "filter"], "label": 1}
{"nl": "How many sales transactions occurred between 8am and 10am?", "sql": "WITH avg_images AS (\n  SELECT AVG(wp_image_count) AS avg_img_count\n  FROM web_page\n)\nSELECT \n  AVG(wp_image_count) AS average_images_per_page,\n  COUNT(CASE WHEN wp_image_count > avg_img_count THEN 1 END) AS pages_above_average\nFROM web_page, avg_images;", "label": 0, "tables": ["web_page"], "columns": [], "sql_features": ["join"], "complexity": "hard"}
{"nl": "How many sales transactions occurred between 8am and 10am?", "sql": "SELECT dummy_col, COUNT(*) FROM store_sales JOIN time_dim ON store_sales.ss_sold_time_sk = time_dim.t_time_sk WHERE t_hour >= 8 AND t_hour < 10", "label": 0, "tables": ["time_dim", "store_sales"], "columns": ["store_sales.ss_sold_time_sk", "time_dim.t_time_sk"], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What's the distribution of customer education levels across the database?", "paraphrases": ["# Paraphrases of \"What's the distribution of customer education levels across the database?\"\n\n1. How are the educational qualifications of customers distributed throughout the database?\n\n2. What is the breakdown of education levels among customers in the entire database?\n\n3. Can you show me how customer academic backgrounds are dispersed across our database records?"], "sql": "SELECT cd_education_status, COUNT(*) as customer_count FROM customer_demographics GROUP BY cd_education_status ORDER BY customer_count DESC", "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status"], "business_intent": "To understand the educational profile of the customer base, which can inform marketing strategies, product development, and customer segmentation. This analysis helps identify which education segments represent the largest portions of the customer base.", "complexity": "easy", "alternatives": ["SELECT cd_education_status, COUNT(*) as count, ROUND(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM customer_demographics), 2) as percentage FROM customer_demographics GROUP BY cd_education_status ORDER BY count DESC"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What's the distribution of customer education levels across the database?", "sql": "SELECT dummy_col, d.d_month, COUNT(*) as return_count FROM store_returns sr JOIN date_dim d ON sr.sr_returned_date_sk = d.d_date_sk WHERE d.d_year = 2002 GROUP BY d.d_month ORDER BY d.d_month", "label": 0, "tables": ["store_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What's the distribution of customer education levels across the database?", "sql": "SELECT dummy_col, cd_education_status, COUNT(*) as customer_count FROM customer_demographics GROUP BY cd_education_status ORDER BY customer_count DESC", "label": 0, "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What are the 10 most expensive items in the inventory based on current price?", "paraphrases": ["# Paraphrases of \"What are the 10 most expensive items in the inventory based on current price?\"\n\n1. Based on current pricing, which 10 items in our inventory have the highest cost?\n\n2. Could you identify the top 10 inventory items with the greatest current price values?\n\n3. Which items rank as the 10 costliest products in our inventory according to their present prices?"], "sql": "SELECT i_item_id, i_item_desc, i_current_price FROM item ORDER BY i_current_price DESC LIMIT 10;", "tables": ["item"], "columns": ["item.i_current_price", "item.i_item_id", "item.i_item_desc"], "business_intent": "To identify the highest-priced products in the inventory, which can be useful for premium product analysis, pricing strategy review, or understanding the luxury segment of the product catalog.", "complexity": "easy", "alternatives": ["SELECT i_item_id, i_product_name, i_current_price FROM item ORDER BY i_current_price DESC LIMIT 10;", "SELECT i_item_id, i_item_desc, i_current_price, i_category FROM item ORDER BY i_current_price DESC LIMIT 10;"], "sql_features": ["order_by"], "label": 1}
{"nl": "What are the 10 most expensive items in the inventory based on current price?", "sql": "SELECT s_state, SUM(cs_net_paid) as total_revenue FROM catalog_sales JOIN store ON cs_bill_customer_sk = s_store_sk GROUP BY s_state ORDER BY total_revenue DESC", "label": 0, "tables": ["catalog_sales", "store"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the 10 most expensive items in the inventory based on current price?", "sql": "SELECT dummy_col, i_item_id, i_item_desc, i_current_price FROM item ORDER BY i_current_price DESC LIMIT 10;", "label": 0, "tables": ["item"], "columns": ["item.i_current_price", "item.i_item_id", "item.i_item_desc"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What are all the distinct reason descriptions available in the system?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Could you list all the unique reason descriptions that exist within the system?\n\n2. What is the complete set of different reason descriptions that can be found in the system?\n\n3. Can you provide an overview of all distinct categories of reason descriptions available in the system's database?"], "sql": "SELECT DISTINCT r_reason_desc FROM reason ORDER BY r_reason_desc;", "tables": ["reason"], "columns": ["reason.r_reason_desc"], "business_intent": "To understand the complete set of reason categories or classifications that exist in the system, which can help with reporting, analysis categorization, and understanding the domain vocabulary used for reasons across the organization.", "complexity": "easy", "alternatives": ["SELECT r_reason_desc FROM reason GROUP BY r_reason_desc ORDER BY r_reason_desc;", "SELECT r_reason_desc, r_reason_id FROM reason ORDER BY r_reason_desc;"], "sql_features": ["order_by"], "label": 1}
{"nl": "What are all the distinct reason descriptions available in the system?", "sql": "SELECT dummy_col, sm_carrier, COUNT(*) AS number_of_modes FROM ship_mode GROUP BY sm_carrier ORDER BY sm_carrier", "label": 0, "tables": ["ship_mode"], "columns": ["ship_mode.sm_carrier"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What are all the distinct reason descriptions available in the system?", "sql": "SELECT DISTINCT dummy_col, r_reason_desc FROM reason ORDER BY r_reason_desc;", "label": 0, "tables": ["reason"], "columns": ["reason.r_reason_desc"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What is the total square footage of all warehouses?", "paraphrases": ["# Paraphrased Versions\n\n1. What is the combined square footage across all warehouse facilities?\n\n2. If you add up the area of every warehouse, what is the total square footage?\n\n3. How many square feet do all the warehouses collectively occupy?"], "sql": "SELECT SUM(w_warehouse_sq_ft) AS total_square_footage FROM warehouse", "tables": ["warehouse"], "columns": ["warehouse.w_warehouse_sq_ft"], "business_intent": "To determine the total physical space available across all warehouse facilities. This metric is important for capacity planning, asset management, and understanding the overall storage infrastructure of the business.", "complexity": "easy", "alternatives": ["SELECT COALESCE(SUM(w_warehouse_sq_ft), 0) AS total_square_footage FROM warehouse", "SELECT COUNT(*) AS warehouse_count, SUM(w_warehouse_sq_ft) AS total_square_footage, AVG(w_warehouse_sq_ft) AS avg_square_footage FROM warehouse"], "sql_features": [], "label": 1}
{"nl": "What is the total square footage of all warehouses?", "sql": "SELECT dummy_col, i_item_id, i_item_desc, i_current_price FROM item WHERE i_current_price > (SELECT AVG(i_current_price) FROM item)", "label": 0, "tables": ["item"], "columns": ["item.i_current_price", "item.i_item_id", "item.i_item_desc"], "sql_features": ["filter", "subquery"], "complexity": "hard"}
{"nl": "What is the total square footage of all warehouses?", "sql": "SELECT dummy_col, SUM(w_warehouse_sq_ft) AS total_square_footage FROM warehouse", "label": 0, "tables": ["warehouse"], "columns": ["warehouse.w_warehouse_sq_ft"], "sql_features": [], "complexity": "easy"}
{"nl": "What is the total warehouse square footage by state, showing only states with more than 100,000 total square feet?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Display the sum of warehouse square footage for each state, but include only those states whose total exceeds 100,000 square feet.\n\n2. For states with warehouse space totaling more than 100,000 square feet, what is the aggregate square footage by state?\n\n3. List the total warehouse area by state, filtering out any states with less than 100,000 square feet of combined warehouse space."], "sql": "SELECT w_state, SUM(w_warehouse_sq_ft) as total_sq_ft FROM warehouse GROUP BY w_state HAVING SUM(w_warehouse_sq_ft) > 100000 ORDER BY total_sq_ft DESC", "tables": ["warehouse"], "columns": ["warehouse.w_state", "warehouse.w_warehouse_sq_ft"], "business_intent": "To identify states with significant warehouse capacity for strategic planning, resource allocation, or expansion decisions. This analysis helps management understand geographic distribution of warehouse space and identify regions with substantial infrastructure.", "complexity": "medium", "alternatives": ["One could also analyze warehouse density by calculating average square footage per warehouse in each state instead of total square footage"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What is the total warehouse square footage by state, showing only states with more than 100,000 total square feet?", "sql": "SELECT s_state, SUM(cs_net_paid) as total_revenue FROM catalog_sales JOIN store ON cs_bill_customer_sk = s_store_sk GROUP BY s_state ORDER BY total_revenue DESC", "label": 0, "tables": ["catalog_sales", "store"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total warehouse square footage by state, showing only states with more than 100,000 total square feet?", "sql": "SELECT dummy_col, w_state, SUM(w_warehouse_sq_ft) as total_sq_ft FROM warehouse GROUP BY w_state HAVING SUM(w_warehouse_sq_ft) > 100000 ORDER BY total_sq_ft DESC", "label": 0, "tables": ["warehouse"], "columns": ["warehouse.w_state", "warehouse.w_warehouse_sq_ft"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "Which promotions generated more than $10,000 in sales during 2022?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. During 2022, which promotional campaigns exceeded $10,000 in revenue?\n\n2. What promotions surpassed the $10,000 sales threshold throughout the 2022 calendar year?\n\n3. In 2022, which marketing promotions yielded sales figures greater than $10,000?"], "sql": "SELECT p.p_promo_id, p.p_promo_name, SUM(ss.ss_net_paid) as total_sales\nFROM store_sales ss\nJOIN promotion p ON ss.ss_promo_sk = p.p_promo_sk\nWHERE EXTRACT(YEAR FROM ss.ss_sold_date_sk::date) = 2022\nGROUP BY p.p_promo_id, p.p_promo_name\nHAVING SUM(ss.ss_net_paid) > 10000\nORDER BY total_sales DESC", "tables": ["promotion", "store_sales"], "columns": [], "business_intent": "To identify high-performing promotional campaigns that generated significant revenue in a specific time period, which helps marketing teams evaluate promotion effectiveness and ROI.", "complexity": "medium", "alternatives": ["We could also look at the number of items sold during promotions rather than just revenue, or analyze promotion performance by comparing sales during the promotion to baseline sales."], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "Which promotions generated more than $10,000 in sales during 2022?", "sql": "SELECT DISTINCT dummy_col, hd_buy_potential FROM household_demographics ORDER BY hd_buy_potential;", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "Which promotions generated more than $10,000 in sales during 2022?", "sql": "SELECT dummy_col, p.p_promo_id, p.p_promo_name, SUM(ss.ss_net_paid) as total_sales\nFROM store_sales ss\nJOIN promotion p ON ss.ss_promo_sk = p.p_promo_sk\nWHERE EXTRACT(YEAR FROM ss.ss_sold_date_sk::date) = 2022\nGROUP BY p.p_promo_id, p.p_promo_name\nHAVING SUM(ss.ss_net_paid) > 10000\nORDER BY total_sales DESC", "label": 0, "tables": ["promotion", "store_sales"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average inventory quantity on hand for items that have been part of a promotion?", "paraphrases": ["# Paraphrased Versions\n\n1. For products that have been included in promotional activities, what is the typical quantity maintained in inventory?\n\n2. What average amount of stock do we keep on hand for items that have previously been featured in promotions?\n\n3. Among merchandise that has been promoted, what is the mean quantity typically held in inventory?"], "sql": "SELECT AVG(i.inv_quantity_on_hand) AS avg_quantity\nFROM inventory i\nINNER JOIN promotion p ON i.inv_item_sk = p.p_item_sk", "tables": ["promotion", "inventory"], "columns": [], "business_intent": "To understand the relationship between promotional activities and inventory levels. This analysis helps evaluate if promoted items maintain different inventory levels compared to non-promoted items, which can inform inventory management strategies for marketing campaigns.", "complexity": "medium", "alternatives": ["Could compare this with non-promoted items by using a query that calculates average quantity for both promoted and non-promoted items using a LEFT JOIN and CASE statement", "Could enhance the analysis by grouping by warehouse to see if different locations maintain different levels of promoted items"], "sql_features": ["join"], "label": 1}
{"nl": "What is the average inventory quantity on hand for items that have been part of a promotion?", "sql": "SELECT dummy_col, i_item_id, i_item_desc, i_current_price FROM item WHERE i_category = 'Books' ORDER BY i_current_price DESC LIMIT 1;", "label": 0, "tables": ["item"], "columns": ["item.i_current_price", "item.i_category", "item.i_item_id", "item.i_item_desc"], "sql_features": ["filter", "order_by"], "complexity": "easy"}
{"nl": "What is the average inventory quantity on hand for items that have been part of a promotion?", "sql": "SELECT dummy_col, AVG(i.inv_quantity_on_hand) AS avg_quantity\nFROM inventory i\nINNER JOIN promotion p ON i.inv_item_sk = p.p_item_sk", "label": 0, "tables": ["promotion", "inventory"], "columns": [], "sql_features": ["join"], "complexity": "hard"}
{"nl": "What is the total number of catalog returns for each income band?", "paraphrases": ["# Paraphrased Versions\n\n1. For each income category, how many total catalog returns were recorded?\n\n2. Could you provide the aggregate count of catalog returns broken down by income band?\n\n3. What's the sum of catalog returns when grouped according to different income bands?"], "sql": "SELECT ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound, COUNT(cr.cr_item_sk) as total_returns FROM income_band ib JOIN catalog_returns cr ON ib.ib_income_band_sk = cr.cr_refunded_cdemo_sk GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound", "tables": ["income_band", "catalog_returns"], "columns": [], "business_intent": "To analyze return patterns across different income segments to identify if certain income groups have higher return rates, which could inform targeted marketing strategies or product offerings based on income demographics.", "complexity": "medium", "alternatives": ["We could also join through a customer demographics table if one existed in the schema to get a more precise correlation between income bands and customer returns."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the total number of catalog returns for each income band?", "sql": "SELECT dummy_col, i_item_id, i_item_desc, i_current_price FROM item WHERE i_category = 'Books' ORDER BY i_current_price DESC LIMIT 1;", "label": 0, "tables": ["item"], "columns": ["item.i_current_price", "item.i_category", "item.i_item_id", "item.i_item_desc"], "sql_features": ["filter", "order_by"], "complexity": "easy"}
{"nl": "What is the total number of catalog returns for each income band?", "sql": "SELECT dummy_col, ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound, COUNT(cr.cr_item_sk) as total_returns FROM income_band ib JOIN catalog_returns cr ON ib.ib_income_band_sk = cr.cr_refunded_cdemo_sk GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound", "label": 0, "tables": ["income_band", "catalog_returns"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What's the average inventory quantity on hand by hour of the day?", "paraphrases": ["# Paraphrases of \"What's the average inventory quantity on hand by hour of the day?\"\n\n1. How does the mean level of stock availability vary throughout different hours of the day?\n\n2. On an hourly basis, what is the typical amount of inventory maintained in stock?\n\n3. What are the average on-hand inventory levels when broken down by each hour across the day?"], "sql": "SELECT td.t_hour, AVG(i.inv_quantity_on_hand) AS avg_quantity\nFROM inventory i\nJOIN time_dim td ON i.inv_date_sk = td.t_time_sk\nGROUP BY td.t_hour\nORDER BY td.t_hour;", "tables": ["inventory", "time_dim"], "columns": [], "business_intent": "To analyze inventory patterns throughout the day to identify potential hourly trends in inventory levels. This could help optimize restocking schedules and understand when inventory levels tend to be highest or lowest during the day.", "complexity": "medium", "alternatives": ["We could also break this down further by including warehouse location to see if different warehouses have different hourly inventory patterns by adding inv_warehouse_sk to the GROUP BY clause."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What's the average inventory quantity on hand by hour of the day?", "sql": "SELECT ca_state, COUNT(*) as address_count FROM customer_address GROUP BY ca_state ORDER BY address_count DESC", "label": 0, "tables": ["customer_address"], "columns": ["customer_address.ca_state"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What's the average inventory quantity on hand by hour of the day?", "sql": "SELECT dummy_col, td.t_hour, AVG(i.inv_quantity_on_hand) AS avg_quantity\nFROM inventory i\nJOIN time_dim td ON i.inv_date_sk = td.t_time_sk\nGROUP BY td.t_hour\nORDER BY td.t_hour;", "label": 0, "tables": ["inventory", "time_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the top 5 states with the highest number of customer addresses?", "sql": "SELECT td.t_hour, AVG(inv.inv_quantity_on_hand) AS avg_quantity\nFROM inventory inv\nJOIN time_dim td ON inv.inv_date_sk = td.t_time_sk\nGROUP BY td.t_hour\nORDER BY td.t_hour;", "label": 0, "tables": ["inventory", "time_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the top 5 education statuses associated with customers having the highest purchase estimates?", "paraphrases": ["Here are three different paraphrases of the original question, each preserving the meaning but using different wording:\n\n1. Which five educational backgrounds correlate with customers who spend the most, according to purchase estimates?\n\n2. For customers with the highest estimated spending, what are the five most common education levels?\n\n3. Among the top-spending customers based on purchase estimates, which five educational qualifications appear most frequently?"], "sql": "SELECT cd_education_status, AVG(cd_purchase_estimate) as avg_purchase_estimate FROM customer_demographics GROUP BY cd_education_status ORDER BY avg_purchase_estimate DESC LIMIT 5;", "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_purchase_estimate"], "business_intent": "To identify which educational backgrounds correlate with higher purchasing power, allowing marketing teams to better segment and target potential high-value customers. This insight can help in developing educational-level focused marketing strategies and budget allocation.", "complexity": "easy", "alternatives": ["Another approach could analyze the median purchase estimate by education status instead of the average to reduce the impact of outliers", "We could also count the number of customers in each education status with purchase estimates above a certain threshold, such as 5000"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What are the top 5 education statuses associated with customers having the highest purchase estimates?", "sql": "SELECT AVG(inv_quantity_on_hand) AS avg_quantity FROM inventory", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "sql_features": [], "complexity": "easy"}
{"nl": "What are the top 5 education statuses associated with customers having the highest purchase estimates?", "sql": "SELECT dummy_col, cd_education_status, AVG(cd_purchase_estimate) as avg_purchase_estimate FROM customer_demographics GROUP BY cd_education_status ORDER BY avg_purchase_estimate DESC LIMIT 5;", "label": 0, "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_purchase_estimate"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What are the names of all warehouses with more than 500,000 square feet?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Could you provide a list of all warehouses that exceed 500,000 square feet in size?\n\n2. Which warehouses have a total area greater than 500,000 square feet?\n\n3. I need to identify all storage facilities with square footage above 500,000 - what are their names?"], "sql": "SELECT w_warehouse_name FROM warehouse WHERE w_warehouse_sq_ft > 500000", "tables": ["warehouse"], "columns": ["warehouse.w_warehouse_name", "warehouse.w_warehouse_sq_ft"], "business_intent": "To identify large warehouse facilities for capacity planning, resource allocation, or strategic business decisions. This information could be useful for distribution planning, inventory management, or potential expansion projects.", "complexity": "easy", "alternatives": ["SELECT w_warehouse_name, w_warehouse_sq_ft FROM warehouse WHERE w_warehouse_sq_ft > 500000 ORDER BY w_warehouse_sq_ft DESC", "SELECT w_warehouse_id, w_warehouse_name FROM warehouse WHERE w_warehouse_sq_ft > 500000"], "sql_features": ["filter"], "label": 1}
{"nl": "What are the names of all warehouses with more than 500,000 square feet?", "sql": "SELECT r_reason_sk, r_reason_id, r_reason_desc FROM reason;", "label": 0, "tables": ["reason"], "columns": ["reason.r_reason_sk", "reason.r_reason_id", "reason.r_reason_desc"], "sql_features": [], "complexity": "easy"}
{"nl": "What are the names of all warehouses with more than 500,000 square feet?", "sql": "SELECT dummy_col, w_warehouse_name FROM warehouse WHERE w_warehouse_sq_ft > 500000", "label": 0, "tables": ["warehouse"], "columns": ["warehouse.w_warehouse_name", "warehouse.w_warehouse_sq_ft"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What are all the unique reason descriptions available in the system?", "paraphrases": ["# 3 Paraphrases of the Original Question\n\n1. Could you provide a complete list of all distinct reason descriptions that exist within the system?\n\n2. What is the full set of different reason descriptions that can be found in the system's database?\n\n3. Can you enumerate all the separate and unique descriptions for reasons that are available in the current system?"], "sql": "SELECT DISTINCT r_reason_desc FROM reason ORDER BY r_reason_desc;", "tables": ["reason"], "columns": ["reason.r_reason_desc"], "business_intent": "To understand the complete set of reason categories that exist in the system, which helps in understanding available classification options for reporting and analysis.", "complexity": "easy", "alternatives": ["SELECT r_reason_desc FROM reason GROUP BY r_reason_desc ORDER BY r_reason_desc;", "SELECT r_reason_desc, r_reason_id FROM reason ORDER BY r_reason_desc;"], "sql_features": ["order_by"], "label": 1}
{"nl": "What are all the unique reason descriptions available in the system?", "sql": "SELECT DISTINCT dummy_col, i.i_item_id, i.i_product_name, i.i_item_desc FROM item i JOIN promotion p ON i.i_item_sk = p.p_item_sk WHERE p.p_channel_email = 1 AND p.p_channel_dmail = 1", "label": 0, "tables": ["promotion", "item"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What are all the unique reason descriptions available in the system?", "sql": "SELECT DISTINCT dummy_col, r_reason_desc FROM reason ORDER BY r_reason_desc;", "label": 0, "tables": ["reason"], "columns": ["reason.r_reason_desc"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "How many call centers are located in each state?", "paraphrases": ["# Paraphrases of \"How many call centers are located in each state?\"\n\n1. What is the distribution of call centers across different states?\n\n2. Could you provide a state-by-state breakdown of call center locations?\n\n3. In each of the states, how many call centers can be found?"], "sql": "SELECT ca_state, COUNT(*) AS number_of_call_centers FROM call_center JOIN customer_address ON cc_call_center_sk = ca_address_sk GROUP BY ca_state ORDER BY number_of_call_centers DESC", "tables": ["call_center", "customer_address"], "columns": [], "business_intent": "To understand the geographic distribution of call centers by state for facility planning, operational analysis, and regional management. This information helps leadership identify which states have the highest concentration of call centers and could inform decisions about expansion or consolidation.", "complexity": "medium", "alternatives": ["This query assumes there's a direct join between call_center and customer_address tables. If there's an intermediary table linking these two, the query would need to be adjusted accordingly.", "The query could be modified to count only active call centers by adding a condition like 'WHERE cc_rec_end_date IS NULL OR cc_rec_end_date > CURRENT_DATE'"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "How many call centers are located in each state?", "sql": "SELECT p_promo_id, p_promo_name, p_cost, p_end_date_sk \nFROM promotion \nWHERE p_cost > 1000 \nORDER BY p_end_date_sk DESC \nLIMIT 5;", "label": 0, "tables": ["promotion"], "columns": ["promotion.p_end_date_sk", "promotion.p_promo_id", "promotion.p_cost", "promotion.p_promo_name"], "sql_features": ["filter", "order_by"], "complexity": "easy"}
{"nl": "How many call centers are located in each state?", "sql": "SELECT dummy_col, ca_state, COUNT(*) AS number_of_call_centers FROM call_center JOIN customer_address ON cc_call_center_sk = ca_address_sk GROUP BY ca_state ORDER BY number_of_call_centers DESC", "label": 0, "tables": ["call_center", "customer_address"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are all the unique reasons stored in the reason table along with their descriptions?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Could you provide a complete list of all distinct reasons found in the reason table, including their corresponding descriptions?\n\n2. Please retrieve all different reasons and their associated descriptions from the reason table without any duplicates.\n\n3. I need to see every unique entry in the reason table, showing both the reason itself and its description field."], "sql": "SELECT r_reason_id, r_reason_desc FROM reason ORDER BY r_reason_id", "tables": ["reason"], "columns": ["reason.r_reason_id", "reason.r_reason_desc"], "business_intent": "To understand all the possible reason categories available in the system for reference and reporting purposes. This query helps business users get familiar with the standardized reason codes and their meanings, which can be useful for consistent categorization in analyses and reports.", "complexity": "easy", "alternatives": ["SELECT * FROM reason ORDER BY r_reason_sk", "SELECT r_reason_id AS 'Reason Code', r_reason_desc AS 'Description' FROM reason"], "sql_features": ["order_by"], "label": 1}
{"nl": "What are all the unique reasons stored in the reason table along with their descriptions?", "sql": "SELECT dummy_col, inv_warehouse_sk, AVG(inv_quantity_on_hand) AS avg_quantity \nFROM inventory \nGROUP BY inv_warehouse_sk \nORDER BY inv_warehouse_sk;", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand", "inventory.inv_warehouse_sk"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What are all the unique reasons stored in the reason table along with their descriptions?", "sql": "SELECT dummy_col, r_reason_id, r_reason_desc FROM reason ORDER BY r_reason_id", "label": 0, "tables": ["reason"], "columns": ["reason.r_reason_id", "reason.r_reason_desc"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What are the different buying potential categories in household demographics and how many households fall into each category?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How are households distributed across the various purchasing power segments in demographic classifications?\n\n2. Could you break down the number of households that belong to each consumer spending capacity group within demographic data?\n\n3. In demographic household analysis, what are the distinct consumer purchasing potential classifications, and what is the household count for each segment?"], "sql": "SELECT hd_buy_potential, COUNT(*) as household_count FROM household_demographics GROUP BY hd_buy_potential ORDER BY household_count DESC", "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential"], "business_intent": "To understand the distribution of households across different buying potential categories, which helps in market segmentation, targeting specific customer groups for promotions, and optimizing marketing strategies based on purchasing power.", "complexity": "easy", "alternatives": ["We could also filter for specific buying potential values if we were only interested in certain segments, or join with other tables like promotion if we wanted to analyze how different buying potential segments respond to promotional activities."], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What are the different buying potential categories in household demographics and how many households fall into each category?", "sql": "SELECT dummy_col, cc.cc_call_center_id, AVG(wr.wr_net_loss) as avg_net_loss\nFROM web_returns wr\nJOIN call_center cc ON wr.wr_call_center_sk = cc.cc_call_center_sk\nGROUP BY cc.cc_call_center_id\nORDER BY avg_net_loss DESC;", "label": 0, "tables": ["web_returns", "call_center"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the different buying potential categories in household demographics and how many households fall into each category?", "sql": "SELECT dummy_col, hd_buy_potential, COUNT(*) as household_count FROM household_demographics GROUP BY hd_buy_potential ORDER BY household_count DESC", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the total amount of web returns by day of the week for the year 2002?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. For the year 2002, what was the daily breakdown of web returns, organized by day of the week?\n\n2. How many web returns occurred on each day of the week throughout 2002?\n\n3. Can you provide the total web returns for 2002, segmented by individual days of the week?"], "sql": "SELECT d.d_day_name, SUM(wr.wr_return_amt) as total_return_amount FROM web_returns wr JOIN date_dim d ON wr.wr_returned_date_sk = d.d_date_sk WHERE d.d_year = 2002 GROUP BY d.d_day_name ORDER BY total_return_amount DESC", "tables": ["web_returns", "date_dim"], "columns": [], "business_intent": "To analyze return patterns by day of the week for web sales in 2002, which helps identify which days experience the highest return volumes and values. This insight can guide customer service staffing, return processing optimization, and potentially inform marketing and sales strategies to reduce returns on high-volume days.", "complexity": "medium", "alternatives": ["We could alternatively analyze return counts instead of amounts by using COUNT(*) instead of SUM(wr_return_amt), or we could further break down the analysis by quarter or month to see if return patterns change throughout the year."], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What is the total amount of web returns by day of the week for the year 2002?", "sql": "SELECT dummy_col, AVG(i.inv_quantity_on_hand) as avg_quantity\nFROM inventory i\nWHERE i.inv_item_sk IN (SELECT DISTINCT ws_item_sk FROM web_sales)", "label": 0, "tables": ["web_sales", "inventory"], "columns": [], "sql_features": ["filter", "subquery"], "complexity": "hard"}
{"nl": "What is the total amount of web returns by day of the week for the year 2002?", "sql": "SELECT dummy_col, d.d_day_name, SUM(wr.wr_return_amt) as total_return_amount FROM web_returns wr JOIN date_dim d ON wr.wr_returned_date_sk = d.d_date_sk WHERE d.d_year = 2002 GROUP BY d.d_day_name ORDER BY total_return_amount DESC", "label": 0, "tables": ["web_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What's the average inventory quantity on hand across all warehouses?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Across our warehouse network, what is the mean quantity of inventory currently being stored?\n\n2. What quantity of stock do we have on hand per warehouse when averaged across all locations?\n\n3. If we calculate the typical inventory levels across all storage facilities, what is the average amount maintained?"], "sql": "SELECT AVG(inv_quantity_on_hand) AS avg_inventory_quantity FROM inventory;", "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "business_intent": "To understand the overall inventory level across the organization, helping management assess whether stock levels are generally appropriate or if there are potential overstocking or understocking issues that need to be addressed.", "complexity": "easy", "alternatives": ["SELECT SUM(inv_quantity_on_hand)/COUNT(*) AS avg_inventory_quantity FROM inventory;", "SELECT SUM(inv_quantity_on_hand) AS total_inventory, COUNT(*) AS inventory_records, SUM(inv_quantity_on_hand)/COUNT(*) AS avg_inventory_quantity FROM inventory;"], "sql_features": [], "label": 1}
{"nl": "What's the average inventory quantity on hand across all warehouses?", "sql": "SELECT dummy_col, td.t_hour, AVG(inv.inv_quantity_on_hand) AS avg_quantity\nFROM inventory inv\nJOIN time_dim td ON inv.inv_date_sk = td.t_time_sk\nGROUP BY td.t_hour\nORDER BY td.t_hour;", "label": 0, "tables": ["inventory", "time_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What's the average inventory quantity on hand across all warehouses?", "sql": "SELECT dummy_col, AVG(inv_quantity_on_hand) AS avg_inventory_quantity FROM inventory;", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "sql_features": [], "complexity": "easy"}
{"nl": "What is the total sales amount for each customer in 2023, ordered by total sales descending?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. For each customer, what was their total sales value during 2023, with results displayed from highest to lowest total sales?\n\n2. Can you provide a breakdown of customer sales totals for the year 2023, arranged in descending order based on sales amount?\n\n3. List each customer's cumulative sales figure for 2023, sorting the results so that customers with the highest total sales appear first."], "sql": "SELECT c.c_customer_id, c.c_first_name, c.c_last_name, SUM(cs.cs_net_paid) as total_sales\nFROM catalog_sales cs\nJOIN customer c ON cs.cs_bill_customer_sk = c.c_customer_sk\nWHERE EXTRACT(YEAR FROM cs.cs_sold_date_sk::date) = 2023\nGROUP BY c.c_customer_id, c.c_first_name, c.c_last_name\nORDER BY total_sales DESC;", "tables": ["catalog_sales", "customer"], "columns": [], "business_intent": "To identify top-spending customers through catalog sales channels in 2023, which can be valuable for customer segmentation, loyalty programs, targeted marketing campaigns, and understanding revenue distribution across the customer base.", "complexity": "medium", "alternatives": ["We could also calculate this using cs_net_paid_inc_tax or cs_net_paid_inc_ship_tax depending on which sales metric is more relevant for the business context."], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What is the total sales amount for each customer in 2023, ordered by total sales descending?", "sql": "SELECT dummy_col, i.i_category, COUNT(*) as return_count FROM web_returns wr JOIN item i ON wr.wr_item_sk = i.i_item_sk GROUP BY i.i_category ORDER BY return_count DESC LIMIT 5", "label": 0, "tables": ["web_returns", "item"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total sales amount for each customer in 2023, ordered by total sales descending?", "sql": "SELECT dummy_col, c.c_customer_id, c.c_first_name, c.c_last_name, SUM(cs.cs_net_paid) as total_sales\nFROM catalog_sales cs\nJOIN customer c ON cs.cs_bill_customer_sk = c.c_customer_sk\nWHERE EXTRACT(YEAR FROM cs.cs_sold_date_sk::date) = 2023\nGROUP BY c.c_customer_id, c.c_first_name, c.c_last_name\nORDER BY total_sales DESC;", "label": 0, "tables": ["catalog_sales", "customer"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total sales amount by income band for web sales?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How much revenue was generated through web sales, categorized by income bracket?\n\n2. Can you break down the online sales totals according to different income bands?\n\n3. What are the aggregate web sales figures when segmented by customer income levels?"], "sql": "SELECT ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound, SUM(ws.ws_net_paid) as total_sales_amount FROM web_sales ws JOIN income_band ib ON ws.ws_bill_customer_sk IN (SELECT c_customer_sk FROM customer WHERE c_current_income_band_sk = ib.ib_income_band_sk) GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound", "tables": ["income_band", "web_sales", "customer"], "columns": [], "business_intent": "To analyze web sales performance across different customer income segments, helping the business understand which income brackets contribute most to online revenue and potentially identify target markets for marketing campaigns.", "complexity": "medium", "alternatives": ["We could also analyze the average order size by income band by using AVG(ws_net_paid) instead of SUM, or look at the number of transactions per income band using COUNT(*)"], "sql_features": ["join", "group_by", "order_by", "subquery"], "label": 1}
{"nl": "What is the total sales amount by income band for web sales?", "sql": "SELECT cc_company, COUNT(*) AS number_of_call_centers FROM call_center GROUP BY cc_company ORDER BY number_of_call_centers DESC;", "label": 0, "tables": ["call_center"], "columns": ["call_center.cc_company"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the total sales amount by income band for web sales?", "sql": "SELECT dummy_col, ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound, SUM(ws.ws_net_paid) as total_sales_amount FROM web_sales ws JOIN income_band ib ON ws.ws_bill_customer_sk IN (SELECT c_customer_sk FROM customer WHERE c_current_income_band_sk = ib.ib_income_band_sk) GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound", "label": 0, "tables": ["income_band", "web_sales", "customer"], "columns": [], "sql_features": ["join", "group_by", "order_by", "subquery"], "complexity": "hard"}
{"nl": "What is the distribution of web pages created in each hour of the day?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How are web pages distributed according to their creation time across the 24 hours of the day?\n\n2. What is the hourly breakdown of web page creation throughout the day?\n\n3. How does the number of web pages created vary by hour during a 24-hour period?"], "sql": "SELECT t.t_hour, COUNT(*) as page_count FROM web_page w JOIN time_dim t ON w.wp_creation_date_sk = t.t_time_sk GROUP BY t.t_hour ORDER BY t.t_hour", "tables": ["web_page", "time_dim"], "columns": [], "business_intent": "To analyze web page creation patterns throughout the day, which can help identify peak periods of content generation, understand when most website updates occur, and potentially optimize resource allocation for content management or technical support teams.", "complexity": "medium", "alternatives": ["We could analyze this data by time shifts instead of hours by using t_shift column instead of t_hour", "We could further break this down by both hour and minute to get more granular insights"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of web pages created in each hour of the day?", "sql": "SELECT dummy_col, s.s_store_id, s.s_store_name, COUNT(cr.cr_item_sk) as total_returns FROM catalog_returns cr JOIN store s ON cr.cr_store_sk = s.s_store_sk GROUP BY s.s_store_id, s.s_store_name ORDER BY total_returns DESC", "label": 0, "tables": ["catalog_returns", "store"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of web pages created in each hour of the day?", "sql": "SELECT dummy_col, t.t_hour, COUNT(*) as page_count FROM web_page w JOIN time_dim t ON w.wp_creation_date_sk = t.t_time_sk GROUP BY t.t_hour ORDER BY t.t_hour", "label": 0, "tables": ["web_page", "time_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average number of vehicles owned by households in each buying potential category?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. For each buying potential category, what is the mean number of vehicles that households possess?\n\n2. How many vehicles do households own on average when grouped by their buying potential classification?\n\n3. Across the different buying potential segments, what is the typical number of vehicles per household?"], "sql": "SELECT hd_buy_potential, AVG(hd_vehicle_count) AS avg_vehicle_count FROM household_demographics GROUP BY hd_buy_potential ORDER BY hd_buy_potential", "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential", "household_demographics.hd_vehicle_count"], "business_intent": "To understand the relationship between a household's buying potential classification and their vehicle ownership patterns. This analysis can help with market segmentation, identifying target customer groups for automotive-related products, and developing marketing strategies based on household purchasing power and transportation assets.", "complexity": "easy", "alternatives": ["Could also analyze median vehicle count instead of average to account for outliers, or examine the distribution of vehicle counts within each buying potential category by using COUNT and GROUP BY on both attributes."], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What is the average number of vehicles owned by households in each buying potential category?", "sql": "SELECT dummy_col, t_hour, COUNT(*) as record_count FROM time_dim GROUP BY t_hour ORDER BY record_count DESC LIMIT 1;", "label": 0, "tables": ["time_dim"], "columns": ["time_dim.t_hour"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the average number of vehicles owned by households in each buying potential category?", "sql": "SELECT dummy_col, hd_buy_potential, AVG(hd_vehicle_count) AS avg_vehicle_count FROM household_demographics GROUP BY hd_buy_potential ORDER BY hd_buy_potential", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential", "household_demographics.hd_vehicle_count"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "Which warehouses have the largest inventory of items on hand?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Where can we find the warehouses storing the greatest quantity of available inventory?\n\n2. Which storage facilities maintain the highest volume of stocked merchandise?\n\n3. What distribution centers hold the maximum amount of on-hand product inventory?"], "sql": "SELECT w.w_warehouse_name, SUM(i.inv_quantity_on_hand) as total_inventory FROM inventory i JOIN warehouse w ON i.inv_warehouse_sk = w.w_warehouse_sk GROUP BY w.w_warehouse_name ORDER BY total_inventory DESC", "tables": ["warehouse", "inventory"], "columns": [], "business_intent": "To identify which warehouse facilities have the greatest inventory stock levels, helping management understand inventory distribution across locations. This can inform decisions about warehouse capacity utilization, potential redistribution of inventory, or identifying facilities that may have excess inventory.", "complexity": "medium", "alternatives": ["We could also analyze this by specific date periods by joining with date dimensions if available", "Another approach would be to count distinct items per warehouse rather than summing quantities to see inventory diversity"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "Which warehouses have the largest inventory of items on hand?", "sql": "SELECT s.s_city, s.s_state, COUNT(*) as closure_count \nFROM store s \nJOIN date_dim d ON s.s_closed_date_sk = d.d_date_sk \nWHERE d.d_year = 2000 \nGROUP BY s.s_city, s.s_state \nORDER BY closure_count DESC \nLIMIT 5;", "label": 0, "tables": ["date_dim", "store"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "Which warehouses have the largest inventory of items on hand?", "sql": "SELECT dummy_col, w.w_warehouse_name, SUM(i.inv_quantity_on_hand) as total_inventory FROM inventory i JOIN warehouse w ON i.inv_warehouse_sk = w.w_warehouse_sk GROUP BY w.w_warehouse_name ORDER BY total_inventory DESC", "label": 0, "tables": ["warehouse", "inventory"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the top 5 most common reasons for catalog sales?", "paraphrases": ["# Paraphrases of \"What are the top 5 most common reasons for catalog sales?\"\n\n1. What are the five primary factors that drive consumers to purchase from catalogs?\n\n2. Which five reasons most frequently explain why people buy through catalog sales?\n\n3. What are the leading five motivations that contribute to the popularity of catalog purchasing?"], "sql": "SELECT r.r_reason_desc, COUNT(*) as reason_count FROM catalog_sales cs JOIN reason r ON cs.cs_reason_sk = r.r_reason_sk GROUP BY r.r_reason_desc ORDER BY reason_count DESC LIMIT 5", "tables": ["catalog_sales", "reason"], "columns": [], "business_intent": "To identify the most common reasons customers make catalog purchases, which can help the business understand customer motivations and potentially improve marketing strategies or address common issues.", "complexity": "medium", "alternatives": ["We could also analyze reasons by sales amount instead of count by using SUM of a monetary value column, which would show reasons driving the highest revenue rather than just frequency."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What are the top 5 most common reasons for catalog sales?", "sql": "SELECT i_item_id, i_item_desc, i_current_price FROM item WHERE i_current_price > (SELECT AVG(i_current_price) FROM item)", "label": 0, "tables": ["item"], "columns": ["item.i_current_price", "item.i_item_id", "item.i_item_desc"], "sql_features": ["filter", "subquery"], "complexity": "hard"}
{"nl": "What are the top 5 most common reasons for catalog sales?", "sql": "SELECT dummy_col, r.r_reason_desc, COUNT(*) as reason_count FROM catalog_sales cs JOIN reason r ON cs.cs_reason_sk = r.r_reason_sk GROUP BY r.r_reason_desc ORDER BY reason_count DESC LIMIT 5", "label": 0, "tables": ["catalog_sales", "reason"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the top 5 departments by total web sales amount?", "paraphrases": ["# Paraphrases of \"What are the top 5 departments by total web sales amount?\"\n\n1. Which five departments generated the highest total revenue from online sales?\n\n2. Based on web sales figures, which departments rank in the top 5 for overall sales amount?\n\n3. Could you identify the five departments with the greatest cumulative web sales revenue?"], "sql": "SELECT cp.cp_department, SUM(ws.ws_net_paid) as total_sales FROM web_sales ws JOIN catalog_page cp ON ws.ws_catalog_page_sk = cp.cp_catalog_page_sk GROUP BY cp.cp_department ORDER BY total_sales DESC LIMIT 5", "tables": ["web_sales", "catalog_page"], "columns": [], "business_intent": "To identify the most successful departments based on web sales revenue, which helps in understanding which product categories drive the most online revenue. This information can guide resource allocation, marketing strategy, and inventory planning.", "complexity": "medium", "alternatives": ["Instead of using ws_net_paid, we could analyze using ws_sales_price or ws_ext_sales_price for different sales metrics.", "We could add a time dimension by joining with a date table to analyze top departments by time period."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What are the top 5 departments by total web sales amount?", "sql": "SELECT cs_bill_customer_sk, SUM(cs_quantity) as total_quantity_returned FROM catalog_sales WHERE cs_bill_customer_sk IS NOT NULL GROUP BY cs_bill_customer_sk ORDER BY total_quantity_returned DESC LIMIT 1;", "label": 0, "tables": ["catalog_sales"], "columns": ["catalog_sales.cs_bill_customer_sk", "catalog_sales.cs_quantity"], "sql_features": ["filter", "group_by", "order_by"], "complexity": "medium"}
{"nl": "What are the top 5 departments by total web sales amount?", "sql": "SELECT dummy_col, cp.cp_department, SUM(ws.ws_net_paid) as total_sales FROM web_sales ws JOIN catalog_page cp ON ws.ws_catalog_page_sk = cp.cp_catalog_page_sk GROUP BY cp.cp_department ORDER BY total_sales DESC LIMIT 5", "label": 0, "tables": ["web_sales", "catalog_page"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total number of store returns by department from the catalog pages?", "paraphrases": ["# Paraphrases of \"What is the total number of store returns by department from the catalog pages?\"\n\n1. How many items were returned to stores from catalog pages, broken down by department?\n\n2. Could you provide the department-wise count of store returns originating from catalog page purchases?\n\n3. What are the departmental totals for merchandise returned to stores after being ordered from catalog pages?"], "sql": "SELECT cp.cp_department, COUNT(sr.sr_item_sk) as return_count FROM store_returns sr JOIN catalog_page cp ON sr.sr_catalog_page_sk = cp.cp_catalog_page_sk GROUP BY cp.cp_department ORDER BY return_count DESC", "tables": ["store_returns", "catalog_page"], "columns": [], "business_intent": "To analyze the distribution of product returns across different catalog departments, which helps identify which departments might have higher return rates. This analysis can guide improvements in product quality, catalog descriptions, or targeted customer education for departments with high return volumes.", "complexity": "medium", "alternatives": ["We could also analyze this by looking at return values instead of counts, or combine with date information to see trends over time by department"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the total number of store returns by department from the catalog pages?", "sql": "SELECT dummy_col, wp.wp_web_page_id, SUM(ws.ws_net_paid) as total_sales FROM web_sales ws JOIN web_page wp ON ws.ws_web_page_sk = wp.wp_web_page_sk GROUP BY wp.wp_web_page_id ORDER BY total_sales DESC", "label": 0, "tables": ["web_sales", "web_page"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total number of store returns by department from the catalog pages?", "sql": "SELECT dummy_col, cp.cp_department, COUNT(sr.sr_item_sk) as return_count FROM store_returns sr JOIN catalog_page cp ON sr.sr_catalog_page_sk = cp.cp_catalog_page_sk GROUP BY cp.cp_department ORDER BY return_count DESC", "label": 0, "tables": ["store_returns", "catalog_page"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the upper and lower bounds of all income bands?", "paraphrases": ["# Paraphrases of \"What are the upper and lower bounds of all income bands?\"\n\n1. Could you specify the maximum and minimum thresholds for each income category?\n\n2. What are the highest and lowest limits that define each income bracket?\n\n3. Can you provide the ceiling and floor values for all income classification ranges?"], "sql": "SELECT ib_income_band_sk, ib_lower_bound, ib_upper_bound FROM income_band ORDER BY ib_lower_bound", "tables": ["income_band"], "columns": ["income_band.ib_lower_bound", "income_band.ib_upper_bound", "income_band.ib_income_band_sk"], "business_intent": "To understand the income segmentation structure used in the database by examining the defined income bands. This information is crucial for market segmentation, customer categorization, and demographic analysis based on income levels.", "complexity": "easy", "alternatives": ["The query could be ordered by ib_income_band_sk instead if the business cares more about the band identifiers than the actual income ranges", "If only concerned with the ranges themselves without the identifiers: SELECT ib_lower_bound, ib_upper_bound FROM income_band ORDER BY ib_lower_bound"], "sql_features": ["order_by"], "label": 1}
{"nl": "What are the upper and lower bounds of all income bands?", "sql": "SELECT dummy_col, AVG(inv.inv_quantity_on_hand) AS avg_quantity\nFROM inventory inv\nJOIN date_dim d ON inv.inv_date_sk = d.d_date_sk\nWHERE d.d_year = 2020 AND d.d_month = 1", "label": 0, "tables": ["date_dim", "inventory"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What are the upper and lower bounds of all income bands?", "sql": "SELECT dummy_col, ib_income_band_sk, ib_lower_bound, ib_upper_bound FROM income_band ORDER BY ib_lower_bound", "label": 0, "tables": ["income_band"], "columns": ["income_band.ib_lower_bound", "income_band.ib_upper_bound", "income_band.ib_income_band_sk"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What are the income bands with their upper and lower bounds currently being used by all websites?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Could you identify the current range of income categories, including their minimum and maximum thresholds, that are implemented across all web platforms?\n\n2. What income brackets, with their specified floor and ceiling values, are presently utilized throughout all internet sites?\n\n3. Across all websites, what are the defined income ranges being used today, including their minimum and maximum limits?"], "sql": "SELECT DISTINCT ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound FROM income_band ib JOIN web_site ws ON ws.web_rec_end_date IS NULL OR ws.web_rec_end_date > CURRENT_DATE", "tables": ["income_band", "web_site"], "columns": [], "business_intent": "To identify all income band segments that are currently being used for customer classification or targeting on active websites. This helps in understanding what income demographics the business is currently focusing on across its web properties.", "complexity": "medium", "alternatives": ["The query assumes that null or future end dates indicate current websites. Another approach could be to use web_rec_start_date <= CURRENT_DATE AND (web_rec_end_date IS NULL OR web_rec_end_date > CURRENT_DATE) for more precision in determining active websites."], "sql_features": ["join"], "label": 1}
{"nl": "What are the income bands with their upper and lower bounds currently being used by all websites?", "sql": "SELECT p_promo_id, p_promo_name, p_cost, p_end_date_sk \nFROM promotion \nWHERE p_cost > 1000 \nORDER BY p_end_date_sk DESC \nLIMIT 5;", "label": 0, "tables": ["promotion"], "columns": ["promotion.p_end_date_sk", "promotion.p_promo_id", "promotion.p_cost", "promotion.p_promo_name"], "sql_features": ["filter", "order_by"], "complexity": "easy"}
{"nl": "What are the income bands with their upper and lower bounds currently being used by all websites?", "sql": "SELECT DISTINCT dummy_col, ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound FROM income_band ib JOIN web_site ws ON ws.web_rec_end_date IS NULL OR ws.web_rec_end_date > CURRENT_DATE", "label": 0, "tables": ["income_band", "web_site"], "columns": [], "sql_features": ["join"], "complexity": "hard"}
{"nl": "What is the total refund amount for catalog returns processed through web sites with a '.com' domain name?", "paraphrases": ["Paraphrases of the original question:\n\n1. How much money was refunded in total for items returned from catalogs when the returns were processed via websites that have a '.com' domain extension?\n\n2. For catalog merchandise that was returned through '.com' websites, what is the aggregate refund value?\n\n3. What's the sum of all refunds issued for catalog returns that were handled through internet sites ending with '.com'?"], "sql": "SELECT SUM(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS total_refund_amount\nFROM catalog_returns cr\nJOIN web_site ws ON cr.cr_web_site_sk = ws.web_site_sk\nWHERE ws.web_domain LIKE '%.com%'", "tables": ["catalog_returns", "web_site"], "columns": [], "business_intent": "To analyze the financial impact of returns processed through specific types of web domains (.com sites). This helps in understanding if certain web domains have higher return values and could inform marketing strategy or website improvement decisions.", "complexity": "medium", "alternatives": ["We could also segment the analysis by additional dimensions like time periods or specific web sites, rather than looking at all .com domains together."], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What is the total refund amount for catalog returns processed through web sites with a '.com' domain name?", "sql": "SELECT inv_warehouse_sk, SUM(inv_quantity_on_hand) as total_quantity FROM inventory WHERE inv_quantity_on_hand > 500 GROUP BY inv_warehouse_sk ORDER BY total_quantity DESC;", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand", "inventory.inv_warehouse_sk"], "sql_features": ["filter", "group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the total refund amount for catalog returns processed through web sites with a '.com' domain name?", "sql": "SELECT dummy_col, SUM(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS total_refund_amount\nFROM catalog_returns cr\nJOIN web_site ws ON cr.cr_web_site_sk = ws.web_site_sk\nWHERE ws.web_domain LIKE '%.com%'", "label": 0, "tables": ["catalog_returns", "web_site"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What are the most common street types in California?", "paraphrases": ["# Paraphrases of \"What are the most common street types in California?\"\n\n1. Which categories of roadways appear most frequently throughout California?\n\n2. In California, what kinds of streets occur with the highest prevalence?\n\n3. What road designations (avenue, boulevard, etc.) are used most abundantly across California?"], "sql": "SELECT ca_street_type, COUNT(*) as count FROM customer_address WHERE ca_state = 'CA' GROUP BY ca_street_type ORDER BY count DESC", "tables": ["customer_address"], "columns": ["customer_address.ca_street_type", "customer_address.ca_state"], "business_intent": "To analyze the distribution of street types within California addresses, which can help with address standardization, targeted marketing, or regional pattern analysis for customers in California.", "complexity": "easy", "alternatives": ["We could also analyze street type distribution across multiple states to compare regional differences by adding state as a dimension in the GROUP BY clause."], "sql_features": ["filter", "group_by", "order_by"], "label": 1}
{"nl": "What are the most common street types in California?", "sql": "SELECT dummy_col, ca.ca_state, COUNT(*) as sales_count FROM catalog_sales cs JOIN customer_address ca ON cs.cs_bill_addr_sk = ca.ca_address_sk GROUP BY ca.ca_state ORDER BY sales_count DESC", "label": 0, "tables": ["catalog_sales", "customer_address"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the most common street types in California?", "sql": "SELECT dummy_col, ca_street_type, COUNT(*) as count FROM customer_address WHERE ca_state = 'CA' GROUP BY ca_street_type ORDER BY count DESC", "label": 0, "tables": ["customer_address"], "columns": ["customer_address.ca_street_type", "customer_address.ca_state"], "sql_features": ["filter", "group_by", "order_by"], "complexity": "medium"}
{"nl": "What are the start and end dates of promotions that involve item discount and use email marketing?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. When do promotions featuring item discounts and email marketing campaigns begin and end?\n\n2. Could you provide the commencement and conclusion dates for promotional activities that combine product discounts with email marketing strategies?\n\n3. For promotions that utilize both item price reductions and email marketing channels, what are their respective starting and ending dates?"], "sql": "SELECT p.p_promo_id, d1.d_date AS start_date, d2.d_date AS end_date \nFROM promotion p \nJOIN date_dim d1 ON p.p_start_date_sk = d1.d_date_sk \nJOIN date_dim d2 ON p.p_end_date_sk = d2.d_date_sk \nWHERE p.p_discount_active = 'Y' AND p.p_email_ind = 'Y' \nORDER BY start_date;", "tables": ["promotion", "date_dim"], "columns": [], "business_intent": "To analyze the timing of email-based promotional campaigns that include discounts, which helps marketing teams understand the distribution and duration of these specific types of promotions throughout the year.", "complexity": "medium", "alternatives": ["We could also include additional promotion details like p_promo_name or p_purpose to provide more context about these specific promotions", "The query could be extended to count the number of such promotions by month or quarter to identify seasonal patterns"], "sql_features": ["join", "filter", "order_by"], "label": 1}
{"nl": "What are the start and end dates of promotions that involve item discount and use email marketing?", "sql": "SELECT p.p_promo_id, p.p_promo_name, p.p_channel_dmail, p.p_channel_email, p.p_channel_tv, p.p_channel_radio \nFROM promotion p \nJOIN date_dim d1 ON p.p_start_date_sk = d1.d_date_sk \nJOIN date_dim d2 ON p.p_end_date_sk = d2.d_date_sk \nWHERE (d1.d_year = 2001 AND d1.d_moy = 12) \nOR (d2.d_year = 2001 AND d2.d_moy = 12) \nOR (d1.d_year < 2001 AND d2.d_year > 2001) \nOR (d1.d_year = 2001 AND d1.d_moy < 12 AND d2.d_year = 2001 AND d2.d_moy > 12) \nOR (d1.d_year = 2001 AND d1.d_moy < 12 AND d2.d_year > 2001) \nOR (d1.d_year < 2001 AND d2.d_year = 2001 AND d2.d_moy > 12);", "label": 0, "tables": ["promotion", "date_dim"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What are the start and end dates of promotions that involve item discount and use email marketing?", "sql": "SELECT dummy_col, p.p_promo_id, d1.d_date AS start_date, d2.d_date AS end_date \nFROM promotion p \nJOIN date_dim d1 ON p.p_start_date_sk = d1.d_date_sk \nJOIN date_dim d2 ON p.p_end_date_sk = d2.d_date_sk \nWHERE p.p_discount_active = 'Y' AND p.p_email_ind = 'Y' \nORDER BY start_date;", "label": 0, "tables": ["promotion", "date_dim"], "columns": [], "sql_features": ["join", "filter", "order_by"], "complexity": "hard"}
{"nl": "How many unique reasons are recorded in our system?", "paraphrases": ["# Paraphrases of \"How many unique reasons are recorded in our system?\"\n\n1. What is the total count of distinct reasons documented within our system?\n\n2. Can you tell me the number of different reasons that have been logged in our system?\n\n3. How many separate, non-duplicated reasons are currently stored in our system's records?"], "sql": "SELECT COUNT(*) FROM reason", "tables": ["reason"], "columns": [], "business_intent": "To understand the breadth of reason categories available in the system. This information helps analysts assess the granularity of reason classifications and may inform decisions about whether the current reason codes are sufficient for business reporting needs.", "complexity": "easy", "alternatives": ["SELECT COUNT(DISTINCT r_reason_sk) FROM reason", "SELECT COUNT(1) FROM reason"], "sql_features": [], "label": 1}
{"nl": "How many unique reasons are recorded in our system?", "sql": "SELECT dummy_col, cd_education_status, cd_marital_status, COUNT(*) as customer_count FROM customer_demographics GROUP BY cd_education_status, cd_marital_status ORDER BY cd_education_status, cd_marital_status", "label": 0, "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_marital_status"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "How many unique reasons are recorded in our system?", "sql": "SELECT dummy_col, COUNT(*) FROM reason", "label": 0, "tables": ["reason"], "columns": [], "sql_features": [], "complexity": "easy"}
{"nl": "How many unique dates are there in the date_dim table?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. What is the total count of distinct dates found in the date_dim table?\n\n2. Could you determine the number of different dates that exist within the date_dim table?\n\n3. How many non-duplicate date entries does the date_dim table contain?"], "sql": "SELECT COUNT(DISTINCT d_date) FROM date_dim;", "tables": ["date_dim"], "columns": ["date_dim.d_date"], "business_intent": "To determine the time range covered by the database by counting the number of distinct calendar dates available in the date dimension. This helps understand the temporal scope of the data warehouse for analytical purposes.", "complexity": "easy", "alternatives": ["SELECT COUNT(*) FROM (SELECT DISTINCT d_date FROM date_dim) AS distinct_dates;", "SELECT COUNT(1) FROM (SELECT d_date FROM date_dim GROUP BY d_date) AS unique_dates;"], "sql_features": [], "label": 1}
{"nl": "How many unique dates are there in the date_dim table?", "sql": "SELECT dummy_col, w.w_warehouse_name, SUM(ws.ws_net_paid) as total_sales_amount FROM web_sales ws JOIN warehouse w ON ws.ws_warehouse_sk = w.w_warehouse_sk GROUP BY w.w_warehouse_name ORDER BY total_sales_amount DESC", "label": 0, "tables": ["warehouse", "web_sales"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "How many unique dates are there in the date_dim table?", "sql": "SELECT dummy_col, COUNT(DISTINCT d_date) FROM date_dim;", "label": 0, "tables": ["date_dim"], "columns": ["date_dim.d_date"], "sql_features": [], "complexity": "easy"}
{"nl": "What was the total sales amount from store sales compared to catalog sales in the last available period?", "paraphrases": ["# Paraphrases of Original Question\n\n1. How did the total revenue from in-store purchases compare to catalog-based sales during the most recent reporting period?\n\n2. In the latest available timeframe, what was the comparative total sales figure between retail store transactions and catalog orders?\n\n3. During the most recent data collection period, what was the difference between the aggregate sales amount generated through physical stores versus catalog sales?"], "sql": "SELECT 'Store Sales' as channel, SUM(ss_net_paid) as total_sales FROM store_sales GROUP BY 1 UNION ALL SELECT 'Catalog Sales' as channel, SUM(cs_net_paid) as total_sales FROM catalog_sales GROUP BY 1", "tables": ["catalog_sales", "store_sales"], "columns": [], "business_intent": "To compare the performance of different sales channels (in-store vs. catalog) by analyzing their respective total revenue. This helps in understanding channel effectiveness, evaluating multi-channel strategy, and identifying which channel contributes more to overall revenue.", "complexity": "easy", "alternatives": ["We could refine this by joining with date dimensions to specify a particular time period, or segment the comparison by product categories, customer demographics, or geographic regions."], "sql_features": [], "label": 1}
{"nl": "What was the total sales amount from store sales compared to catalog sales in the last available period?", "sql": "SELECT p_promo_id, p_promo_name, p_cost, p_end_date_sk \nFROM promotion \nWHERE p_cost > 1000 \nORDER BY p_end_date_sk DESC \nLIMIT 5;", "label": 0, "tables": ["promotion"], "columns": ["promotion.p_end_date_sk", "promotion.p_promo_id", "promotion.p_cost", "promotion.p_promo_name"], "sql_features": ["filter", "order_by"], "complexity": "easy"}
{"nl": "What was the total sales amount from store sales compared to catalog sales in the last available period?", "sql": "SELECT dummy_col, 'Store Sales' as channel, SUM(ss_net_paid) as total_sales FROM store_sales GROUP BY 1 UNION ALL SELECT 'Catalog Sales' as channel, SUM(cs_net_paid) as total_sales FROM catalog_sales GROUP BY 1", "label": 0, "tables": ["catalog_sales", "store_sales"], "columns": [], "sql_features": [], "complexity": "easy"}
{"nl": "Which states have the highest number of customer addresses?", "paraphrases": ["# Paraphrases of \"Which states have the highest number of customer addresses?\"\n\n1. In which states do we find the greatest concentration of customer mailing addresses?\n\n2. What are the top states when ranked by customer address count?\n\n3. Which geographical states contain the most addresses in our customer database?"], "sql": "SELECT ca_state, COUNT(*) as address_count FROM customer_address GROUP BY ca_state ORDER BY address_count DESC", "tables": ["customer_address"], "columns": ["customer_address.ca_state"], "business_intent": "To identify the geographic distribution of customers by state, which helps in understanding market penetration, regional customer density, and potential areas for targeted marketing or expansion opportunities.", "complexity": "easy", "alternatives": ["SELECT ca_state, COUNT(*) as address_count FROM customer_address GROUP BY ca_state ORDER BY COUNT(*) DESC", "SELECT ca_state, COUNT(ca_address_sk) as address_count FROM customer_address GROUP BY ca_state ORDER BY address_count DESC"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "Which states have the highest number of customer addresses?", "sql": "WITH avg_images AS (\n  SELECT AVG(wp_image_count) AS avg_img_count\n  FROM web_page\n)\nSELECT \n  AVG(wp_image_count) AS average_images_per_page,\n  COUNT(CASE WHEN wp_image_count > avg_img_count THEN 1 END) AS pages_above_average\nFROM web_page, avg_images;", "label": 0, "tables": ["web_page"], "columns": [], "sql_features": ["join"], "complexity": "hard"}
{"nl": "Which states have the highest number of customer addresses?", "sql": "SELECT dummy_col, ca_state, COUNT(*) as address_count FROM customer_address GROUP BY ca_state ORDER BY address_count DESC", "label": 0, "tables": ["customer_address"], "columns": ["customer_address.ca_state"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What departments had catalog pages active during the morning hours (between 6 AM and 12 PM)?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Which departments maintained active catalog pages during the morning timeframe of 6 AM to 12 PM?\n\n2. Between 6 o'clock in the morning and noon, what departments had their catalog pages in an active state?\n\n3. Can you identify the departments whose catalog pages were operational during morning hours, specifically from 6 AM until 12 PM?"], "sql": "SELECT DISTINCT cp_department FROM catalog_page cp JOIN time_dim td ON (cp.cp_start_date_sk <= td.t_time_sk AND (cp.cp_end_date_sk >= td.t_time_sk OR cp.cp_end_date_sk IS NULL)) WHERE td.t_hour >= 6 AND td.t_hour < 12 AND td.t_am_pm = 'AM'", "tables": ["catalog_page", "time_dim"], "columns": [], "business_intent": "To identify which departments have catalog pages scheduled or active during morning business hours. This analysis can help with understanding departmental catalog publishing patterns and could inform decisions about timing of promotions or catalog releases.", "complexity": "medium", "alternatives": ["A simpler approach could focus only on the start dates rather than the full validity period, but would be less accurate: SELECT DISTINCT cp_department FROM catalog_page cp JOIN time_dim td ON cp.cp_start_date_sk = td.t_time_sk WHERE td.t_hour BETWEEN 6 AND 11 AND td.t_am_pm = 'AM'", "We could also filter by specific times of day using t_time instead of t_hour and t_am_pm if more precision was required"], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What departments had catalog pages active during the morning hours (between 6 AM and 12 PM)?", "sql": "SELECT AVG(inv.inv_quantity_on_hand) AS avg_quantity\nFROM inventory inv\nJOIN date_dim d ON inv.inv_date_sk = d.d_date_sk\nWHERE d.d_year = 2020 AND d.d_month = 1", "label": 0, "tables": ["date_dim", "inventory"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What departments had catalog pages active during the morning hours (between 6 AM and 12 PM)?", "sql": "SELECT DISTINCT dummy_col, cp_department FROM catalog_page cp JOIN time_dim td ON (cp.cp_start_date_sk <= td.t_time_sk AND (cp.cp_end_date_sk >= td.t_time_sk OR cp.cp_end_date_sk IS NULL)) WHERE td.t_hour >= 6 AND td.t_hour < 12 AND td.t_am_pm = 'AM'", "label": 0, "tables": ["catalog_page", "time_dim"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What are the different types of reasons stored in the reason table?", "paraphrases": ["# Paraphrased Questions\n\n1. What categories of reasons are maintained in the reason table?\n\n2. Can you list the various classifications of reasons that exist within the reason table?\n\n3. What distinct reason types are recorded in the reason table database?"], "sql": "SELECT DISTINCT r_reason_desc FROM reason ORDER BY r_reason_desc;", "tables": ["reason"], "columns": ["reason.r_reason_desc"], "business_intent": "To understand the complete set of standardized reasons that are used throughout the system for categorization purposes. This helps business users understand what reason codes are available for reporting and analysis.", "complexity": "easy", "alternatives": ["SELECT r_reason_id, r_reason_desc FROM reason ORDER BY r_reason_id;", "SELECT COUNT(DISTINCT r_reason_desc) FROM reason;"], "sql_features": ["order_by"], "label": 1}
{"nl": "What are the different types of reasons stored in the reason table?", "sql": "SELECT SUM(cr_return_quantity) AS total_returned_quantity FROM catalog_returns cr JOIN web_sales ws ON cr.cr_item_sk = ws.ws_item_sk AND cr.cr_order_number = ws.ws_order_number", "label": 0, "tables": ["catalog_returns", "web_sales"], "columns": [], "sql_features": ["join"], "complexity": "hard"}
{"nl": "What are the different types of reasons stored in the reason table?", "sql": "SELECT DISTINCT dummy_col, r_reason_desc FROM reason ORDER BY r_reason_desc;", "label": 0, "tables": ["reason"], "columns": ["reason.r_reason_desc"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "Which month had the highest total web sales revenue in the past year?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. In the previous year, which month generated the greatest revenue from web sales?\n\n2. Looking at web sales revenue over the last 12 months, which month recorded the highest total?\n\n3. During the past year, which month's online sales produced the maximum total revenue?"], "sql": "SELECT EXTRACT(MONTH FROM d.d_date) as month, SUM(ws_net_paid) as total_revenue FROM web_sales ws JOIN date_dim d ON ws.ws_sold_date_sk = d.d_date_sk WHERE d.d_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 1 YEAR) GROUP BY EXTRACT(MONTH FROM d.d_date) ORDER BY total_revenue DESC LIMIT 1", "tables": ["web_sales", "date_dim"], "columns": [], "business_intent": "Identify seasonal patterns in online sales revenue to optimize marketing strategies, inventory planning, and resource allocation throughout the year. Understanding which month generates the highest revenue helps businesses plan promotional campaigns and prepare for high-volume periods.", "complexity": "medium", "alternatives": ["We could analyze monthly web sales growth rates instead of absolute revenue to identify momentum in different periods", "We could compare monthly web sales against store sales to understand channel performance differences throughout the year"], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "Which month had the highest total web sales revenue in the past year?", "sql": "SELECT DISTINCT r_reason_desc FROM reason ORDER BY r_reason_desc;", "label": 0, "tables": ["reason"], "columns": ["reason.r_reason_desc"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "Which month had the highest total web sales revenue in the past year?", "sql": "SELECT dummy_col, EXTRACT(MONTH FROM d.d_date) as month, SUM(ws_net_paid) as total_revenue FROM web_sales ws JOIN date_dim d ON ws.ws_sold_date_sk = d.d_date_sk WHERE d.d_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 1 YEAR) GROUP BY EXTRACT(MONTH FROM d.d_date) ORDER BY total_revenue DESC LIMIT 1", "label": 0, "tables": ["web_sales", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average inventory quantity on hand across all warehouses?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Across all warehouse locations, what is the mean quantity of inventory currently being stored?\n\n2. What average amount of stock do we have available when considering all warehouses combined?\n\n3. If we calculate the typical inventory levels across our entire warehouse network, what quantity figure do we get?"], "sql": "SELECT AVG(inv_quantity_on_hand) AS average_inventory_quantity FROM inventory;", "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "business_intent": "To understand the overall inventory levels across the warehousing network, which helps in assessing stock adequacy, identifying potential overstocking or understocking situations, and establishing baseline metrics for inventory management.", "complexity": "easy", "alternatives": ["SELECT SUM(inv_quantity_on_hand)/COUNT(*) AS average_inventory FROM inventory;", "One could also segment this by date or warehouse to get more granular insights."], "sql_features": [], "label": 1}
{"nl": "What is the average inventory quantity on hand across all warehouses?", "sql": "SELECT AVG(wr_item_sk) AS avg_returned_quantity FROM web_returns;", "label": 0, "tables": ["web_returns"], "columns": ["web_returns.wr_item_sk"], "sql_features": [], "complexity": "easy"}
{"nl": "What is the average inventory quantity on hand across all warehouses?", "sql": "SELECT dummy_col, AVG(inv_quantity_on_hand) AS average_inventory_quantity FROM inventory;", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "sql_features": [], "complexity": "easy"}
{"nl": "Which web pages were created in January 2022 and what are their URLs?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Can you provide the URLs of web pages that were established during January 2022?\n\n2. What are the addresses of websites that were launched in January of 2022?\n\n3. For web pages developed in January 2022, could you list their corresponding URLs?"], "sql": "SELECT wp_web_page_id, wp_url FROM web_page WHERE wp_creation_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2022 AND d_month = 1)", "tables": ["web_page", "date_dim"], "columns": [], "business_intent": "To identify web pages created during a specific time period, which helps track content creation trends and analyze new pages added to the website during January 2022. This information could be useful for content audits, understanding website growth patterns, or evaluating team productivity for that month.", "complexity": "medium", "alternatives": ["The query assumes there's a date_dim table to join with. If not available, this query would need to be adjusted based on how dates are stored in the system.", "If we had access to other columns like wp_creation_date directly instead of wp_creation_date_sk, we could filter on that directly without needing a join."], "sql_features": ["filter", "subquery"], "label": 1}
{"nl": "Which web pages were created in January 2022 and what are their URLs?", "sql": "SELECT AVG(inv_quantity_on_hand) AS avg_inventory_quantity FROM inventory;", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "sql_features": [], "complexity": "easy"}
{"nl": "Which web pages were created in January 2022 and what are their URLs?", "sql": "SELECT dummy_col, wp_web_page_id, wp_url FROM web_page WHERE wp_creation_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2022 AND d_month = 1)", "label": 0, "tables": ["web_page", "date_dim"], "columns": [], "sql_features": ["filter", "subquery"], "complexity": "hard"}
{"nl": "What is the total number of catalog returns made by each customer in 2022?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How many catalog returns did each individual customer make throughout 2022?\n\n2. For each customer, what was the sum of all returns processed through the catalog in 2022?\n\n3. In 2022, can you provide the aggregate count of catalog returns on a per-customer basis?"], "sql": "SELECT c.c_customer_id, COUNT(cr.cr_item_sk) AS total_returns \nFROM catalog_returns cr \nJOIN customer c ON cr.cr_refunded_customer_sk = c.c_customer_sk \nWHERE cr.cr_returned_date_sk BETWEEN 2452641 AND 2453005 \nGROUP BY c.c_customer_id \nORDER BY total_returns DESC", "tables": ["catalog_returns", "customer"], "columns": [], "business_intent": "To analyze customer return behavior by identifying which customers are making the most returns. This helps in understanding return patterns and potentially identifying customers with high return rates who might need attention or intervention.", "complexity": "medium", "alternatives": ["We could join with a date dimension table to better filter by year instead of using date surrogate key ranges. We could also count distinct order IDs instead of items if we wanted to count return transactions rather than individual items."], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What is the total number of catalog returns made by each customer in 2022?", "sql": "SELECT ib_income_band_sk, ib_lower_bound, ib_upper_bound FROM income_band WHERE ib_lower_bound > 50000 ORDER BY ib_lower_bound", "label": 0, "tables": ["income_band"], "columns": ["income_band.ib_lower_bound", "income_band.ib_upper_bound", "income_band.ib_income_band_sk"], "sql_features": ["filter", "order_by"], "complexity": "easy"}
{"nl": "What is the total number of catalog returns made by each customer in 2022?", "sql": "SELECT dummy_col, c.c_customer_id, COUNT(cr.cr_item_sk) AS total_returns \nFROM catalog_returns cr \nJOIN customer c ON cr.cr_refunded_customer_sk = c.c_customer_sk \nWHERE cr.cr_returned_date_sk BETWEEN 2452641 AND 2453005 \nGROUP BY c.c_customer_id \nORDER BY total_returns DESC", "label": 0, "tables": ["catalog_returns", "customer"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "Which warehouse has the largest square footage?", "sql": "SELECT dummy_col, AVG(ss_sales_price) as avg_sales_amount FROM store_sales JOIN time_dim ON ss_sold_time_sk = t_time_sk WHERE t_hour >= 14 AND t_hour < 16", "label": 0, "tables": ["time_dim", "store_sales"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What are the income bands with a lower bound greater than 50000?", "paraphrases": ["# Paraphrased Questions\n\n1. Which income categories have minimum thresholds exceeding $50,000?\n\n2. Can you identify the income ranges that start above $50,000?\n\n3. What income brackets begin at amounts greater than $50,000?"], "sql": "SELECT * FROM income_band WHERE ib_lower_bound > 50000", "tables": ["income_band"], "columns": ["income_band.ib_lower_bound"], "business_intent": "To identify higher income segments for potential targeted marketing, premium product offerings, or demographic analysis of wealthier customer segments.", "complexity": "easy", "alternatives": ["SELECT ib_income_band_sk, ib_lower_bound, ib_upper_bound FROM income_band WHERE ib_lower_bound > 50000 ORDER BY ib_lower_bound", "SELECT * FROM income_band WHERE ib_lower_bound > 50000 ORDER BY ib_income_band_sk"], "sql_features": ["filter"], "label": 1}
{"nl": "What are the income bands with a lower bound greater than 50000?", "sql": "SELECT dummy_col, i.i_item_id, i.i_item_desc, SUM(sr.sr_return_quantity) as total_return_quantity FROM store_returns sr JOIN item i ON sr.sr_item_sk = i.i_item_sk GROUP BY i.i_item_id, i.i_item_desc ORDER BY total_return_quantity DESC LIMIT 3;", "label": 0, "tables": ["store_returns", "item"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the income bands with a lower bound greater than 50000?", "sql": "SELECT dummy_col, * FROM income_band WHERE ib_lower_bound > 50000", "label": 0, "tables": ["income_band"], "columns": ["income_band.ib_lower_bound"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "How many websites and stores are active in our database?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. What is the total count of websites and retail locations currently operational in our database?\n\n2. Could you tell me the number of active websites and stores that exist in our database system?\n\n3. How many active entries do we have in our database for both websites and physical store locations?"], "sql": "SELECT 'Websites' as type, COUNT(*) as count FROM web_site WHERE web_rec_end_date IS NULL UNION ALL SELECT 'Stores' as type, COUNT(*) as count FROM store WHERE s_rec_end_date IS NULL", "tables": ["web_site", "store"], "columns": [], "business_intent": "To understand the current scale of the business operations by determining how many active digital (websites) and physical (stores) retail channels exist. This information helps management assess the company's footprint and potentially make resource allocation decisions.", "complexity": "easy", "alternatives": ["We could also use CURRENT_DATE to check if web_rec_end_date > CURRENT_DATE and s_rec_end_date > CURRENT_DATE for a stricter definition of 'active'", "Could break this into two separate queries and combine results in the application layer instead of using UNION ALL"], "sql_features": [], "label": 1}
{"nl": "How many websites and stores are active in our database?", "sql": "SELECT web_site_id, web_name FROM web_site WHERE web_rec_start_date <= '2022-01-31' AND (web_rec_end_date IS NULL OR web_rec_end_date >= '2022-01-01')", "label": 0, "tables": ["web_site"], "columns": ["web_site.web_site_id", "web_site.web_rec_start_date", "web_site.web_name", "web_site.web_rec_end_date"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "How many websites and stores are active in our database?", "sql": "SELECT dummy_col, 'Websites' as type, COUNT(*) as count FROM web_site WHERE web_rec_end_date IS NULL UNION ALL SELECT 'Stores' as type, COUNT(*) as count FROM store WHERE s_rec_end_date IS NULL", "label": 0, "tables": ["web_site", "store"], "columns": [], "sql_features": [], "complexity": "easy"}
{"nl": "What are all the unique reason descriptions in the reason table?", "sql": "SELECT dummy_col, s_store_id, s_store_name FROM store JOIN date_dim ON s_closed_date_sk = d_date_sk WHERE d_date > '2000-01-01'", "label": 0, "tables": ["date_dim", "store"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What was the total dollar amount of items sold in stores that were later returned through the web channel?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. What is the cumulative monetary value of products purchased in physical stores but subsequently returned via online channels?\n\n2. How much revenue, in dollars, came from merchandise bought at retail locations that was later sent back through the website?\n\n3. Calculate the total financial sum of goods initially sold in brick-and-mortar stores that customers ultimately returned through web-based methods."], "sql": "SELECT SUM(ss_net_paid) as total_returned_amount FROM store_sales JOIN web_returns ON ss_item_sk = wr_item_sk AND ss_customer_sk = wr_refunded_customer_sk", "tables": ["web_returns", "store_sales"], "columns": [], "business_intent": "To measure the financial impact of cross-channel returns by identifying how much revenue is affected when items purchased in physical stores are returned through the online channel. This helps understand customer return behavior across channels and quantify the associated financial implications.", "complexity": "medium", "alternatives": ["Could calculate using different metrics like ss_net_profit instead of ss_net_paid to understand profit impact rather than revenue impact", "Could add additional time constraints to analyze seasonal patterns or trends over specific periods"], "sql_features": ["join"], "label": 1}
{"nl": "What was the total dollar amount of items sold in stores that were later returned through the web channel?", "sql": "SELECT dummy_col, p_promo_id, p_promo_name, p_cost, p_end_date_sk \nFROM promotion \nWHERE p_cost > 1000 \nORDER BY p_end_date_sk DESC \nLIMIT 5;", "label": 0, "tables": ["promotion"], "columns": ["promotion.p_promo_id", "promotion.p_cost", "promotion.p_end_date_sk", "promotion.p_promo_name"], "sql_features": ["filter", "order_by"], "complexity": "easy"}
{"nl": "What was the total dollar amount of items sold in stores that were later returned through the web channel?", "sql": "SELECT dummy_col, SUM(ss_net_paid) as total_returned_amount FROM store_sales JOIN web_returns ON ss_item_sk = wr_item_sk AND ss_customer_sk = wr_refunded_customer_sk", "label": 0, "tables": ["web_returns", "store_sales"], "columns": [], "sql_features": ["join"], "complexity": "hard"}
{"nl": "What are the different types of shipping modes and their associated carriers?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Could you explain the various shipping methods available and which carriers provide each type of service?\n\n2. What shipping options exist in terms of modes of transportation, and which carrier companies are aligned with each method?\n\n3. Can you describe the different ways items can be shipped and identify which logistics companies handle each shipping mode?"], "sql": "SELECT sm_type, sm_carrier FROM ship_mode ORDER BY sm_type, sm_carrier", "tables": ["ship_mode"], "columns": ["ship_mode.sm_carrier", "ship_mode.sm_type"], "business_intent": "To understand the variety of shipping options available in the business and which carriers provide which types of shipping services. This information helps operations teams manage logistics relationships and assists sales teams in offering appropriate shipping options to customers.", "complexity": "easy", "alternatives": ["SELECT sm_type, sm_carrier, sm_code FROM ship_mode ORDER BY sm_type, sm_carrier", "SELECT DISTINCT sm_type, sm_carrier FROM ship_mode ORDER BY sm_type, sm_carrier"], "sql_features": ["order_by"], "label": 1}
{"nl": "What are the different types of shipping modes and their associated carriers?", "sql": "SELECT dummy_col, i_item_id, i_item_desc, i_current_price FROM item WHERE i_category = 'Books' ORDER BY i_current_price DESC LIMIT 5", "label": 0, "tables": ["item"], "columns": ["item.i_current_price", "item.i_category", "item.i_item_id", "item.i_item_desc"], "sql_features": ["filter", "order_by"], "complexity": "easy"}
{"nl": "What are the different types of shipping modes and their associated carriers?", "sql": "SELECT dummy_col, sm_type, sm_carrier FROM ship_mode ORDER BY sm_type, sm_carrier", "label": 0, "tables": ["ship_mode"], "columns": ["ship_mode.sm_carrier", "ship_mode.sm_type"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What is the total sales amount for each store in 2002?", "paraphrases": ["# Paraphrases of \"What is the total sales amount for each store in 2002?\"\n\n1. For the year 2002, what was the total revenue generated by each individual store?\n\n2. How much did each store sell in total during 2002?\n\n3. Can you provide a breakdown of each store's aggregate sales figures for the 2002 calendar year?"], "sql": "SELECT s.s_store_id, SUM(ss.ss_net_paid) as total_sales\nFROM store_sales ss\nJOIN store s ON ss.ss_store_sk = s.s_store_sk\nWHERE EXTRACT(YEAR FROM ss.ss_sold_date_sk::DATE) = 2002\nGROUP BY s.s_store_id\nORDER BY total_sales DESC", "tables": ["store", "store_sales"], "columns": [], "business_intent": "To analyze store performance by comparing total sales revenue across different store locations for a specific year. This helps in identifying top-performing and underperforming stores, which can inform business decisions related to resource allocation, store expansion, or potential closures.", "complexity": "medium", "alternatives": ["We could also analyze average transaction value per store by using AVG(ss_net_paid) instead of SUM, or we could break this down further by quarter or month to see seasonal trends per store."], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What is the total sales amount for each store in 2002?", "sql": "SELECT dummy_col, inv_warehouse_sk, AVG(inv_quantity_on_hand) AS avg_quantity \nFROM inventory \nGROUP BY inv_warehouse_sk \nORDER BY inv_warehouse_sk;", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand", "inventory.inv_warehouse_sk"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the total sales amount for each store in 2002?", "sql": "SELECT dummy_col, s.s_store_id, SUM(ss.ss_net_paid) as total_sales\nFROM store_sales ss\nJOIN store s ON ss.ss_store_sk = s.s_store_sk\nWHERE EXTRACT(YEAR FROM ss.ss_sold_date_sk::DATE) = 2002\nGROUP BY s.s_store_id\nORDER BY total_sales DESC", "label": 0, "tables": ["store", "store_sales"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are all the shipping modes offered by the carrier UPS?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Could you list all the different shipping methods available through UPS?\n\n2. What delivery options does UPS provide as a carrier?\n\n3. Can you enumerate the complete range of transportation modes that UPS offers for shipping?"], "sql": "SELECT sm_ship_mode_id, sm_type, sm_code FROM ship_mode WHERE sm_carrier = 'UPS'", "tables": ["ship_mode"], "columns": ["ship_mode.sm_carrier", "ship_mode.sm_type", "ship_mode.sm_ship_mode_id", "ship_mode.sm_code"], "business_intent": "To identify all shipping options available through a specific carrier (UPS) to assist with logistics planning, customer service information, or shipping cost analysis.", "complexity": "easy", "alternatives": ["SELECT * FROM ship_mode WHERE sm_carrier = 'UPS'", "SELECT sm_ship_mode_id, sm_type, sm_code, sm_contract FROM ship_mode WHERE sm_carrier LIKE '%UPS%'"], "sql_features": ["filter"], "label": 1}
{"nl": "What are all the shipping modes offered by the carrier UPS?", "sql": "SELECT ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound, COUNT(ws.ws_bill_customer_sk) AS transaction_count FROM web_sales ws JOIN income_band ib ON (ws.ws_bill_cdemo_sk = ib.ib_income_band_sk) GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound;", "label": 0, "tables": ["income_band", "web_sales"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are all the shipping modes offered by the carrier UPS?", "sql": "SELECT dummy_col, sm_ship_mode_id, sm_type, sm_code FROM ship_mode WHERE sm_carrier = 'UPS'", "label": 0, "tables": ["ship_mode"], "columns": ["ship_mode.sm_ship_mode_id", "ship_mode.sm_type", "ship_mode.sm_code", "ship_mode.sm_carrier"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What are all the different types of shipping modes in our system?", "paraphrases": ["# Paraphrased Versions of the Original Question\n\n1. Could you provide a complete list of the shipping modes available in our system?\n\n2. What shipping method options does our system currently offer?\n\n3. Can you enumerate all shipping mode categories that exist within our system?"], "sql": "SELECT DISTINCT sm_type FROM ship_mode ORDER BY sm_type;", "tables": ["ship_mode"], "columns": ["ship_mode.sm_type"], "business_intent": "To understand the different categories of shipping methods available in the business, which can help in analyzing shipping options, planning logistics strategies, or evaluating the diversity of shipping services offered to customers.", "complexity": "easy", "alternatives": ["SELECT sm_type FROM ship_mode GROUP BY sm_type ORDER BY sm_type;", "SELECT sm_type FROM ship_mode WHERE sm_type IS NOT NULL ORDER BY sm_type;"], "sql_features": ["order_by"], "label": 1}
{"nl": "What are all the different types of shipping modes in our system?", "sql": "SELECT AVG(inv.inv_quantity_on_hand) AS avg_quantity\nFROM inventory inv\nJOIN date_dim d ON inv.inv_date_sk = d.d_date_sk\nWHERE d.d_year = 2020 AND d.d_month = 1", "label": 0, "tables": ["date_dim", "inventory"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What are all the different types of shipping modes in our system?", "sql": "SELECT DISTINCT dummy_col, sm_type FROM ship_mode ORDER BY sm_type;", "label": 0, "tables": ["ship_mode"], "columns": ["ship_mode.sm_type"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What is the total refund amount for web returns by state in California?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How much money was refunded in total for online returns specifically in the state of California?\n\n2. For web-based product returns in California, what is the aggregate refund value?\n\n3. What sum of refunds was issued for items returned online by customers in the California state region?"], "sql": "SELECT SUM(wr_refunded_cash + wr_reversed_charge + wr_account_credit) AS total_refund_amount FROM web_returns JOIN customer_address ON wr_refunded_cdemo_sk = ca_address_sk WHERE ca_state = 'CA'", "tables": ["web_returns", "customer_address"], "columns": [], "business_intent": "To analyze the financial impact of web returns specifically from California customers, which helps in understanding regional return patterns and associated refund costs. This information can inform regional marketing strategies, return policy adjustments, or product quality improvements targeted at California customers.", "complexity": "medium", "alternatives": ["The query could be modified to group by city within California to provide more granular geographic analysis of returns", "Additional time dimensions could be added to analyze California returns over specific periods"], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What is the total refund amount for web returns by state in California?", "sql": "SELECT dummy_col, r_reason_id, r_reason_desc FROM reason ORDER BY r_reason_id", "label": 0, "tables": ["reason"], "columns": ["reason.r_reason_id", "reason.r_reason_desc"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What is the total refund amount for web returns by state in California?", "sql": "SELECT dummy_col, SUM(wr_refunded_cash + wr_reversed_charge + wr_account_credit) AS total_refund_amount FROM web_returns JOIN customer_address ON wr_refunded_cdemo_sk = ca_address_sk WHERE ca_state = 'CA'", "label": 0, "tables": ["web_returns", "customer_address"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "Which promotions generated more than $10,000 in sales?", "paraphrases": ["# Paraphrases of \"Which promotions generated more than $10,000 in sales?\"\n\n1. Can you identify the promotional campaigns that exceeded $10,000 in revenue?\n\n2. What marketing promotions produced sales figures greater than $10,000?\n\n3. Which advertising initiatives resulted in sales surpassing the $10,000 threshold?"], "sql": "SELECT p.p_promo_id, p.p_promo_name, SUM(ss.ss_sales_price) AS total_sales FROM store_sales ss JOIN promotion p ON ss.ss_promo_sk = p.p_promo_sk GROUP BY p.p_promo_id, p.p_promo_name HAVING SUM(ss.ss_sales_price) > 10000 ORDER BY total_sales DESC", "tables": ["promotion", "store_sales"], "columns": [], "business_intent": "To identify high-performing promotional campaigns based on sales revenue, which helps marketing teams evaluate promotion effectiveness and ROI. This analysis supports decisions about which types of promotions to continue, expand, or discontinue.", "complexity": "medium", "alternatives": ["We could also analyze this by calculating the total net profit generated by each promotion instead of just sales price, or by looking at the promotion effectiveness relative to its cost using p_cost."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "Which promotions generated more than $10,000 in sales?", "sql": "SELECT cs_bill_customer_sk, SUM(cs_quantity) as total_quantity_returned FROM catalog_sales WHERE cs_bill_customer_sk IS NOT NULL GROUP BY cs_bill_customer_sk ORDER BY total_quantity_returned DESC LIMIT 1;", "label": 0, "tables": ["catalog_sales"], "columns": ["catalog_sales.cs_bill_customer_sk", "catalog_sales.cs_quantity"], "sql_features": ["filter", "group_by", "order_by"], "complexity": "medium"}
{"nl": "Which promotions generated more than $10,000 in sales?", "sql": "SELECT dummy_col, p.p_promo_id, p.p_promo_name, SUM(ss.ss_sales_price) AS total_sales FROM store_sales ss JOIN promotion p ON ss.ss_promo_sk = p.p_promo_sk GROUP BY p.p_promo_id, p.p_promo_name HAVING SUM(ss.ss_sales_price) > 10000 ORDER BY total_sales DESC", "label": 0, "tables": ["promotion", "store_sales"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the top 5 states with the highest number of customer addresses?", "sql": "SELECT SUM(inv_quantity_on_hand) AS total_inventory FROM inventory WHERE inv_quantity_on_hand > 0", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What is the average inventory quantity on hand across all warehouses?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Across all warehouse locations, what is the mean quantity of inventory currently being stored?\n\n2. What's the typical amount of stock maintained when considering the inventory levels at every warehouse?\n\n3. If we look at all our warehouses collectively, what average number of items do we have in inventory?"], "sql": "SELECT AVG(inv_quantity_on_hand) AS avg_quantity FROM inventory;", "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "business_intent": "To determine the overall average inventory level across all warehouses, which helps management understand the typical stock level maintained. This metric is useful for inventory planning, identifying potential overstocking or understocking situations, and establishing baseline inventory targets.", "complexity": "easy", "alternatives": ["SELECT ROUND(AVG(inv_quantity_on_hand), 2) AS avg_quantity FROM inventory;", "SELECT SUM(inv_quantity_on_hand)/COUNT(*) AS avg_quantity FROM inventory;"], "sql_features": [], "label": 1}
{"nl": "What is the average inventory quantity on hand across all warehouses?", "sql": "SELECT SUM(wr_refunded_cash + wr_reversed_charge + wr_account_credit) AS total_refund_amount FROM web_returns JOIN customer_address ON wr_refunded_cdemo_sk = ca_address_sk WHERE ca_state = 'CA'", "label": 0, "tables": ["web_returns", "customer_address"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the average inventory quantity on hand across all warehouses?", "sql": "SELECT dummy_col, AVG(inv_quantity_on_hand) AS avg_quantity FROM inventory;", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "sql_features": [], "complexity": "easy"}
{"nl": "List all the reasons in the database with their descriptions", "paraphrases": ["# Paraphrased Versions\n\n1. Display all reasons stored in the database along with their corresponding descriptions.\n\n2. Show the complete set of reasons from the database, including the description for each one.\n\n3. Provide a comprehensive list of all reasons contained in the database and their associated descriptive information."], "sql": "SELECT r_reason_id, r_reason_desc FROM reason ORDER BY r_reason_id", "tables": ["reason"], "columns": ["reason.r_reason_id", "reason.r_reason_desc"], "business_intent": "To obtain a complete listing of all reason codes and their descriptions for reference purposes. This would help business users understand the different reason categories available in the system for reporting and analysis.", "complexity": "easy", "alternatives": ["SELECT * FROM reason ORDER BY r_reason_sk", "SELECT r_reason_sk, r_reason_id, r_reason_desc FROM reason"], "sql_features": ["order_by"], "label": 1}
{"nl": "List all the reasons in the database with their descriptions", "sql": "SELECT w_warehouse_name FROM warehouse WHERE w_warehouse_sq_ft > 500000", "label": 0, "tables": ["warehouse"], "columns": ["warehouse.w_warehouse_name", "warehouse.w_warehouse_sq_ft"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "List all the reasons in the database with their descriptions", "sql": "SELECT dummy_col, r_reason_id, r_reason_desc FROM reason ORDER BY r_reason_id", "label": 0, "tables": ["reason"], "columns": ["reason.r_reason_id", "reason.r_reason_desc"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What is the distribution of education status among customers with high purchase estimates (greater than 7000)?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Among customers who have purchase estimates exceeding 7000, how are the different education levels distributed?\n\n2. For clients with high-value purchase estimates (over 7000), what is the breakdown of their educational backgrounds?\n\n3. How do education qualifications vary across the customer segment whose purchase estimates are in the high range (>7000)?"], "sql": "SELECT cd_education_status, COUNT(*) as customer_count, ROUND(COUNT(*) * 100.0 / SUM(COUNT(*)) OVER(), 2) as percentage FROM customer_demographics WHERE cd_purchase_estimate > 7000 GROUP BY cd_education_status ORDER BY customer_count DESC", "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_purchase_estimate"], "business_intent": "To analyze the educational profile of high-value customers to better understand the relationship between education level and spending potential. This insight can help with customer segmentation, targeted marketing campaigns, and strategic planning for customer acquisition.", "complexity": "medium", "alternatives": ["We could also join this with household_demographics to see if high purchase estimates correlate with other household factors like income band or vehicle count.", "Another approach could be to compare education status distributions across different purchase estimate ranges to identify trends."], "sql_features": ["filter", "group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of education status among customers with high purchase estimates (greater than 7000)?", "sql": "SELECT cp_department, COUNT(*) AS page_count FROM catalog_page WHERE cp_start_date_sk <= (SELECT d_date_sk FROM date_dim WHERE d_date = '2002-06-30') AND (cp_end_date_sk IS NULL OR cp_end_date_sk >= (SELECT d_date_sk FROM date_dim WHERE d_date = '2002-01-01')) GROUP BY cp_department ORDER BY page_count DESC", "label": 0, "tables": ["date_dim", "catalog_page"], "columns": [], "sql_features": ["filter", "group_by", "order_by", "subquery"], "complexity": "hard"}
{"nl": "What is the distribution of education status among customers with high purchase estimates (greater than 7000)?", "sql": "SELECT dummy_col, cd_education_status, COUNT(*) as customer_count, ROUND(COUNT(*) * 100.0 / SUM(COUNT(*)) OVER(), 2) as percentage FROM customer_demographics WHERE cd_purchase_estimate > 7000 GROUP BY cd_education_status ORDER BY customer_count DESC", "label": 0, "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_purchase_estimate"], "sql_features": ["filter", "group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the average number of vehicles owned by households across different buying potential categories?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Across various purchasing power segments, what is the mean number of vehicles per household?\n\n2. How many vehicles, on average, do households possess within each economic capability classification?\n\n3. What is the typical vehicle ownership count for homes categorized by different levels of financial capacity?"], "sql": "SELECT hd_buy_potential, AVG(hd_vehicle_count) as avg_vehicles\nFROM household_demographics\nGROUP BY hd_buy_potential\nORDER BY hd_buy_potential;", "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential", "household_demographics.hd_vehicle_count"], "business_intent": "To analyze the relationship between household buying potential and vehicle ownership, which helps in understanding consumer behavior patterns, transportation asset distribution across economic segments, and potential correlation between purchasing power and vehicle ownership. This insight can inform marketing strategies, product offerings, and customer segmentation.", "complexity": "easy", "alternatives": ["SELECT hd_buy_potential, AVG(hd_vehicle_count) as avg_vehicles, COUNT(*) as household_count FROM household_demographics GROUP BY hd_buy_potential ORDER BY avg_vehicles DESC;", "We could also analyze vehicle count distribution with percentiles or include income bands for a more comprehensive analysis."], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What is the average number of vehicles owned by households across different buying potential categories?", "sql": "SELECT cc_call_center_id, cc_name FROM call_center WHERE cc_closed_date_sk IS NULL AND current_date BETWEEN cc_rec_start_date AND COALESCE(cc_rec_end_date, '9999-12-31')", "label": 0, "tables": ["call_center"], "columns": ["call_center.cc_rec_end_date", "call_center.cc_rec_start_date", "call_center.cc_call_center_id", "call_center.cc_closed_date_sk", "call_center.cc_name"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What is the average number of vehicles owned by households across different buying potential categories?", "sql": "SELECT dummy_col, hd_buy_potential, AVG(hd_vehicle_count) as avg_vehicles\nFROM household_demographics\nGROUP BY hd_buy_potential\nORDER BY hd_buy_potential;", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential", "household_demographics.hd_vehicle_count"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What are the top 5 cities with the highest number of returned items?", "paraphrases": ["# Paraphrased Versions of the Original Question\n\n1. Which five cities have the greatest quantity of product returns?\n\n2. Can you identify the 5 urban areas where the volume of returned merchandise is highest?\n\n3. Which metropolitan regions rank in the top 5 for item returns based on total count?"], "sql": "SELECT ca.ca_city, SUM(sr.sr_return_quantity) as total_returns FROM store_returns sr JOIN customer_address ca ON sr.sr_addr_sk = ca.ca_address_sk GROUP BY ca.ca_city ORDER BY total_returns DESC LIMIT 5", "tables": ["store_returns", "customer_address"], "columns": [], "business_intent": "To identify geographic hotspots for product returns which can help in understanding regional return patterns. This information can guide targeted strategies to reduce returns in high-return areas, improve customer satisfaction regionally, or identify potential issues with regional distribution or sales approaches.", "complexity": "medium", "alternatives": ["Instead of counting by quantity returned, we could count by number of return transactions per city, or measure by the monetary value of returns using sr_return_amt"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What are the top 5 cities with the highest number of returned items?", "sql": "SELECT dummy_col, i.i_category, SUM(ws.ws_net_paid) as total_sales FROM web_sales ws JOIN item i ON ws.ws_item_sk = i.i_item_sk GROUP BY i.i_category ORDER BY total_sales DESC", "label": 0, "tables": ["web_sales", "item"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the top 5 cities with the highest number of returned items?", "sql": "SELECT dummy_col, ca.ca_city, SUM(sr.sr_return_quantity) as total_returns FROM store_returns sr JOIN customer_address ca ON sr.sr_addr_sk = ca.ca_address_sk GROUP BY ca.ca_city ORDER BY total_returns DESC LIMIT 5", "label": 0, "tables": ["store_returns", "customer_address"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of customers by gender across different education levels?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How are male and female customers distributed among the various education levels?\n\n2. Across different educational backgrounds, what is the gender breakdown of customers?\n\n3. What percentage of customers at each education level are men versus women?"], "sql": "SELECT cd_gender, cd_education_status, COUNT(*) as customer_count FROM customer_demographics GROUP BY cd_gender, cd_education_status ORDER BY cd_gender, cd_education_status", "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_gender"], "business_intent": "To understand customer demographic distribution across gender and education levels, which can help in targeted marketing campaigns, product development, and customer segmentation strategies. This analysis provides insights into the educational profile of customers by gender, enabling more personalized approaches to different customer segments.", "complexity": "easy", "alternatives": ["SELECT cd_education_status, cd_gender, COUNT(*) FROM customer_demographics GROUP BY cd_education_status, cd_gender ORDER BY cd_education_status, cd_gender", "SELECT cd_gender, cd_education_status, COUNT(*) as count, ROUND(COUNT(*) * 100.0 / SUM(COUNT(*)) OVER(), 2) as percentage FROM customer_demographics GROUP BY cd_gender, cd_education_status ORDER BY cd_gender, cd_education_status"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of customers by gender across different education levels?", "sql": "SELECT dummy_col, sm_ship_mode_id, sm_type, sm_code FROM ship_mode WHERE sm_carrier = 'UPS'", "label": 0, "tables": ["ship_mode"], "columns": ["ship_mode.sm_ship_mode_id", "ship_mode.sm_type", "ship_mode.sm_code", "ship_mode.sm_carrier"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What is the distribution of customers by gender across different education levels?", "sql": "SELECT dummy_col, cd_gender, cd_education_status, COUNT(*) as customer_count FROM customer_demographics GROUP BY cd_gender, cd_education_status ORDER BY cd_gender, cd_education_status", "label": 0, "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_gender"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What are the average inventory quantities for each warehouse, considering only active call centers?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. For warehouses associated with operational call centers, what is the mean number of items kept in stock?\n\n2. Looking exclusively at warehouses linked to functioning call centers, what are the average stock levels maintained at each location?\n\n3. What is the typical inventory volume per warehouse when restricting the analysis to only those that support active call center operations?"], "sql": "SELECT cc.cc_call_center_id, inv.inv_warehouse_sk, AVG(inv.inv_quantity_on_hand) as avg_quantity\nFROM inventory inv\nJOIN call_center cc ON inv.inv_warehouse_sk = cc.cc_call_center_sk\nWHERE cc.cc_closed_date_sk IS NULL\nGROUP BY cc.cc_call_center_id, inv.inv_warehouse_sk\nORDER BY avg_quantity DESC;", "tables": ["inventory", "call_center"], "columns": [], "business_intent": "To analyze inventory distribution across active call centers to optimize stock management and identify potential areas for inventory rebalancing. This helps operations teams understand which active facilities have higher or lower average inventory levels.", "complexity": "medium", "alternatives": ["We could use a different approach by joining through date dimension tables to check for active status based on current date rather than NULL closed date.", "We could enhance this by including time-based analysis to see how inventory levels at active call centers change over different periods."], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What are the average inventory quantities for each warehouse, considering only active call centers?", "sql": "SELECT dummy_col, AVG(inv_quantity_on_hand) as avg_quantity FROM inventory", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "sql_features": [], "complexity": "easy"}
{"nl": "What are the average inventory quantities for each warehouse, considering only active call centers?", "sql": "SELECT dummy_col, cc.cc_call_center_id, inv.inv_warehouse_sk, AVG(inv.inv_quantity_on_hand) as avg_quantity\nFROM inventory inv\nJOIN call_center cc ON inv.inv_warehouse_sk = cc.cc_call_center_sk\nWHERE cc.cc_closed_date_sk IS NULL\nGROUP BY cc.cc_call_center_id, inv.inv_warehouse_sk\nORDER BY avg_quantity DESC;", "label": 0, "tables": ["inventory", "call_center"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the average number of dependents and vehicles owned by households in the system?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How many dependents and vehicles, on average, do households in the system have?\n\n2. What is the mean number of dependents per household in the system, and what is the mean number of vehicles owned per household?\n\n3. On average, how many dependents do households in the system have, and how many vehicles do they typically own?"], "sql": "SELECT AVG(hd_dep_count) AS avg_dependents, AVG(hd_vehicle_count) AS avg_vehicles FROM household_demographics", "tables": ["household_demographics"], "columns": ["household_demographics.hd_dep_count", "household_demographics.hd_vehicle_count"], "business_intent": "To understand the average household composition in terms of dependents and vehicle ownership, which can inform marketing strategies, product development, or service offerings targeted at typical households.", "complexity": "easy", "alternatives": ["SELECT ROUND(AVG(hd_dep_count), 2) AS avg_dependents, ROUND(AVG(hd_vehicle_count), 2) AS avg_vehicles FROM household_demographics", "SELECT AVG(CAST(hd_dep_count AS FLOAT)) AS avg_dependents, AVG(CAST(hd_vehicle_count AS FLOAT)) AS avg_vehicles FROM household_demographics WHERE hd_vehicle_count >= 0"], "sql_features": [], "label": 1}
{"nl": "What are the average number of dependents and vehicles owned by households in the system?", "sql": "SELECT 'Warehouse' AS facility_type, AVG(w_warehouse_sq_ft) AS avg_square_footage FROM warehouse UNION ALL SELECT 'Call Center' AS facility_type, AVG(cc_sq_ft) AS avg_square_footage FROM call_center", "label": 0, "tables": ["warehouse", "call_center"], "columns": [], "sql_features": [], "complexity": "easy"}
{"nl": "What are the average number of dependents and vehicles owned by households in the system?", "sql": "SELECT dummy_col, AVG(hd_dep_count) AS avg_dependents, AVG(hd_vehicle_count) AS avg_vehicles FROM household_demographics", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_dep_count", "household_demographics.hd_vehicle_count"], "sql_features": [], "complexity": "easy"}
{"nl": "What are the descriptions of all reasons in the database?", "paraphrases": ["# Paraphrases of \"What are the descriptions of all reasons in the database?\"\n\n1. Could you provide the full details for each reason stored in the database?\n\n2. Please list all the explanations associated with every reason that exists in the database.\n\n3. I need to see the complete set of descriptions that correspond to all reasons contained within the database."], "sql": "SELECT r_reason_desc FROM reason ORDER BY r_reason_sk", "tables": ["reason"], "columns": ["reason.r_reason_sk", "reason.r_reason_desc"], "business_intent": "To understand the complete set of standardized reasons used throughout the organization. This helps in reporting consistency and ensures users are aware of all possible reason categories available for classification purposes.", "complexity": "easy", "alternatives": ["SELECT r_reason_id, r_reason_desc FROM reason ORDER BY r_reason_id", "SELECT * FROM reason ORDER BY r_reason_desc"], "sql_features": ["order_by"], "label": 1}
{"nl": "What are the descriptions of all reasons in the database?", "sql": "SELECT dummy_col, d.d_day_name, SUM(wr.wr_return_amt) as total_return_amount FROM web_returns wr JOIN date_dim d ON wr.wr_returned_date_sk = d.d_date_sk WHERE d.d_year = 2002 GROUP BY d.d_day_name ORDER BY total_return_amount DESC", "label": 0, "tables": ["web_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the descriptions of all reasons in the database?", "sql": "SELECT dummy_col, r_reason_desc FROM reason ORDER BY r_reason_sk", "label": 0, "tables": ["reason"], "columns": ["reason.r_reason_sk", "reason.r_reason_desc"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What is the distribution of customer educational status for customers with high credit ratings?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How are customers with excellent credit scores distributed across different education levels?\n\n2. Among clients who maintain high credit ratings, what is the breakdown of their educational backgrounds?\n\n3. For individuals with superior credit standings, what pattern can be observed in their educational attainment levels?"], "sql": "SELECT cd_education_status, COUNT(*) as customer_count FROM customer_demographics WHERE cd_credit_rating IN ('Good', 'Excellent') GROUP BY cd_education_status ORDER BY customer_count DESC", "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_credit_rating"], "business_intent": "To analyze the correlation between educational background and credit worthiness among customers, which can inform marketing strategies, credit offers, and customer segmentation. This insight helps understand if higher education levels correlate with better credit ratings.", "complexity": "easy", "alternatives": ["Could also include additional demographic factors like marital status or gender to create a more nuanced analysis", "Could analyze the average purchase estimate by education level for customers with high credit ratings to identify high-value segments"], "sql_features": ["filter", "group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of customer educational status for customers with high credit ratings?", "sql": "SELECT dummy_col, cc_name, cc_closed_date_sk FROM call_center WHERE cc_closed_date_sk IS NOT NULL", "label": 0, "tables": ["call_center"], "columns": ["call_center.cc_closed_date_sk", "call_center.cc_name"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What is the distribution of customer educational status for customers with high credit ratings?", "sql": "SELECT dummy_col, cd_education_status, COUNT(*) as customer_count FROM customer_demographics WHERE cd_credit_rating IN ('Good', 'Excellent') GROUP BY cd_education_status ORDER BY customer_count DESC", "label": 0, "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_credit_rating"], "sql_features": ["filter", "group_by", "order_by"], "complexity": "medium"}
{"nl": "How many households have more than 3 dependents?", "paraphrases": ["# Paraphrases of \"How many households have more than 3 dependents?\"\n\n1. What is the number of households with dependents exceeding three?\n\n2. Can you determine the quantity of families that support more than three dependents?\n\n3. How many homes have a dependent count greater than 3?"], "sql": "SELECT COUNT(*) FROM household_demographics WHERE hd_dep_count > 3", "tables": ["household_demographics"], "columns": ["household_demographics.hd_dep_count"], "business_intent": "To understand the distribution of larger families in the demographic data, which could be valuable for marketing campaigns targeting households with many dependents or for product offerings suited to larger families.", "complexity": "easy", "alternatives": ["SELECT COUNT(hd_demo_sk) FROM household_demographics WHERE hd_dep_count > 3", "SELECT hd_dep_count, COUNT(*) FROM household_demographics GROUP BY hd_dep_count HAVING hd_dep_count > 3"], "sql_features": ["filter"], "label": 1}
{"nl": "How many households have more than 3 dependents?", "sql": "SELECT dummy_col, w.w_warehouse_name, SUM(i.inv_quantity_on_hand) as total_inventory FROM inventory i JOIN warehouse w ON i.inv_warehouse_sk = w.w_warehouse_sk GROUP BY w.w_warehouse_name ORDER BY total_inventory DESC", "label": 0, "tables": ["warehouse", "inventory"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "How many households have more than 3 dependents?", "sql": "SELECT dummy_col, COUNT(*) FROM household_demographics WHERE hd_dep_count > 3", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_dep_count"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What is the average quantity of items sold per transaction in each warehouse?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. For each warehouse, what is the mean number of products sold in a typical transaction?\n\n2. What's the typical item count per sale, broken down by individual warehouse locations?\n\n3. How many items, on average, are purchased in a single transaction at each of the warehouses?"], "sql": "SELECT w.w_warehouse_name, AVG(ss.ss_quantity) AS avg_quantity_per_transaction FROM warehouse w JOIN store_sales ss ON w.w_warehouse_sk = ss.ss_store_sk GROUP BY w.w_warehouse_name ORDER BY avg_quantity_per_transaction DESC", "tables": ["warehouse", "store_sales"], "columns": [], "business_intent": "To analyze the average transaction size (by quantity) across different warehouses, which helps identify which warehouses have larger or smaller average order sizes. This information can be used for inventory planning, warehouse staffing, and identifying regional sales patterns.", "complexity": "medium", "alternatives": ["Instead of average quantity, we could analyze average transaction value using ss_net_paid or other monetary columns to compare warehouse performance by revenue rather than units."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the average quantity of items sold per transaction in each warehouse?", "sql": "SELECT dummy_col, EXTRACT(MONTH FROM d.d_date) as month, SUM(ws_net_paid) as total_revenue FROM web_sales ws JOIN date_dim d ON ws.ws_sold_date_sk = d.d_date_sk WHERE d.d_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 1 YEAR) GROUP BY EXTRACT(MONTH FROM d.d_date) ORDER BY total_revenue DESC LIMIT 1", "label": 0, "tables": ["web_sales", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average quantity of items sold per transaction in each warehouse?", "sql": "SELECT dummy_col, w.w_warehouse_name, AVG(ss.ss_quantity) AS avg_quantity_per_transaction FROM warehouse w JOIN store_sales ss ON w.w_warehouse_sk = ss.ss_store_sk GROUP BY w.w_warehouse_name ORDER BY avg_quantity_per_transaction DESC", "label": 0, "tables": ["warehouse", "store_sales"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average size in square feet of warehouses located in each state?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. For each state, what is the typical warehouse size measured in square feet?\n\n2. How many square feet does the average warehouse occupy in each individual state?\n\n3. What's the mean square footage of warehouses when analyzed on a state-by-state basis?"], "sql": "SELECT w_state, AVG(w_warehouse_sq_ft) AS avg_size_sq_ft FROM warehouse GROUP BY w_state ORDER BY w_state", "tables": ["warehouse"], "columns": ["warehouse.w_state", "warehouse.w_warehouse_sq_ft"], "business_intent": "To analyze the distribution of warehouse sizes across different states, helping with strategic facility planning, capacity management, and regional infrastructure assessment.", "complexity": "easy", "alternatives": ["SELECT w_state, AVG(w_warehouse_sq_ft) AS avg_size, COUNT(*) AS num_warehouses FROM warehouse GROUP BY w_state ORDER BY avg_size DESC"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What is the average size in square feet of warehouses located in each state?", "sql": "SELECT dummy_col, cd_education_status, cd_marital_status, COUNT(*) as customer_count FROM customer_demographics GROUP BY cd_education_status, cd_marital_status ORDER BY cd_education_status, cd_marital_status", "label": 0, "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_marital_status"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the average size in square feet of warehouses located in each state?", "sql": "SELECT dummy_col, w_state, AVG(w_warehouse_sq_ft) AS avg_size_sq_ft FROM warehouse GROUP BY w_state ORDER BY w_state", "label": 0, "tables": ["warehouse"], "columns": ["warehouse.w_state", "warehouse.w_warehouse_sq_ft"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the total amount of cash refunded for returns from customers in California?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. What is the cumulative sum of money reimbursed for items returned by customers located in California?\n\n2. How much total cash has been given back to California-based customers who made returns?\n\n3. For all customer returns originating from California, what is the aggregate refund amount in cash?"], "sql": "SELECT SUM(cr_refunded_cash) AS total_cash_refunded FROM catalog_returns cr JOIN customer_address ca ON cr.cr_refunded_customer_sk = ca.ca_address_sk WHERE ca.ca_state = 'CA'", "tables": ["catalog_returns", "customer_address"], "columns": [], "business_intent": "To measure the financial impact of cash refunds specifically for customers in California, which helps in regional financial analysis and understanding refund patterns by geography.", "complexity": "medium", "alternatives": ["We could join through customer demographics first if we wanted to analyze by customer characteristics along with geography", "Could modify to group by city or county within California to get more granular geographic insights"], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What is the total amount of cash refunded for returns from customers in California?", "sql": "SELECT dummy_col, cp.cp_department, SUM(ws.ws_net_paid) as total_sales FROM web_sales ws JOIN catalog_page cp ON ws.ws_catalog_page_sk = cp.cp_catalog_page_sk GROUP BY cp.cp_department ORDER BY total_sales DESC LIMIT 5", "label": 0, "tables": ["web_sales", "catalog_page"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total amount of cash refunded for returns from customers in California?", "sql": "SELECT dummy_col, SUM(cr_refunded_cash) AS total_cash_refunded FROM catalog_returns cr JOIN customer_address ca ON cr.cr_refunded_customer_sk = ca.ca_address_sk WHERE ca.ca_state = 'CA'", "label": 0, "tables": ["catalog_returns", "customer_address"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What are all the distinct reason descriptions available in the system?", "sql": "SELECT DISTINCT dummy_col, hd_buy_potential FROM household_demographics ORDER BY hd_buy_potential;", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What are the different types of shipping modes and their carriers?", "paraphrases": ["# Paraphrases of \"What are the different types of shipping modes and their carriers?\"\n\n1. Could you explain the various shipping methods available and the companies that provide them?\n\n2. What shipping options exist in terms of transportation modes, and which carriers operate each type?\n\n3. Can you describe the range of ways goods can be shipped and identify the carriers associated with each transportation method?"], "sql": "SELECT sm_type, sm_carrier FROM ship_mode ORDER BY sm_type, sm_carrier", "tables": ["ship_mode"], "columns": ["ship_mode.sm_carrier", "ship_mode.sm_type"], "business_intent": "To understand the variety of shipping methods available to the business and which carriers provide each type of shipping. This information helps in analyzing shipping options and carrier relationships for logistics planning and optimization.", "complexity": "easy", "alternatives": ["SELECT DISTINCT sm_type, sm_carrier FROM ship_mode ORDER BY sm_type, sm_carrier", "SELECT sm_type, sm_carrier, sm_code FROM ship_mode ORDER BY sm_type, sm_carrier"], "sql_features": ["order_by"], "label": 1}
{"nl": "What are the different types of shipping modes and their carriers?", "sql": "SELECT d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "label": 0, "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the different types of shipping modes and their carriers?", "sql": "SELECT dummy_col, sm_type, sm_carrier FROM ship_mode ORDER BY sm_type, sm_carrier", "label": 0, "tables": ["ship_mode"], "columns": ["ship_mode.sm_carrier", "ship_mode.sm_type"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What is the total number of catalog returns by department in 2022?", "paraphrases": ["# Paraphrases of \"What is the total number of catalog returns by department in 2022?\"\n\n1. How many catalog returns were there in each department during 2022?\n\n2. Could you provide the department-wise breakdown of total catalog returns for the year 2022?\n\n3. In 2022, what was the sum of catalog returns, categorized by department?"], "sql": "SELECT cp.cp_department, COUNT(*) as return_count FROM catalog_returns cr JOIN catalog_page cp ON cr.cr_catalog_page_sk = cp.cp_catalog_page_sk JOIN date_dim d ON cr.cr_returned_date_sk = d.d_date_sk WHERE d.d_year = 2022 GROUP BY cp.cp_department ORDER BY return_count DESC", "tables": ["catalog_returns", "date_dim", "catalog_page"], "columns": [], "business_intent": "To analyze return patterns by department for a specific year, helping to identify which departments have higher return rates. This analysis could inform inventory management, quality control initiatives, or targeted customer satisfaction improvements for problematic departments.", "complexity": "medium", "alternatives": ["We could also analyze the total return amount instead of count by using SUM(cr_return_amount) to understand the financial impact by department", "We could include return reason analysis by joining with the reason dimension table to understand why items from specific departments are being returned"], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What is the total number of catalog returns by department in 2022?", "sql": "SELECT dummy_col, i.i_category, SUM(ws.ws_net_paid) as total_sales FROM web_sales ws JOIN item i ON ws.ws_item_sk = i.i_item_sk GROUP BY i.i_category ORDER BY total_sales DESC", "label": 0, "tables": ["web_sales", "item"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total number of catalog returns by department in 2022?", "sql": "SELECT dummy_col, cp.cp_department, COUNT(*) as return_count FROM catalog_returns cr JOIN catalog_page cp ON cr.cr_catalog_page_sk = cp.cp_catalog_page_sk JOIN date_dim d ON cr.cr_returned_date_sk = d.d_date_sk WHERE d.d_year = 2022 GROUP BY cp.cp_department ORDER BY return_count DESC", "label": 0, "tables": ["catalog_returns", "date_dim", "catalog_page"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the different types of shipping modes available in our system?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. What shipping mode options does our system offer?\n\n2. Can you explain the various shipping methods available within our system?\n\n3. What are the different delivery mode categories that our system supports?"], "sql": "SELECT DISTINCT sm_type FROM ship_mode ORDER BY sm_type;", "tables": ["ship_mode"], "columns": ["ship_mode.sm_type"], "business_intent": "To understand the range of shipping method types available to customers, which helps in logistics planning, customer service, and analyzing shipping options diversity.", "complexity": "easy", "alternatives": ["SELECT sm_type FROM ship_mode GROUP BY sm_type ORDER BY sm_type;", "SELECT sm_type, COUNT(*) as count FROM ship_mode GROUP BY sm_type ORDER BY sm_type;"], "sql_features": ["order_by"], "label": 1}
{"nl": "What are the different types of shipping modes available in our system?", "sql": "SELECT dummy_col, t_hour, COUNT(*) as record_count FROM time_dim GROUP BY t_hour ORDER BY record_count DESC LIMIT 1;", "label": 0, "tables": ["time_dim"], "columns": ["time_dim.t_hour"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What are the different types of shipping modes available in our system?", "sql": "SELECT DISTINCT dummy_col, sm_type FROM ship_mode ORDER BY sm_type;", "label": 0, "tables": ["ship_mode"], "columns": ["ship_mode.sm_type"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What is the total net loss from returns for each customer who has made purchases through catalog sales?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. For every customer who purchased items via catalog sales, what is their cumulative net loss from returned merchandise?\n\n2. How much total money was lost due to returns for each individual customer who bought through the catalog sales channel?\n\n3. Can you calculate the aggregate financial deficit resulting from product returns, broken down by each customer who made catalog purchases?"], "sql": "SELECT cs.cs_bill_customer_sk, SUM(sr.sr_net_loss) as total_net_loss FROM catalog_sales cs JOIN store_returns sr ON cs.cs_bill_customer_sk = sr.sr_customer_sk GROUP BY cs.cs_bill_customer_sk ORDER BY total_net_loss DESC", "tables": ["store_returns", "catalog_sales"], "columns": [], "business_intent": "To identify which catalog customers are generating the highest net losses through returns, helping the business understand the financial impact of returns by customer segment and potentially identify problematic purchasing patterns for targeted interventions.", "complexity": "medium", "alternatives": ["We could also filter for a specific time period to analyze seasonal patterns or recent trends", "We could join with customer demographic information to segment the results by demographic factors if those tables were available"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the total net loss from returns for each customer who has made purchases through catalog sales?", "sql": "SELECT dummy_col, AVG(cs_tax) as avg_tax_amount FROM catalog_sales JOIN date_dim ON cs_sold_date_sk = d_date_sk WHERE d_year = 2004 AND d_qoy = 1", "label": 0, "tables": ["catalog_sales", "date_dim"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the total net loss from returns for each customer who has made purchases through catalog sales?", "sql": "SELECT dummy_col, cs.cs_bill_customer_sk, SUM(sr.sr_net_loss) as total_net_loss FROM catalog_sales cs JOIN store_returns sr ON cs.cs_bill_customer_sk = sr.sr_customer_sk GROUP BY cs.cs_bill_customer_sk ORDER BY total_net_loss DESC", "label": 0, "tables": ["store_returns", "catalog_sales"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average quantity of items sold through web sales for each store?", "paraphrases": ["# Paraphrased Questions\n\n1. For each store, what is the mean number of products purchased via online channels?\n\n2. What's the typical volume of merchandise sold through internet transactions per individual store?\n\n3. How many items, on average, does each store sell through their website?"], "sql": "SELECT s.s_store_id, AVG(ws.ws_quantity) as avg_quantity_sold\nFROM web_sales ws\nJOIN store s ON ws.ws_bill_customer_sk = s.s_store_sk\nGROUP BY s.s_store_id\nORDER BY avg_quantity_sold DESC;", "tables": ["web_sales", "store"], "columns": [], "business_intent": "To analyze the average sales volume (in quantity) across different stores' online channels. This helps identify which stores are generating higher volume of online orders, which can inform inventory management and online marketing strategies.", "complexity": "medium", "alternatives": ["Instead of average, we could analyze the total quantity sold per store, or look at trends over time by including date dimensions"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the average quantity of items sold through web sales for each store?", "sql": "SELECT dummy_col, cp.cp_department, COUNT(*) as return_count FROM catalog_returns cr JOIN catalog_page cp ON cr.cr_catalog_page_sk = cp.cp_catalog_page_sk JOIN date_dim d ON cr.cr_returned_date_sk = d.d_date_sk WHERE d.d_year = 2022 GROUP BY cp.cp_department ORDER BY return_count DESC", "label": 0, "tables": ["catalog_returns", "date_dim", "catalog_page"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average quantity of items sold through web sales for each store?", "sql": "SELECT dummy_col, s.s_store_id, AVG(ws.ws_quantity) as avg_quantity_sold\nFROM web_sales ws\nJOIN store s ON ws.ws_bill_customer_sk = s.s_store_sk\nGROUP BY s.s_store_id\nORDER BY avg_quantity_sold DESC;", "label": 0, "tables": ["web_sales", "store"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "How many households have a high buying potential (>$10K) and own at least 3 vehicles?", "paraphrases": ["# Paraphrases\n\n1. What is the count of families with significant purchasing power (exceeding $10,000) who possess three or more vehicles?\n\n2. How many homes demonstrate strong financial capacity (above $10K) while maintaining ownership of 3+ automobiles?\n\n3. What number of residential units combine substantial spending capability (greater than $10,000) with the ownership of three or more cars?"], "sql": "SELECT COUNT(*) FROM household_demographics WHERE hd_buy_potential LIKE '%>10K%' AND hd_vehicle_count >= 3", "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential", "household_demographics.hd_vehicle_count"], "business_intent": "To identify the segment of affluent households with significant purchasing power and multiple vehicles, which may represent a valuable customer segment for luxury goods, automotive products, or high-end services. This information helps marketers target households with both financial means and substantial transportation assets.", "complexity": "easy", "alternatives": ["We could refine this further by including income band information if we had the income_band table joined to household_demographics via hd_income_band_sk to validate the high purchasing power assumption."], "sql_features": ["filter"], "label": 1}
{"nl": "How many households have a high buying potential (>$10K) and own at least 3 vehicles?", "sql": "SELECT dummy_col, td.t_hour, AVG(inv.inv_quantity_on_hand) AS avg_quantity\nFROM inventory inv\nJOIN time_dim td ON inv.inv_date_sk = td.t_time_sk\nGROUP BY td.t_hour\nORDER BY td.t_hour;", "label": 0, "tables": ["inventory", "time_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "How many households have a high buying potential (>$10K) and own at least 3 vehicles?", "sql": "SELECT dummy_col, COUNT(*) FROM household_demographics WHERE hd_buy_potential LIKE '%>10K%' AND hd_vehicle_count >= 3", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential", "household_demographics.hd_vehicle_count"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What is the count of customers without a current address?", "paraphrases": ["# Paraphrases of \"What is the count of customers without a current address?\"\n\n1. How many customers do not have a current address on file?\n\n2. What is the total number of customers lacking a present address?\n\n3. Can you provide the quantity of customers for whom we don't have up-to-date address information?"], "sql": "SELECT COUNT(*) FROM customer WHERE c_current_addr_sk IS NULL;", "tables": ["customer"], "columns": ["customer.c_current_addr_sk"], "business_intent": "To identify data quality issues related to missing customer address information. This analysis helps determine the extent of incomplete customer profiles, which may impact operations like shipping, marketing campaigns, or communication with customers.", "complexity": "easy", "alternatives": ["SELECT COUNT(*) AS customers_without_address FROM customer WHERE c_current_addr_sk IS NULL;", "SELECT COUNT(1) FROM customer WHERE c_current_addr_sk IS NULL;"], "sql_features": ["filter"], "label": 1}
{"nl": "What is the count of customers without a current address?", "sql": "SELECT AVG(cs_tax) as avg_tax_amount FROM catalog_sales JOIN date_dim ON cs_sold_date_sk = d_date_sk WHERE d_year = 2004 AND d_qoy = 1", "label": 0, "tables": ["catalog_sales", "date_dim"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the count of customers without a current address?", "sql": "SELECT dummy_col, COUNT(*) FROM customer WHERE c_current_addr_sk IS NULL;", "label": 0, "tables": ["customer"], "columns": ["customer.c_current_addr_sk"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What is the most common education status among customers?", "paraphrases": ["Paraphrases of \"What is the most common education status among customers?\":\n\n1. Which educational qualification appears most frequently in the customer base?\n\n2. Among the customers, which level of education is represented in the highest numbers?\n\n3. What educational background do the majority of customers have?"], "sql": "SELECT cd_education_status, COUNT(*) as count FROM customer_demographics GROUP BY cd_education_status ORDER BY count DESC LIMIT 1;", "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status"], "business_intent": "To understand the predominant education level in the customer base, which can inform marketing strategies, product development, and targeted promotions based on educational demographics.", "complexity": "easy", "alternatives": ["SELECT cd_education_status, COUNT(*) as count FROM customer_demographics GROUP BY cd_education_status ORDER BY COUNT(*) DESC FETCH FIRST 1 ROW ONLY;", "WITH education_counts AS (SELECT cd_education_status, COUNT(*) as count FROM customer_demographics GROUP BY cd_education_status) SELECT cd_education_status FROM education_counts WHERE count = (SELECT MAX(count) FROM education_counts);"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What is the most common education status among customers?", "sql": "SELECT DISTINCT sm_carrier FROM ship_mode ORDER BY sm_carrier;", "label": 0, "tables": ["ship_mode"], "columns": ["ship_mode.sm_carrier"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What is the most common education status among customers?", "sql": "SELECT dummy_col, cd_education_status, COUNT(*) as count FROM customer_demographics GROUP BY cd_education_status ORDER BY count DESC LIMIT 1;", "label": 0, "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "Which web sites were opened after January 1, 2000?", "paraphrases": ["# Paraphrased Versions of the Original Question\n\n1. What websites began their operations following January 1, 2000?\n\n2. Can you identify the web sites that launched after the start of the year 2000?\n\n3. Which online platforms were created or established subsequent to January 1st of 2000?"], "sql": "SELECT web_site_id, web_name FROM web_site WHERE web_rec_start_date > '2000-01-01'", "tables": ["web_site"], "columns": ["web_site.web_site_id", "web_site.web_rec_start_date", "web_site.web_name"], "business_intent": "To identify websites that were launched after a specific date, which helps in analyzing newer digital properties in the company's portfolio. This information can be useful for comparing performance of newer sites against established ones or for tracking digital expansion strategies over time.", "complexity": "easy", "alternatives": ["SELECT * FROM web_site WHERE web_rec_start_date > '2000-01-01' ORDER BY web_rec_start_date", "SELECT web_site_id, web_name, web_rec_start_date FROM web_site WHERE EXTRACT(YEAR FROM web_rec_start_date) > 2000"], "sql_features": ["filter"], "label": 1}
{"nl": "Which web sites were opened after January 1, 2000?", "sql": "SELECT DISTINCT cp_department FROM catalog_page ORDER BY cp_department;", "label": 0, "tables": ["catalog_page"], "columns": ["catalog_page.cp_department"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "Which web sites were opened after January 1, 2000?", "sql": "SELECT dummy_col, web_site_id, web_name FROM web_site WHERE web_rec_start_date > '2000-01-01'", "label": 0, "tables": ["web_site"], "columns": ["web_site.web_site_id", "web_site.web_rec_start_date", "web_site.web_name"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "List all reason descriptions sorted alphabetically.", "paraphrases": ["# Paraphrased Versions\n\n1. Display all descriptions of reasons arranged in alphabetical order.\n\n2. Provide a complete alphabetically-sorted list of reason descriptions.\n\n3. Show every reason description, organizing them alphabetically from A to Z."], "sql": "SELECT r_reason_desc FROM reason ORDER BY r_reason_desc ASC;", "tables": ["reason"], "columns": ["reason.r_reason_desc"], "business_intent": "To retrieve a comprehensive list of all reason descriptions available in the system, organized alphabetically for easy reference and analysis. This allows business users to understand the complete set of reason categories that exist in the database.", "complexity": "easy", "alternatives": ["SELECT r_reason_id, r_reason_desc FROM reason ORDER BY r_reason_desc ASC;", "SELECT * FROM reason ORDER BY r_reason_desc ASC;"], "sql_features": ["order_by"], "label": 1}
{"nl": "List all reason descriptions sorted alphabetically.", "sql": "SELECT dummy_col, c.c_customer_id, c.c_email_address, COUNT(ws.ws_item_sk) AS total_transactions FROM web_sales ws JOIN customer c ON ws.ws_bill_customer_sk = c.c_customer_sk GROUP BY c.c_customer_id, c.c_email_address ORDER BY total_transactions DESC", "label": 0, "tables": ["web_sales", "customer"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "List all reason descriptions sorted alphabetically.", "sql": "SELECT dummy_col, r_reason_desc FROM reason ORDER BY r_reason_desc ASC;", "label": 0, "tables": ["reason"], "columns": ["reason.r_reason_desc"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What is the total number of web returns processed in December 2002?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How many web returns were processed during December 2002 in total?\n\n2. In December 2002, what was the aggregate count of processed web returns?\n\n3. Calculate the sum of all web returns that were processed in the month of December 2002."], "sql": "SELECT COUNT(*) AS total_returns\nFROM web_returns wr\nJOIN date_dim d ON wr.wr_returned_date_sk = d.d_date_sk\nWHERE d.d_year = 2002 AND d.d_month = 12", "tables": ["web_returns", "date_dim"], "columns": [], "business_intent": "To analyze the volume of web return transactions during a specific month and year, which helps in understanding seasonal return patterns and operational load during the holiday season. This information can be used for staffing and resource planning for return processing.", "complexity": "easy", "alternatives": ["Another approach could be filtering by date range using d_date column instead of d_year and d_month."], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What is the total number of web returns processed in December 2002?", "sql": "SELECT dummy_col, w_state, AVG(w_warehouse_sq_ft) AS avg_square_footage FROM warehouse GROUP BY w_state ORDER BY w_state", "label": 0, "tables": ["warehouse"], "columns": ["warehouse.w_state", "warehouse.w_warehouse_sq_ft"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the total number of web returns processed in December 2002?", "sql": "SELECT dummy_col, COUNT(*) AS total_returns\nFROM web_returns wr\nJOIN date_dim d ON wr.wr_returned_date_sk = d.d_date_sk\nWHERE d.d_year = 2002 AND d.d_month = 12", "label": 0, "tables": ["web_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "Which states have the highest number of customer returns?", "paraphrases": ["# Paraphrased Questions\n\n1. In which states do we observe the greatest quantity of items being returned by customers?\n\n2. What are the states experiencing the maximum volume of product returns from consumers?\n\n3. Which geographical regions within the United States show the highest rates of merchandise being sent back by purchasers?"], "sql": "SELECT ca.ca_state, COUNT(*) as return_count FROM store_returns sr JOIN customer_address ca ON sr.sr_addr_sk = ca.ca_address_sk GROUP BY ca.ca_state ORDER BY return_count DESC", "tables": ["store_returns", "customer_address"], "columns": [], "business_intent": "To identify geographic patterns in return behavior by analyzing which states generate the most returns. This information can help retailers understand regional return trends, potentially allocate resources for returns processing, and develop targeted strategies to address high-return areas.", "complexity": "medium", "alternatives": ["A more complex variation could include analysis by return reason, return amount, or time period.", "Could be filtered to focus only on specific product categories or customer segments."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "Which states have the highest number of customer returns?", "sql": "SELECT dummy_col, w_warehouse_name, w_warehouse_sq_ft FROM warehouse ORDER BY w_warehouse_sq_ft DESC LIMIT 10;", "label": 0, "tables": ["warehouse"], "columns": ["warehouse.w_warehouse_name", "warehouse.w_warehouse_sq_ft"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "Which states have the highest number of customer returns?", "sql": "SELECT dummy_col, ca.ca_state, COUNT(*) as return_count FROM store_returns sr JOIN customer_address ca ON sr.sr_addr_sk = ca.ca_address_sk GROUP BY ca.ca_state ORDER BY return_count DESC", "label": 0, "tables": ["store_returns", "customer_address"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average inventory quantity on hand across all warehouses?", "paraphrases": ["# Paraphrases of \"What is the average inventory quantity on hand across all warehouses?\"\n\n1. Across the entire network of warehouses, what is the mean amount of inventory currently being stored?\n\n2. What quantity of stock do warehouses hold on average when considering all storage facilities?\n\n3. If you calculate the typical inventory levels maintained across all warehouse locations, what figure would you get?"], "sql": "SELECT AVG(inv_quantity_on_hand) AS average_inventory_quantity FROM inventory", "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "business_intent": "To understand the overall inventory health across the organization by calculating the average stock level. This metric helps management assess inventory utilization and potentially identify if the company is overstocked or understocked across all warehouses.", "complexity": "easy", "alternatives": ["SELECT ROUND(AVG(inv_quantity_on_hand), 2) AS average_inventory_quantity FROM inventory", "SELECT COUNT(*) AS total_inventory_records, SUM(inv_quantity_on_hand) AS total_quantity, SUM(inv_quantity_on_hand)/COUNT(*) AS average_quantity FROM inventory"], "sql_features": [], "label": 1}
{"nl": "What is the average inventory quantity on hand across all warehouses?", "sql": "SELECT dummy_col, ca.ca_state, COUNT(*) as return_count FROM store_returns sr JOIN customer_address ca ON sr.sr_addr_sk = ca.ca_address_sk GROUP BY ca.ca_state ORDER BY return_count DESC", "label": 0, "tables": ["store_returns", "customer_address"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average inventory quantity on hand across all warehouses?", "sql": "SELECT dummy_col, AVG(inv_quantity_on_hand) AS average_inventory_quantity FROM inventory", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "sql_features": [], "complexity": "easy"}
{"nl": "Which states have the highest number of customer addresses?", "sql": "SELECT s.s_store_id, SUM(ss.ss_net_paid) as total_sales\nFROM store_sales ss\nJOIN store s ON ss.ss_store_sk = s.s_store_sk\nWHERE EXTRACT(YEAR FROM ss.ss_sold_date_sk::DATE) = 2002\nGROUP BY s.s_store_id\nORDER BY total_sales DESC", "label": 0, "tables": ["store", "store_sales"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the average inventory quantities for each item category?", "paraphrases": ["# Paraphrases of \"What are the average inventory quantities for each item category?\"\n\n1. For each category of items, what is the typical quantity maintained in inventory?\n\n2. How much inventory do we keep on average when broken down by item categories?\n\n3. What are the mean stock levels across the different product categories in our inventory?"], "sql": "SELECT i.i_category, AVG(inv.inv_quantity_on_hand) as avg_inventory\nFROM inventory inv\nJOIN item i ON inv.inv_item_sk = i.i_item_sk\nGROUP BY i.i_category\nORDER BY i.i_category", "tables": ["inventory", "item"], "columns": [], "business_intent": "To analyze inventory levels across different product categories to identify which categories have higher or lower stock levels on average. This information can help with inventory management, stocking decisions, and identifying potential overstocking or understocking situations by category.", "complexity": "medium", "alternatives": ["The query could be modified to include additional grouping by warehouse to understand category inventory distribution across locations", "Could add time filtering using inv_date_sk to analyze category inventory trends over specific periods"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What are the average inventory quantities for each item category?", "sql": "SELECT DISTINCT dummy_col, r_reason_desc FROM reason ORDER BY r_reason_desc;", "label": 0, "tables": ["reason"], "columns": ["reason.r_reason_desc"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What are the average inventory quantities for each item category?", "sql": "SELECT dummy_col, i.i_category, AVG(inv.inv_quantity_on_hand) as avg_inventory\nFROM inventory inv\nJOIN item i ON inv.inv_item_sk = i.i_item_sk\nGROUP BY i.i_category\nORDER BY i.i_category", "label": 0, "tables": ["inventory", "item"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "How many promotions use email as a marketing channel?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. What is the number of promotional campaigns that utilize email as a marketing medium?\n\n2. How frequently is email employed as a channel for marketing promotions?\n\n3. To what extent do promotional strategies incorporate email as a marketing distribution method?"], "sql": "SELECT COUNT(*) FROM promotion WHERE p_email_flag = 'Y'", "tables": ["promotion"], "columns": [], "business_intent": "To understand the prevalence of email as a marketing channel across all promotions, which helps marketing teams evaluate channel utilization and potentially optimize their marketing strategy.", "complexity": "easy", "alternatives": ["SELECT COUNT(*) as email_promotion_count FROM promotion WHERE p_email_flag = 'Y'", "SELECT SUM(CASE WHEN p_email_flag = 'Y' THEN 1 ELSE 0 END) FROM promotion"], "sql_features": ["filter"], "label": 1}
{"nl": "How many promotions use email as a marketing channel?", "sql": "SELECT dummy_col, s.s_store_name, s.s_street_number, s.s_street_name, s.s_street_type, s.s_suite_number, s.s_city, s.s_county, s.s_state, s.s_zip FROM store s JOIN date_dim d ON s.s_closed_date_sk = d.d_date_sk WHERE d.d_year = 2001", "label": 0, "tables": ["date_dim", "store"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "How many promotions use email as a marketing channel?", "sql": "SELECT dummy_col, COUNT(*) FROM promotion WHERE p_email_flag = 'Y'", "label": 0, "tables": ["promotion"], "columns": [], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "Which state has the highest number of customer sales?", "paraphrases": ["Paraphrases of \"Which state has the highest number of customer sales?\":\n\n1. In which state did we record the greatest volume of customer purchases?\n\n2. Among all states, which one achieved the most sales to customers?\n\n3. What state leads in total customer transactions based on sales figures?"], "sql": "SELECT ca.ca_state, COUNT(*) as sale_count FROM store_sales ss JOIN customer_address ca ON ss.ss_customer_sk = ca.ca_address_sk GROUP BY ca.ca_state ORDER BY sale_count DESC LIMIT 1;", "tables": ["store_sales", "customer_address"], "columns": [], "business_intent": "To identify the geographic region (state) where the business has the highest customer activity, which can inform regional marketing strategies, inventory allocation, and expansion plans.", "complexity": "medium", "alternatives": ["Could calculate sales volume in dollars instead of transaction count by using sum(ss_net_paid) to find the state with highest revenue instead of just transaction count", "Could look at sales density by normalizing against state population if that data were available"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "Which state has the highest number of customer sales?", "sql": "SELECT COUNT(*) AS total_returns\nFROM web_returns wr\nJOIN date_dim d ON wr.wr_returned_date_sk = d.d_date_sk\nWHERE d.d_year = 2002 AND d.d_month = 12", "label": 0, "tables": ["web_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "Which state has the highest number of customer sales?", "sql": "SELECT dummy_col, ca.ca_state, COUNT(*) as sale_count FROM store_sales ss JOIN customer_address ca ON ss.ss_customer_sk = ca.ca_address_sk GROUP BY ca.ca_state ORDER BY sale_count DESC LIMIT 1;", "label": 0, "tables": ["store_sales", "customer_address"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total sales amount for web sales compared to the total refund amount for catalog returns?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How does the sum of all web sales revenue compare to the aggregate amount refunded for catalog returns?\n\n2. What's the difference between the cumulative revenue generated from online purchases and the total money reimbursed for catalog item returns?\n\n3. Can you contrast the overall monetary value of web-based sales against the complete sum of refunds issued for catalog return transactions?"], "sql": "SELECT SUM(ws_net_paid) AS total_web_sales, SUM(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS total_catalog_returns FROM web_sales, catalog_returns", "tables": ["catalog_returns", "web_sales"], "columns": [], "business_intent": "To compare the overall revenue generated from web sales against the financial impact of returns from catalog sales. This analysis helps assess the net financial performance and understand the proportion of revenue lost due to returns, which is critical for profitability analysis and return management strategy.", "complexity": "easy", "alternatives": ["Could calculate the ratio of returns to sales by dividing total catalog returns by total web sales", "Could join the tables on common keys like item_sk to compare returns against sales for the same products"], "sql_features": ["join"], "label": 1}
{"nl": "What is the total sales amount for web sales compared to the total refund amount for catalog returns?", "sql": "SELECT DISTINCT ca.ca_state\nFROM customer_address ca\nJOIN web_sales ws ON ca.ca_address_sk = ws.ws_bill_customer_sk\nGROUP BY ca.ca_state\nHAVING SUM(ws.ws_net_paid) > 10000\nORDER BY ca.ca_state", "label": 0, "tables": ["web_sales", "customer_address"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total sales amount for web sales compared to the total refund amount for catalog returns?", "sql": "SELECT dummy_col, SUM(ws_net_paid) AS total_web_sales, SUM(cr_refunded_cash + cr_reversed_charge + cr_store_credit) AS total_catalog_returns FROM web_sales, catalog_returns", "label": 0, "tables": ["catalog_returns", "web_sales"], "columns": [], "sql_features": ["join"], "complexity": "hard"}
{"nl": "Which store has been open the longest without closing?", "paraphrases": ["# Paraphrased Versions of the Original Question\n\n1. Which establishment has maintained continuous operation for the greatest duration of time?\n\n2. Among all stores, which one has the longest uninterrupted history of being in business?\n\n3. What retail location holds the record for the most extended period of unbroken service?"], "sql": "SELECT s_store_id, s_store_name, s_rec_start_date FROM store WHERE s_closed_date_sk IS NULL ORDER BY s_rec_start_date ASC LIMIT 1;", "tables": ["store"], "columns": ["store.s_rec_start_date", "store.s_store_id", "store.s_closed_date_sk", "store.s_store_name"], "business_intent": "To identify the longest-operating store that remains open, which helps in understanding business longevity and potentially analyzing factors contributing to successful store operations. This information can be valuable for historical analysis and recognizing established locations in the retail network.", "complexity": "easy", "alternatives": ["Find the store with the earliest opening date that still has customers coming in", "SELECT s_store_id, s_store_name, DATEDIFF(CURRENT_DATE, s_rec_start_date) AS days_open FROM store WHERE s_closed_date_sk IS NULL ORDER BY days_open DESC LIMIT 1;"], "sql_features": ["filter", "order_by"], "label": 1}
{"nl": "Which store has been open the longest without closing?", "sql": "SELECT d.d_month, SUM(ws.ws_net_paid) as total_sales\nFROM web_sales ws\nJOIN date_dim d ON ws.ws_sold_time_sk = d.d_date_sk\nWHERE d.d_year = 2002\nGROUP BY d.d_month\nORDER BY d.d_month", "label": 0, "tables": ["web_sales", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "Which store has been open the longest without closing?", "sql": "SELECT dummy_col, s_store_id, s_store_name, s_rec_start_date FROM store WHERE s_closed_date_sk IS NULL ORDER BY s_rec_start_date ASC LIMIT 1;", "label": 0, "tables": ["store"], "columns": ["store.s_rec_start_date", "store.s_closed_date_sk", "store.s_store_name", "store.s_store_id"], "sql_features": ["filter", "order_by"], "complexity": "easy"}
{"nl": "What is the distribution of households by vehicle count?", "sql": "SELECT MIN(cc_hours) FROM call_center WHERE cc_hours IS NOT NULL;", "label": 0, "tables": ["call_center"], "columns": ["call_center.cc_hours"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "How many distinct income bands have an upper bound of at least $100,000?", "paraphrases": ["Paraphrases of \"How many distinct income bands have an upper bound of at least $100,000?\":\n\n1. What is the count of different income brackets with maximum thresholds of $100,000 or more?\n\n2. How many separate income categories feature a ceiling value that equals or exceeds $100,000?\n\n3. Count the number of unique income ranges whose highest limit is not less than $100,000."], "sql": "SELECT COUNT(*) FROM income_band WHERE ib_upper_bound >= 100000", "tables": ["income_band"], "columns": ["income_band.ib_upper_bound"], "business_intent": "To understand how many high-income segments are defined in the system. This helps with customer segmentation, targeted marketing strategies, and analyzing the distribution of higher income bands for potential business opportunities.", "complexity": "easy", "alternatives": ["SELECT COUNT(ib_income_band_sk) FROM income_band WHERE ib_upper_bound >= 100000", "SELECT COUNT(DISTINCT ib_income_band_sk) FROM income_band WHERE ib_upper_bound >= 100000"], "sql_features": ["filter"], "label": 1}
{"nl": "How many distinct income bands have an upper bound of at least $100,000?", "sql": "SELECT dummy_col, d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "label": 0, "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "How many distinct income bands have an upper bound of at least $100,000?", "sql": "SELECT dummy_col, COUNT(*) FROM income_band WHERE ib_upper_bound >= 100000", "label": 0, "tables": ["income_band"], "columns": ["income_band.ib_upper_bound"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What is the average inventory quantity on hand for items that have been sold in store?", "paraphrases": ["Here are 3 different paraphrases of the original question:\n\n1. For products that have been purchased in the physical store, what is the typical quantity maintained in inventory?\n\n2. What's the mean stock level kept on hand for merchandise that has been sold through the retail location?\n\n3. Regarding items that customers have bought in-store, what is the average amount kept in stock?"], "sql": "SELECT AVG(inv.inv_quantity_on_hand) AS avg_inventory_quantity FROM inventory inv JOIN store_sales ss ON inv.inv_item_sk = ss.ss_item_sk", "tables": ["inventory", "store_sales"], "columns": [], "business_intent": "To understand the average inventory levels for products that are actually selling in stores. This helps with inventory management by showing whether popular items (those that sell) tend to be kept at appropriate stock levels.", "complexity": "medium", "alternatives": ["The query could be modified to include grouping by warehouse to see average inventory by location for sold items: SELECT inv.inv_warehouse_sk, AVG(inv.inv_quantity_on_hand) AS avg_inventory_quantity FROM inventory inv JOIN store_sales ss ON inv.inv_item_sk = ss.ss_item_sk GROUP BY inv.inv_warehouse_sk", "Could include date conditions to analyze inventory levels for items sold within specific time periods by joining on date surrogate keys"], "sql_features": ["join"], "label": 1}
{"nl": "What is the average inventory quantity on hand for items that have been sold in store?", "sql": "SELECT cd_gender, p_promo_name, COUNT(*) as promotion_count FROM promotion p JOIN customer_demographics cd GROUP BY cd_gender, p_promo_name ORDER BY cd_gender, promotion_count DESC", "label": 0, "tables": ["promotion", "customer_demographics"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average inventory quantity on hand for items that have been sold in store?", "sql": "SELECT dummy_col, AVG(inv.inv_quantity_on_hand) AS avg_inventory_quantity FROM inventory inv JOIN store_sales ss ON inv.inv_item_sk = ss.ss_item_sk", "label": 0, "tables": ["inventory", "store_sales"], "columns": [], "sql_features": ["join"], "complexity": "hard"}
{"nl": "What is the distribution of inventory quantities on hand by customer gender?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How are the current inventory stock levels distributed when analyzed by the gender of our customers?\n\n2. Can you break down the on-hand inventory quantities according to whether customers are male, female, or other gender identifications?\n\n3. What patterns emerge when we examine the available inventory amounts in relation to customer gender demographics?"], "sql": "SELECT cd_gender, SUM(inv_quantity_on_hand) as total_quantity, AVG(inv_quantity_on_hand) as avg_quantity, COUNT(*) as count FROM customer_demographics JOIN inventory ON cd_demo_sk = inv_item_sk GROUP BY cd_gender ORDER BY cd_gender", "tables": ["customer_demographics", "inventory"], "columns": [], "business_intent": "To analyze inventory distribution patterns by customer gender, which can help with gender-based inventory planning, targeted marketing strategies, and understanding if certain product categories have gender-specific stocking requirements.", "complexity": "medium", "alternatives": ["The query assumes a direct relationship between customer_demographics.cd_demo_sk and inventory.inv_item_sk which may not be the intended relationship in a complete schema. In a more complete schema, there might be intermediate tables like customer, orders, and order_items that would create the proper relationship between customers and inventory."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of inventory quantities on hand by customer gender?", "sql": "SELECT DISTINCT sm_type FROM ship_mode ORDER BY sm_type;", "label": 0, "tables": ["ship_mode"], "columns": ["ship_mode.sm_type"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What is the distribution of inventory quantities on hand by customer gender?", "sql": "SELECT dummy_col, cd_gender, SUM(inv_quantity_on_hand) as total_quantity, AVG(inv_quantity_on_hand) as avg_quantity, COUNT(*) as count FROM customer_demographics JOIN inventory ON cd_demo_sk = inv_item_sk GROUP BY cd_gender ORDER BY cd_gender", "label": 0, "tables": ["customer_demographics", "inventory"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of store closures by month in the most recent year?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How were store closures distributed across different months during the most recent year?\n\n2. In the past year, what pattern of store shutdowns can be observed when analyzed month by month?\n\n3. Looking at the latest annual data, how did store closures break down monthly throughout the year?"], "sql": "SELECT EXTRACT(MONTH FROM d.d_date) AS month, COUNT(*) AS number_of_closures \nFROM store s \nJOIN date_dim d ON s.s_closed_date_sk = d.d_date_sk \nWHERE EXTRACT(YEAR FROM d.d_date) = (SELECT MAX(EXTRACT(YEAR FROM d_date)) FROM date_dim WHERE d_date_sk IN (SELECT s_closed_date_sk FROM store WHERE s_closed_date_sk IS NOT NULL)) \nGROUP BY EXTRACT(MONTH FROM d.d_date) \nORDER BY month;", "tables": ["date_dim", "store"], "columns": [], "business_intent": "To analyze the seasonal pattern of store closures throughout the most recent year, which can help management understand if there are particular months when stores are more likely to close. This insight could inform strategic planning, resource allocation, and risk management related to store operations.", "complexity": "medium", "alternatives": ["We could also look at closure patterns by day of week or by quarter instead of by month", "Another approach would be to compare closure patterns across multiple years to identify any year-over-year trends"], "sql_features": ["join", "filter", "group_by", "order_by", "subquery"], "label": 1}
{"nl": "What is the distribution of store closures by month in the most recent year?", "sql": "SELECT cp.cp_department, COUNT(sr.sr_item_sk) as return_count FROM store_returns sr JOIN catalog_page cp ON sr.sr_catalog_page_sk = cp.cp_catalog_page_sk GROUP BY cp.cp_department ORDER BY return_count DESC", "label": 0, "tables": ["store_returns", "catalog_page"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of store closures by month in the most recent year?", "sql": "SELECT dummy_col, EXTRACT(MONTH FROM d.d_date) AS month, COUNT(*) AS number_of_closures \nFROM store s \nJOIN date_dim d ON s.s_closed_date_sk = d.d_date_sk \nWHERE EXTRACT(YEAR FROM d.d_date) = (SELECT MAX(EXTRACT(YEAR FROM d_date)) FROM date_dim WHERE d_date_sk IN (SELECT s_closed_date_sk FROM store WHERE s_closed_date_sk IS NOT NULL)) \nGROUP BY EXTRACT(MONTH FROM d.d_date) \nORDER BY month;", "label": 0, "tables": ["date_dim", "store"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by", "subquery"], "complexity": "hard"}
{"nl": "How many warehouses are there in each state?", "paraphrases": ["Here are three paraphrases of the original question:\n\n1. What is the count of warehouses per state?\n\n2. In each state, how many warehouses can be found?\n\n3. Could you provide the number of warehouses distributed across individual states?"], "sql": "SELECT w_state, COUNT(*) as warehouse_count FROM warehouse GROUP BY w_state ORDER BY warehouse_count DESC", "tables": ["warehouse"], "columns": ["warehouse.w_state"], "business_intent": "To understand the geographic distribution of warehouse facilities across states, which helps in analyzing supply chain coverage, identifying potential regional gaps, and planning logistics strategies.", "complexity": "easy", "alternatives": ["SELECT w_state, COUNT(w_warehouse_sk) as warehouse_count FROM warehouse GROUP BY w_state ORDER BY warehouse_count DESC", "We could also include additional location details such as country if we wanted a more granular geographic analysis."], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "How many warehouses are there in each state?", "sql": "SELECT dummy_col, d.d_day_name, SUM(wr.wr_return_amt) as total_return_amount FROM web_returns wr JOIN date_dim d ON wr.wr_returned_date_sk = d.d_date_sk WHERE d.d_year = 2002 GROUP BY d.d_day_name ORDER BY total_return_amount DESC", "label": 0, "tables": ["web_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "How many warehouses are there in each state?", "sql": "SELECT dummy_col, w_state, COUNT(*) as warehouse_count FROM warehouse GROUP BY w_state ORDER BY warehouse_count DESC", "label": 0, "tables": ["warehouse"], "columns": ["warehouse.w_state"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What are the top 5 product categories with the highest total return amount from web returns?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Which five product categories have generated the greatest sum of money from items returned through online channels?\n\n2. From web-based returns, what are the five merchandise classifications that account for the largest cumulative return values?\n\n3. Among all product segments, can you identify the top 5 that show the highest aggregate monetary amount from online returns?"], "sql": "SELECT i.i_category, SUM(wr.wr_return_amt) as total_return_amount FROM web_returns wr JOIN item i ON wr.wr_item_sk = i.i_item_sk GROUP BY i.i_category ORDER BY total_return_amount DESC LIMIT 5", "tables": ["web_returns", "item"], "columns": [], "business_intent": "To identify which product categories are generating the highest financial impact from returns through the web channel. This analysis helps the business understand where return losses are concentrated, which could inform product quality improvements, better product descriptions, or category-specific return policies.", "complexity": "medium", "alternatives": ["Instead of looking at total return amount, we could analyze average return amount per category to identify categories with higher per-item return costs", "We could extend this analysis by including a time dimension to see if certain categories have seasonal return patterns"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What are the top 5 product categories with the highest total return amount from web returns?", "sql": "SELECT DISTINCT sm_type FROM ship_mode ORDER BY sm_type;", "label": 0, "tables": ["ship_mode"], "columns": ["ship_mode.sm_type"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What are the top 5 product categories with the highest total return amount from web returns?", "sql": "SELECT dummy_col, i.i_category, SUM(wr.wr_return_amt) as total_return_amount FROM web_returns wr JOIN item i ON wr.wr_item_sk = i.i_item_sk GROUP BY i.i_category ORDER BY total_return_amount DESC LIMIT 5", "label": 0, "tables": ["web_returns", "item"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the top 5 days with the highest store sales in the most recent year of data?", "paraphrases": ["# Paraphrased Versions\n\n1. In the latest year for which we have data, which 5 days recorded the greatest amount of store sales?\n\n2. Looking at the most recent annual period in our dataset, which five days generated the highest sales volume at the store?\n\n3. When examining store performance during the last year in our records, which five specific dates produced the largest sales figures?"], "sql": "SELECT d.d_date, SUM(ss_net_paid) as total_sales\nFROM store_sales\nJOIN date_dim d ON store_sales.ss_sold_date_sk = d.d_date_sk\nWHERE d.d_year = (SELECT MAX(d_year) FROM date_dim)\nGROUP BY d.d_date\nORDER BY total_sales DESC\nLIMIT 5;", "tables": ["date_dim", "store_sales"], "columns": ["store_sales.ss_sold_date_sk"], "business_intent": "Identify peak sales days within the most recent year to understand seasonal patterns and exceptional performance days. This information helps with inventory planning, staffing decisions, and marketing campaign timing.", "complexity": "medium", "alternatives": ["Instead of using ss_net_paid, we could use ss_sales_price or calculate total revenue differently by using (ss_sales_price * ss_quantity)", "We could expand the analysis to compare top selling days across multiple years to identify consistent patterns"], "sql_features": ["join", "filter", "group_by", "order_by", "subquery"], "label": 1}
{"nl": "What are the top 5 days with the highest store sales in the most recent year of data?", "sql": "SELECT p.p_promo_id, p.p_promo_sk, td.t_time, td.t_am_pm \nFROM promotion p \nJOIN time_dim td ON p.p_start_date_sk = td.t_time_sk \nWHERE td.t_am_pm = 'AM'", "label": 0, "tables": ["promotion", "time_dim"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What are the top 5 days with the highest store sales in the most recent year of data?", "sql": "SELECT dummy_col, d.d_date, SUM(ss_net_paid) as total_sales\nFROM store_sales\nJOIN date_dim d ON store_sales.ss_sold_date_sk = d.d_date_sk\nWHERE d.d_year = (SELECT MAX(d_year) FROM date_dim)\nGROUP BY d.d_date\nORDER BY total_sales DESC\nLIMIT 5;", "label": 0, "tables": ["date_dim", "store_sales"], "columns": ["store_sales.ss_sold_date_sk"], "sql_features": ["join", "filter", "group_by", "order_by", "subquery"], "complexity": "hard"}
{"nl": "How many call centers were closed before 2005?", "paraphrases": ["Paraphrases of \"How many call centers were closed before 2005?\":\n\n1. Prior to 2005, what was the number of call centers that were shut down?\n\n2. What quantity of call centers ceased operations before the year 2005?\n\n3. How many customer service facilities were terminated or discontinued in the period preceding 2005?"], "sql": "SELECT COUNT(*) FROM call_center WHERE cc_closed_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_date < '2005-01-01')", "tables": ["date_dim", "call_center"], "columns": [], "business_intent": "To understand the historical closure pattern of call centers before a specific time period. This analysis helps in tracking organizational changes, facility management trends, and potentially helps in understanding if there was any significant restructuring or downsizing prior to 2005.", "complexity": "medium", "alternatives": ["Another approach would be to join the tables directly: SELECT COUNT(*) FROM call_center cc JOIN date_dim d ON cc.cc_closed_date_sk = d.d_date_sk WHERE d.d_date < '2005-01-01'"], "sql_features": ["filter", "subquery"], "label": 1}
{"nl": "How many call centers were closed before 2005?", "sql": "SELECT ca_state, COUNT(*) as address_count FROM customer_address GROUP BY ca_state ORDER BY address_count DESC", "label": 0, "tables": ["customer_address"], "columns": ["customer_address.ca_state"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "How many call centers were closed before 2005?", "sql": "SELECT dummy_col, COUNT(*) FROM call_center WHERE cc_closed_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_date < '2005-01-01')", "label": 0, "tables": ["date_dim", "call_center"], "columns": [], "sql_features": ["filter", "subquery"], "complexity": "hard"}
{"nl": "What are the top 10 items by total sales amount in store transactions?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Which 10 products generated the highest revenue across all store transactions?\n\n2. Based on total sales revenue, what are the best-selling 10 items in our store's transaction records?\n\n3. When analyzing store transaction data, which items rank in the top 10 for overall sales amount?"], "sql": "SELECT i.i_item_id, i.i_item_desc, SUM(ss.ss_net_paid) as total_sales_amount\nFROM store_sales ss\nJOIN item i ON ss.ss_item_sk = i.i_item_sk\nGROUP BY i.i_item_id, i.i_item_desc\nORDER BY total_sales_amount DESC\nLIMIT 10;", "tables": ["item", "store_sales"], "columns": [], "business_intent": "To identify the best-performing products by revenue, which helps in inventory management, marketing strategy development, and understanding customer preferences. This analysis supports product assortment optimization and can guide merchandising decisions.", "complexity": "medium", "alternatives": ["Could also analyze by different time periods (monthly, quarterly), or segment by store locations if that data were available. Could extend the analysis to include profitability by considering wholesale costs along with sales revenue."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What are the top 10 items by total sales amount in store transactions?", "sql": "SELECT dummy_col, ca.ca_state, COUNT(*) as sale_count FROM store_sales ss JOIN customer_address ca ON ss.ss_customer_sk = ca.ca_address_sk GROUP BY ca.ca_state ORDER BY sale_count DESC LIMIT 1;", "label": 0, "tables": ["store_sales", "customer_address"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the top 10 items by total sales amount in store transactions?", "sql": "SELECT dummy_col, i.i_item_id, i.i_item_desc, SUM(ss.ss_net_paid) as total_sales_amount\nFROM store_sales ss\nJOIN item i ON ss.ss_item_sk = i.i_item_sk\nGROUP BY i.i_item_id, i.i_item_desc\nORDER BY total_sales_amount DESC\nLIMIT 10;", "label": 0, "tables": ["item", "store_sales"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total sales amount from web sales versus catalog sales in the database?", "paraphrases": ["Here are 3 different paraphrases of the original question:\n\n1. How do the total revenue figures from online sales compare to those from catalog purchases in the database?\n\n2. Can you provide a comparison of the cumulative sales figures between web-based transactions and catalog orders as recorded in the database?\n\n3. What are the aggregate sales amounts for internet purchases versus catalog-based sales according to the database records?"], "sql": "SELECT 'Web Sales' AS channel, SUM(ws_net_paid) AS total_sales FROM web_sales UNION ALL SELECT 'Catalog Sales' AS channel, SUM(cs_net_paid) AS total_sales FROM catalog_sales", "tables": ["web_sales", "catalog_sales"], "columns": [], "business_intent": "To compare the performance of different sales channels (web vs. catalog) by measuring their total revenue contribution. This analysis helps the business understand which channel is more effective at generating sales and can inform resource allocation and marketing strategies.", "complexity": "easy", "alternatives": ["Could also use ws_net_paid_inc_tax or ws_net_paid_inc_ship or ws_net_paid_inc_ship_tax for different revenue measurements depending on business needs", "A more detailed analysis could include grouping by time periods (e.g., monthly or quarterly) to see trends in channel performance over time"], "sql_features": [], "label": 1}
{"nl": "What is the total sales amount from web sales versus catalog sales in the database?", "sql": "SELECT cd_gender, SUM(inv_quantity_on_hand) as total_quantity, AVG(inv_quantity_on_hand) as avg_quantity, COUNT(*) as count FROM customer_demographics JOIN inventory ON cd_demo_sk = inv_item_sk GROUP BY cd_gender ORDER BY cd_gender", "label": 0, "tables": ["customer_demographics", "inventory"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total sales amount from web sales versus catalog sales in the database?", "sql": "SELECT dummy_col, 'Web Sales' AS channel, SUM(ws_net_paid) AS total_sales FROM web_sales UNION ALL SELECT 'Catalog Sales' AS channel, SUM(cs_net_paid) AS total_sales FROM catalog_sales", "label": 0, "tables": ["web_sales", "catalog_sales"], "columns": [], "sql_features": [], "complexity": "easy"}
{"nl": "What is the total net profit from catalog sales in call centers located in the Eastern time zone?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How much overall net profit was generated from catalog sales specifically at call centers situated in the Eastern time zone?\n\n2. What are the combined net earnings from catalog purchases processed through call centers operating in the Eastern time zone region?\n\n3. Can you provide the sum total of net profits derived from catalog-based sales occurring at call centers within the Eastern time zone territory?"], "sql": "SELECT SUM(cs.cs_net_profit) AS total_net_profit FROM catalog_sales cs JOIN call_center cc ON cs.cs_call_center_sk = cc.cc_call_center_sk WHERE cc.cc_gmt_offset = -5", "tables": ["catalog_sales", "call_center"], "columns": [], "business_intent": "To analyze the financial performance of catalog sales operations in a specific geographic region (Eastern time zone) to evaluate regional profitability and potentially inform resource allocation or regional strategy decisions.", "complexity": "medium", "alternatives": ["This could also be analyzed by time period, by joining with date dimensions to see how Eastern time zone profits vary seasonally or over years."], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What is the total net profit from catalog sales in call centers located in the Eastern time zone?", "sql": "SELECT dummy_col, CAST(COUNT(CASE WHEN cd.cd_purchase_estimate > 5000 THEN 1 END) AS FLOAT) / COUNT(*) * 100 AS percentage_high_estimate_returns FROM web_returns wr JOIN customer_demographics cd ON wr.wr_refunded_cdemo_sk = cd.cd_demo_sk", "label": 0, "tables": ["web_returns", "customer_demographics"], "columns": [], "sql_features": ["join"], "complexity": "hard"}
{"nl": "What is the total net profit from catalog sales in call centers located in the Eastern time zone?", "sql": "SELECT dummy_col, SUM(cs.cs_net_profit) AS total_net_profit FROM catalog_sales cs JOIN call_center cc ON cs.cs_call_center_sk = cc.cc_call_center_sk WHERE cc.cc_gmt_offset = -5", "label": 0, "tables": ["catalog_sales", "call_center"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the distribution of customers by marital status and gender?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How are customers divided according to their marital status and gender categories?\n\n2. Can you provide a breakdown of the customer base by gender and whether they are married, single, or of other marital statuses?\n\n3. What is the demographic composition of customers when analyzed by both their gender and marital status?"], "sql": "SELECT cd_gender, cd_marital_status, COUNT(*) as customer_count FROM customer_demographics GROUP BY cd_gender, cd_marital_status ORDER BY cd_gender, cd_marital_status", "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_marital_status", "customer_demographics.cd_gender"], "business_intent": "To understand the demographic composition of the customer base by analyzing the distribution across gender and marital status segments. This information can help in developing targeted marketing strategies, product offerings, or communication approaches tailored to different demographic groups.", "complexity": "easy", "alternatives": ["Could include percentage calculations: SELECT cd_gender, cd_marital_status, COUNT(*) as count, COUNT(*)*100.0/(SELECT COUNT(*) FROM customer_demographics) as percentage FROM customer_demographics GROUP BY cd_gender, cd_marital_status ORDER BY cd_gender, cd_marital_status", "Could focus on just one dimension first: SELECT cd_gender, COUNT(*) FROM customer_demographics GROUP BY cd_gender; SELECT cd_marital_status, COUNT(*) FROM customer_demographics GROUP BY cd_marital_status"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of customers by marital status and gender?", "sql": "SELECT t.t_hour, COUNT(*) as page_count FROM web_page w JOIN time_dim t ON w.wp_creation_date_sk = t.t_time_sk GROUP BY t.t_hour ORDER BY t.t_hour", "label": 0, "tables": ["web_page", "time_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of customers by marital status and gender?", "sql": "SELECT dummy_col, cd_gender, cd_marital_status, COUNT(*) as customer_count FROM customer_demographics GROUP BY cd_gender, cd_marital_status ORDER BY cd_gender, cd_marital_status", "label": 0, "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_marital_status", "customer_demographics.cd_gender"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the average sales amount for catalog orders by customer age group?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How does the mean purchase value of catalog orders vary across different customer age demographics?\n\n2. When categorized by age groups, what is the typical sales figure for customers ordering from catalogs?\n\n3. Could you break down the average monetary value of catalog purchases according to the age brackets of customers?"], "sql": "SELECT c_birth_year, AVG(cs_net_paid) as avg_sales_amount FROM catalog_sales JOIN customer ON cs_bill_customer_sk = c_customer_sk GROUP BY c_birth_year ORDER BY c_birth_year", "tables": ["catalog_sales", "customer"], "columns": [], "business_intent": "To analyze how catalog sales performance varies by customer age demographics, enabling targeted marketing strategies and product offerings for different age segments. This analysis helps in understanding which age groups contribute most to catalog sales revenue.", "complexity": "medium", "alternatives": ["The analysis could also be done using age ranges by modifying the query to group customers into age buckets rather than by birth year.", "Another approach would be to join with customer_demographics table if more detailed demographic information is needed beyond birth year."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the average sales amount for catalog orders by customer age group?", "sql": "SELECT dummy_col, i_item_id, i_item_desc, i_current_price FROM item WHERE i_category = 'Books' ORDER BY i_current_price DESC LIMIT 1;", "label": 0, "tables": ["item"], "columns": ["item.i_current_price", "item.i_category", "item.i_item_id", "item.i_item_desc"], "sql_features": ["filter", "order_by"], "complexity": "easy"}
{"nl": "What is the average sales amount for catalog orders by customer age group?", "sql": "SELECT dummy_col, c_birth_year, AVG(cs_net_paid) as avg_sales_amount FROM catalog_sales JOIN customer ON cs_bill_customer_sk = c_customer_sk GROUP BY c_birth_year ORDER BY c_birth_year", "label": 0, "tables": ["catalog_sales", "customer"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the top 5 states with the highest number of product returns?", "paraphrases": ["# Paraphrased Versions\n\n1. Which five states report the greatest quantity of returned products?\n\n2. Can you identify the 5 states that experience the highest volume of product returns?\n\n3. Among all states, which 5 rank at the top for product return frequency?"], "sql": "SELECT w_state, COUNT(*) as return_count FROM store_returns JOIN warehouse ON store_returns.sr_returned_date_sk = warehouse.w_warehouse_sk GROUP BY w_state ORDER BY return_count DESC LIMIT 5;", "tables": ["store_returns", "warehouse"], "columns": ["store_returns.sr_returned_date_sk", "warehouse.w_warehouse_sk"], "business_intent": "To identify geographic patterns in product returns by analyzing which states have the highest volume of returns. This information can help in understanding regional return behaviors and potentially address issues specific to high-return states.", "complexity": "medium", "alternatives": ["We could also analyze return patterns by joining with other demographic dimensions to see if there are specific customer segments driving returns in these states."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What are the top 5 states with the highest number of product returns?", "sql": "SELECT dummy_col, w_warehouse_name, w_warehouse_sq_ft FROM warehouse ORDER BY w_warehouse_sq_ft DESC LIMIT 1;", "label": 0, "tables": ["warehouse"], "columns": ["warehouse.w_warehouse_name", "warehouse.w_warehouse_sq_ft"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What are the top 5 states with the highest number of product returns?", "sql": "SELECT dummy_col, w_state, COUNT(*) as return_count FROM store_returns JOIN warehouse ON store_returns.sr_returned_date_sk = warehouse.w_warehouse_sk GROUP BY w_state ORDER BY return_count DESC LIMIT 5;", "label": 0, "tables": ["store_returns", "warehouse"], "columns": ["warehouse.w_warehouse_sk", "store_returns.sr_returned_date_sk"], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the most common shipping carriers used for catalog sales?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Which shipping carriers are most frequently utilized for delivering catalog order purchases?\n\n2. In the catalog sales industry, what delivery services are typically employed the most?\n\n3. What transportation companies are predominantly used to ship items purchased from catalogs?"], "sql": "SELECT sm.sm_carrier, COUNT(*) as carrier_count FROM catalog_sales cs JOIN ship_mode sm ON cs.cs_ship_mode_sk = sm.sm_ship_mode_sk GROUP BY sm.sm_carrier ORDER BY carrier_count DESC", "tables": ["ship_mode", "catalog_sales"], "columns": [], "business_intent": "To identify which shipping carriers are most frequently used for catalog sales, helping to understand carrier distribution and potentially inform logistics strategy, carrier negotiations, or shipping cost analysis.", "complexity": "medium", "alternatives": ["We could also analyze carrier usage by sales volume or revenue instead of transaction count to understand which carriers handle the highest-value shipments."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What are the most common shipping carriers used for catalog sales?", "sql": "SELECT dummy_col, ca.ca_state, COUNT(*) as transaction_count FROM catalog_sales cs JOIN customer_address ca ON cs.cs_bill_customer_sk = ca.ca_address_sk GROUP BY ca.ca_state ORDER BY transaction_count DESC", "label": 0, "tables": ["catalog_sales", "customer_address"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the most common shipping carriers used for catalog sales?", "sql": "SELECT dummy_col, sm.sm_carrier, COUNT(*) as carrier_count FROM catalog_sales cs JOIN ship_mode sm ON cs.cs_ship_mode_sk = sm.sm_ship_mode_sk GROUP BY sm.sm_carrier ORDER BY carrier_count DESC", "label": 0, "tables": ["ship_mode", "catalog_sales"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the range of the highest income band?", "paraphrases": ["# Paraphrased Versions\n\n1. What are the upper and lower limits of the top income bracket?\n\n2. For the maximum income category, what span of earnings does it cover?\n\n3. What income values are included in the highest-earning classification?"], "sql": "SELECT ib_lower_bound, ib_upper_bound FROM income_band WHERE ib_upper_bound = (SELECT MAX(ib_upper_bound) FROM income_band);", "tables": ["income_band"], "columns": ["income_band.ib_lower_bound", "income_band.ib_upper_bound"], "business_intent": "To identify the highest income segment's range, which is useful for understanding premium customer segments, setting marketing targets for luxury products, or analyzing high-value customer demographics.", "complexity": "easy", "alternatives": ["SELECT ib_lower_bound, ib_upper_bound FROM income_band ORDER BY ib_upper_bound DESC LIMIT 1;"], "sql_features": ["filter", "subquery"], "label": 1}
{"nl": "What is the range of the highest income band?", "sql": "SELECT dummy_col, cc_name, cc_closed_date_sk FROM call_center WHERE cc_closed_date_sk IS NOT NULL", "label": 0, "tables": ["call_center"], "columns": ["call_center.cc_closed_date_sk", "call_center.cc_name"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What is the range of the highest income band?", "sql": "SELECT dummy_col, ib_lower_bound, ib_upper_bound FROM income_band WHERE ib_upper_bound = (SELECT MAX(ib_upper_bound) FROM income_band);", "label": 0, "tables": ["income_band"], "columns": ["income_band.ib_lower_bound", "income_band.ib_upper_bound"], "sql_features": ["filter", "subquery"], "complexity": "hard"}
{"nl": "What are the states with the highest number of customer addresses?", "paraphrases": ["# Paraphrases of \"What are the states with the highest number of customer addresses?\"\n\n1. Which states contain the largest quantity of customer mailing addresses?\n\n2. In terms of customer address count, which states rank at the top?\n\n3. Where do most customers reside, when comparing address counts by state?"], "sql": "SELECT ca_state, COUNT(*) as address_count FROM customer_address GROUP BY ca_state ORDER BY address_count DESC", "tables": ["customer_address"], "columns": ["customer_address.ca_state"], "business_intent": "To identify geographic concentrations of customers by state, which can help with regional marketing strategies, logistics planning, and understanding customer distribution patterns across different states.", "complexity": "easy", "alternatives": ["SELECT ca_state, COUNT(ca_address_sk) as total_addresses FROM customer_address GROUP BY ca_state ORDER BY total_addresses DESC", "SELECT ca_state, COUNT(DISTINCT ca_address_id) as unique_addresses FROM customer_address GROUP BY ca_state ORDER BY unique_addresses DESC"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What are the states with the highest number of customer addresses?", "sql": "SELECT COUNT(*) as transaction_count FROM catalog_sales cs JOIN web_page wp ON cs.cs_web_page_sk = wp.wp_web_page_sk WHERE EXTRACT(YEAR FROM wp.wp_creation_date_sk) = 2001", "label": 0, "tables": ["catalog_sales", "web_page"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What are the states with the highest number of customer addresses?", "sql": "SELECT dummy_col, ca_state, COUNT(*) as address_count FROM customer_address GROUP BY ca_state ORDER BY address_count DESC", "label": 0, "tables": ["customer_address"], "columns": ["customer_address.ca_state"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the distribution of customers by education status and marital status?", "paraphrases": ["Here are three different paraphrases of the original question, each preserving the same meaning but using different wording:\n\n1. How are customers segmented according to their educational backgrounds and marriage situations?\n\n2. Can you break down the customer base by both education level and marital status?\n\n3. What is the demographic spread of customers when categorized by their educational qualifications and whether they are married, single, or in other relationship statuses?"], "sql": "SELECT cd_education_status, cd_marital_status, COUNT(*) as customer_count FROM customer_demographics GROUP BY cd_education_status, cd_marital_status ORDER BY cd_education_status, cd_marital_status;", "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_marital_status"], "business_intent": "To understand the demographic composition of the customer base by analyzing the distribution across education and marital status segments. This information can help in targeted marketing strategies, customer segmentation, and creating personalized offerings based on demographic profiles.", "complexity": "easy", "alternatives": ["SELECT cd_marital_status, cd_education_status, COUNT(*) as customer_count FROM customer_demographics GROUP BY cd_marital_status, cd_education_status ORDER BY cd_marital_status, cd_education_status;", "You could include additional demographic attributes like gender to get a more detailed segmentation."], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of customers by education status and marital status?", "sql": "SELECT DISTINCT sm_carrier FROM ship_mode ORDER BY sm_carrier", "label": 0, "tables": ["ship_mode"], "columns": ["ship_mode.sm_carrier"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What is the distribution of customers by education status and marital status?", "sql": "SELECT dummy_col, cd_education_status, cd_marital_status, COUNT(*) as customer_count FROM customer_demographics GROUP BY cd_education_status, cd_marital_status ORDER BY cd_education_status, cd_marital_status;", "label": 0, "tables": ["customer_demographics"], "columns": ["customer_demographics.cd_education_status", "customer_demographics.cd_marital_status"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What are the first and last names of customers who live in the same state as a call center?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Can you provide the full names (first and last) of customers whose residential state matches the location of a call center?\n\n2. Which customers' complete names should be listed if we want those residing in states where call centers are located?\n\n3. Identify the first and last names of all customers who reside in any state that contains a call center."], "sql": "SELECT DISTINCT c.c_first_name, c.c_last_name FROM customer c JOIN call_center cc ON c.c_state = cc.cc_state", "tables": ["customer", "call_center"], "columns": [], "business_intent": "To identify customers who live in proximity to call centers, which could be valuable for regional marketing campaigns, understanding service accessibility, or analyzing customer support dynamics based on geographic alignment.", "complexity": "medium", "alternatives": ["We could instead count customers by state where call centers exist: SELECT cc.cc_state, COUNT(DISTINCT c.c_customer_sk) as customer_count FROM call_center cc JOIN customer c ON c.c_state = cc.cc_state GROUP BY cc.cc_state"], "sql_features": ["join"], "label": 1}
{"nl": "What are the first and last names of customers who live in the same state as a call center?", "sql": "SELECT inv_warehouse_sk, AVG(inv_quantity_on_hand) AS avg_quantity \nFROM inventory \nGROUP BY inv_warehouse_sk \nORDER BY inv_warehouse_sk;", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand", "inventory.inv_warehouse_sk"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What are the first and last names of customers who live in the same state as a call center?", "sql": "SELECT DISTINCT dummy_col, c.c_first_name, c.c_last_name FROM customer c JOIN call_center cc ON c.c_state = cc.cc_state", "label": 0, "tables": ["customer", "call_center"], "columns": [], "sql_features": ["join"], "complexity": "hard"}
{"nl": "What is the total number of returned items from households that have at least 3 dependents?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How many items were returned by families with 3 or more dependents?\n\n2. For households that include at least three dependents, what is the sum of returned items?\n\n3. Calculate the aggregate number of returns from customers whose households have three or more dependents."], "sql": "SELECT SUM(sr_return_quantity) FROM store_returns JOIN household_demographics ON store_returns.sr_cdemo_sk = household_demographics.hd_demo_sk WHERE household_demographics.hd_dep_count >= 3", "tables": ["store_returns", "household_demographics"], "columns": ["store_returns.sr_cdemo_sk", "household_demographics.hd_dep_count", "household_demographics.hd_demo_sk"], "business_intent": "To analyze return behavior patterns based on household size, specifically focusing on larger households with more dependents. This information could help in understanding if family size correlates with return rates, which might inform product selection, quality control, or marketing strategies for products targeted at larger families.", "complexity": "medium", "alternatives": ["We could alternatively segment the data further by including other demographic factors like household income band or vehicle count to get more granular insights into return behaviors across different household profiles."], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What is the total number of returned items from households that have at least 3 dependents?", "sql": "SELECT c.c_customer_id, c.c_first_name, c.c_last_name, COUNT(*) as return_count FROM web_returns wr JOIN customer c ON wr.wr_refunded_customer_sk = c.c_customer_sk GROUP BY c.c_customer_id, c.c_first_name, c.c_last_name ORDER BY return_count DESC LIMIT 10", "label": 0, "tables": ["web_returns", "customer"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total number of returned items from households that have at least 3 dependents?", "sql": "SELECT dummy_col, SUM(sr_return_quantity) FROM store_returns JOIN household_demographics ON store_returns.sr_cdemo_sk = household_demographics.hd_demo_sk WHERE household_demographics.hd_dep_count >= 3", "label": 0, "tables": ["store_returns", "household_demographics"], "columns": ["store_returns.sr_cdemo_sk", "household_demographics.hd_demo_sk", "household_demographics.hd_dep_count"], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the current price of each item categorized as 'Electronics'?", "paraphrases": ["# Paraphrases of \"What is the current price of each item categorized as 'Electronics'?\"\n\n1. Could you provide the present cost of all products listed under the Electronics category?\n\n2. How much does each item in the Electronics section currently cost?\n\n3. What are the up-to-date prices for all merchandise classified as Electronics?"], "sql": "SELECT i_item_id, i_item_desc, i_current_price FROM item WHERE i_category = 'Electronics'", "tables": ["item"], "columns": ["item.i_category", "item.i_current_price", "item.i_item_id", "item.i_item_desc"], "business_intent": "To analyze pricing for items in a specific category, which can support pricing strategy decisions, competitive analysis, or inventory valuation for electronic products.", "complexity": "easy", "alternatives": ["SELECT i_item_id, i_product_name, i_current_price FROM item WHERE i_category = 'Electronics'", "SELECT i_item_sk, i_item_id, i_current_price, i_wholesale_cost FROM item WHERE i_category = 'Electronics'"], "sql_features": ["filter"], "label": 1}
{"nl": "What is the current price of each item categorized as 'Electronics'?", "sql": "SELECT dummy_col, d.d_month, d.d_year, SUM(sr.sr_return_quantity) as total_returned_quantity FROM store_returns sr JOIN date_dim d ON sr.sr_returned_date_sk = d.d_date_sk GROUP BY d.d_month, d.d_year ORDER BY d.d_year, d.d_month", "label": 0, "tables": ["store_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the current price of each item categorized as 'Electronics'?", "sql": "SELECT dummy_col, i_item_id, i_item_desc, i_current_price FROM item WHERE i_category = 'Electronics'", "label": 0, "tables": ["item"], "columns": ["item.i_current_price", "item.i_category", "item.i_item_id", "item.i_item_desc"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "What is the average inventory quantity on hand for each store that has been closed?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. For stores that have been shut down, what was the typical amount of inventory they maintained on average?\n\n2. Among closed retail locations, what are the mean stock levels that were kept on hand?\n\n3. What quantity of inventory did shuttered stores have on average per location?"], "sql": "SELECT s.s_store_id, AVG(i.inv_quantity_on_hand) as avg_inventory\nFROM store s\nJOIN inventory i ON s.s_store_sk = i.inv_warehouse_sk\nWHERE s.s_closed_date_sk IS NOT NULL\nGROUP BY s.s_store_id\nORDER BY avg_inventory DESC", "tables": ["store", "inventory"], "columns": [], "business_intent": "To analyze the average inventory levels maintained by closed stores, which could help identify if excess inventory was a factor in store closures or assist in inventory redistribution planning after store closures.", "complexity": "medium", "alternatives": ["We could alternatively filter using s_rec_end_date being in the past instead of checking s_closed_date_sk, depending on business rules", "Could add time dimensions by joining with date tables to analyze inventory trends leading up to store closures"], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What is the average inventory quantity on hand for each store that has been closed?", "sql": "SELECT dummy_col, t_hour, COUNT(*) as record_count FROM time_dim GROUP BY t_hour ORDER BY record_count DESC LIMIT 1;", "label": 0, "tables": ["time_dim"], "columns": ["time_dim.t_hour"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the average inventory quantity on hand for each store that has been closed?", "sql": "SELECT dummy_col, s.s_store_id, AVG(i.inv_quantity_on_hand) as avg_inventory\nFROM store s\nJOIN inventory i ON s.s_store_sk = i.inv_warehouse_sk\nWHERE s.s_closed_date_sk IS NOT NULL\nGROUP BY s.s_store_id\nORDER BY avg_inventory DESC", "label": 0, "tables": ["store", "inventory"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "How many customers live in each state, sorted by the number of customers in descending order?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. What is the count of customers per state, ranked from highest to lowest customer count?\n\n2. Display the total number of customers residing in each state, arranged in descending order based on customer population.\n\n3. Provide a state-by-state breakdown of customer numbers, listing states with the most customers first and continuing in decreasing order."], "sql": "SELECT ca_state, COUNT(DISTINCT c_customer_sk) AS customer_count FROM customer c JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk GROUP BY ca_state ORDER BY customer_count DESC", "tables": ["customer", "customer_address"], "columns": [], "business_intent": "To understand the geographic distribution of customers across states, which can help with regional marketing strategies, resource allocation, and identifying key markets or potential expansion opportunities.", "complexity": "medium", "alternatives": ["We could also look at this data as a percentage of total customers to get relative market penetration by state", "For more detailed geographic analysis, we could further break this down by county or city within each state"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "How many customers live in each state, sorted by the number of customers in descending order?", "sql": "SELECT dummy_col, td.t_hour, COUNT(*) as page_count FROM catalog_page cp JOIN time_dim td ON cp.cp_start_date_sk = td.t_time_sk GROUP BY td.t_hour ORDER BY page_count DESC", "label": 0, "tables": ["catalog_page", "time_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "How many customers live in each state, sorted by the number of customers in descending order?", "sql": "SELECT dummy_col, ca_state, COUNT(DISTINCT c_customer_sk) AS customer_count FROM customer c JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk GROUP BY ca_state ORDER BY customer_count DESC", "label": 0, "tables": ["customer", "customer_address"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are all the different shipping modes and their carriers?", "paraphrases": ["# Paraphrases of \"What are all the different shipping modes and their carriers?\"\n\n1. Could you provide a complete list of the various transportation methods for shipping and the companies that offer them?\n\n2. What is the full range of shipping options available and which carriers provide each type of service?\n\n3. Can you enumerate all the distinct ways items can be shipped and identify which delivery companies handle each method?"], "sql": "SELECT sm_ship_mode_id, sm_type, sm_code, sm_carrier FROM ship_mode ORDER BY sm_carrier, sm_type;", "tables": ["ship_mode"], "columns": ["ship_mode.sm_carrier", "ship_mode.sm_type", "ship_mode.sm_ship_mode_id", "ship_mode.sm_code"], "business_intent": "To understand the complete range of shipping options available to the business and which carriers provide each option. This information can help in logistics planning, cost analysis, and ensuring appropriate shipping options are available for different customer needs.", "complexity": "easy", "alternatives": ["SELECT * FROM ship_mode ORDER BY sm_carrier;", "SELECT DISTINCT sm_carrier, sm_type FROM ship_mode ORDER BY sm_carrier, sm_type;"], "sql_features": ["order_by"], "label": 1}
{"nl": "What are all the different shipping modes and their carriers?", "sql": "SELECT dummy_col, w_state, AVG(w_warehouse_sq_ft) AS avg_square_footage FROM warehouse GROUP BY w_state ORDER BY w_state", "label": 0, "tables": ["warehouse"], "columns": ["warehouse.w_state", "warehouse.w_warehouse_sq_ft"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What are all the different shipping modes and their carriers?", "sql": "SELECT dummy_col, sm_ship_mode_id, sm_type, sm_code, sm_carrier FROM ship_mode ORDER BY sm_carrier, sm_type;", "label": 0, "tables": ["ship_mode"], "columns": ["ship_mode.sm_ship_mode_id", "ship_mode.sm_type", "ship_mode.sm_code", "ship_mode.sm_carrier"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "How many websites do we have in each state within the United States?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. What is the distribution of websites across each state in the US?\n\n2. Could you provide a count of websites that exist in every individual state throughout the United States?\n\n3. For each state within the USA, what are the total numbers of websites present?"], "sql": "SELECT ca_state, COUNT(web_site_sk) AS website_count FROM web_site JOIN customer_address ON web_site.web_site_sk = customer_address.ca_address_sk WHERE ca_country = 'United States' GROUP BY ca_state ORDER BY website_count DESC", "tables": ["web_site", "customer_address"], "columns": ["web_site.web_site_sk", "customer_address.ca_address_sk"], "business_intent": "To understand the geographic distribution of websites across different states within the US, which can help with regional marketing strategies, resource allocation, and identifying potential expansion opportunities or underserved regions.", "complexity": "medium", "alternatives": ["We could also analyze website distribution by city or county level for more granular insights, or examine how many websites were opened or closed in each state over specific time periods using the web_rec_start_date and web_rec_end_date columns."], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "How many websites do we have in each state within the United States?", "sql": "SELECT AVG(hd_dep_count) as avg_dependents FROM household_demographics WHERE hd_buy_potential = 'High'", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_buy_potential", "household_demographics.hd_dep_count"], "sql_features": ["filter"], "complexity": "easy"}
{"nl": "How many websites do we have in each state within the United States?", "sql": "SELECT dummy_col, ca_state, COUNT(web_site_sk) AS website_count FROM web_site JOIN customer_address ON web_site.web_site_sk = customer_address.ca_address_sk WHERE ca_country = 'United States' GROUP BY ca_state ORDER BY website_count DESC", "label": 0, "tables": ["web_site", "customer_address"], "columns": ["web_site.web_site_sk", "customer_address.ca_address_sk"], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total web sales amount for products displayed on catalog pages from the clothing department?", "paraphrases": ["Here are three different paraphrases of the original question:\n\n1. How much revenue was generated from online purchases of clothing items featured in catalog pages?\n\n2. What is the sum of all web-based sales for products from the clothing department that were shown on catalog pages?\n\n3. For clothing department merchandise that appeared on catalog pages, what was the aggregate amount of sales made through the website?"], "sql": "SELECT SUM(ws_net_paid) AS total_sales FROM web_sales ws JOIN catalog_page cp ON ws.ws_catalog_page_sk = cp.cp_catalog_page_sk WHERE cp.cp_department = 'clothing'", "tables": ["web_sales", "catalog_page"], "columns": [], "business_intent": "To measure the effectiveness of clothing department catalog pages in driving online sales, allowing business leaders to assess catalog marketing performance for this specific department.", "complexity": "medium", "alternatives": ["An alternative approach could analyze conversion rates by comparing catalog page views to actual purchases, or segment the analysis by time periods to identify seasonal trends in clothing catalog effectiveness."], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What is the total web sales amount for products displayed on catalog pages from the clothing department?", "sql": "SELECT s_state, SUM(cs_net_paid) as total_revenue FROM catalog_sales JOIN store ON cs_bill_customer_sk = s_store_sk GROUP BY s_state ORDER BY total_revenue DESC", "label": 0, "tables": ["catalog_sales", "store"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total web sales amount for products displayed on catalog pages from the clothing department?", "sql": "SELECT dummy_col, SUM(ws_net_paid) AS total_sales FROM web_sales ws JOIN catalog_page cp ON ws.ws_catalog_page_sk = cp.cp_catalog_page_sk WHERE cp.cp_department = 'clothing'", "label": 0, "tables": ["web_sales", "catalog_page"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "How many items were returned for each reason?", "paraphrases": ["# Paraphrased Versions of \"How many items were returned for each reason?\"\n\n1. What is the breakdown of returned items by reason category?\n\n2. Could you provide the count of returns organized by each return reason?\n\n3. For each return reason, what was the total number of items sent back?"], "sql": "SELECT r.r_reason_desc, COUNT(sr.sr_item_sk) AS number_of_items_returned FROM store_returns sr JOIN reason r ON sr.sr_reason_sk = r.r_reason_sk GROUP BY r.r_reason_desc ORDER BY number_of_items_returned DESC", "tables": ["store_returns", "reason"], "columns": [], "business_intent": "To analyze the distribution of product returns by reason category, which helps identify common causes for returns and potentially address issues with products, policies, or customer expectations.", "complexity": "easy", "alternatives": ["We could also analyze this by return value instead of count using SUM(sr_return_amt) to understand the financial impact of each return reason."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "How many items were returned for each reason?", "sql": "SELECT p.p_promo_id, p.p_promo_name, p.p_channel_dmail, p.p_channel_email, p.p_channel_tv, p.p_channel_radio \nFROM promotion p \nJOIN date_dim d1 ON p.p_start_date_sk = d1.d_date_sk \nJOIN date_dim d2 ON p.p_end_date_sk = d2.d_date_sk \nWHERE (d1.d_year = 2001 AND d1.d_moy = 12) \nOR (d2.d_year = 2001 AND d2.d_moy = 12) \nOR (d1.d_year < 2001 AND d2.d_year > 2001) \nOR (d1.d_year = 2001 AND d1.d_moy < 12 AND d2.d_year = 2001 AND d2.d_moy > 12) \nOR (d1.d_year = 2001 AND d1.d_moy < 12 AND d2.d_year > 2001) \nOR (d1.d_year < 2001 AND d2.d_year = 2001 AND d2.d_moy > 12);", "label": 0, "tables": ["promotion", "date_dim"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "How many items were returned for each reason?", "sql": "SELECT dummy_col, r.r_reason_desc, COUNT(sr.sr_item_sk) AS number_of_items_returned FROM store_returns sr JOIN reason r ON sr.sr_reason_sk = r.r_reason_sk GROUP BY r.r_reason_desc ORDER BY number_of_items_returned DESC", "label": 0, "tables": ["store_returns", "reason"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "How many call centers have closed before 2005?", "paraphrases": ["Here are three paraphrases of the original question:\n\n1. What was the number of call centers that shut down prior to 2005?\n\n2. Before the year 2005, how many call center facilities ceased operations?\n\n3. Could you provide the count of call centers that terminated their business activities before 2005?"], "sql": "SELECT COUNT(*) FROM call_center JOIN date_dim ON cc_closed_date_sk = d_date_sk WHERE d_year < 2005 AND cc_closed_date_sk IS NOT NULL", "tables": ["date_dim", "call_center"], "columns": [], "business_intent": "To understand the historical closure pattern of call centers before a specific year, which helps in analyzing operational trends, business consolidation, or restructuring that happened in the early 2000s.", "complexity": "medium", "alternatives": ["We could also approach this by first identifying all closed call centers and then filtering by date, or by using a subquery to identify dates before 2005 and then joining with call centers."], "sql_features": ["join", "filter"], "label": 1}
{"nl": "How many call centers have closed before 2005?", "sql": "SELECT AVG(ib_lower_bound) FROM income_band", "label": 0, "tables": ["income_band"], "columns": ["income_band.ib_lower_bound"], "sql_features": [], "complexity": "easy"}
{"nl": "How many call centers have closed before 2005?", "sql": "SELECT dummy_col, COUNT(*) FROM call_center JOIN date_dim ON cc_closed_date_sk = d_date_sk WHERE d_year < 2005 AND cc_closed_date_sk IS NOT NULL", "label": 0, "tables": ["date_dim", "call_center"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "How many customers are currently located in each state, and which state has the highest number of customers?", "paraphrases": ["# Paraphrases of the Question\n\n1. What is the current customer distribution by state, and which state holds the largest customer population?\n\n2. Could you provide a breakdown of customer counts per state and identify the state with the maximum customer concentration?\n\n3. How are customers presently distributed across different states, and which state leads in total customer numbers?"], "sql": "SELECT ca.ca_state, COUNT(c.c_customer_sk) AS customer_count FROM customer c JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk GROUP BY ca.ca_state ORDER BY customer_count DESC", "tables": ["customer", "customer_address"], "columns": [], "business_intent": "To understand the geographic distribution of customers by state, helping with regional marketing strategies, resource allocation, and identifying key market regions. This analysis supports decisions related to targeted marketing campaigns, regional expansion, and customer service resource planning.", "complexity": "medium", "alternatives": ["We could use a subquery approach: SELECT ca_state, customer_count FROM (SELECT ca.ca_state, COUNT(c.c_customer_sk) AS customer_count FROM customer c JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk GROUP BY ca.ca_state) AS state_counts ORDER BY customer_count DESC", "To just get the top state: SELECT ca.ca_state, COUNT(c.c_customer_sk) AS customer_count FROM customer c JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk GROUP BY ca.ca_state ORDER BY customer_count DESC LIMIT 1"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "How many customers are currently located in each state, and which state has the highest number of customers?", "sql": "SELECT dummy_col, s.s_store_id, s.s_store_name, COUNT(*) AS return_count FROM catalog_returns cr JOIN store s ON cr.cr_store_sk = s.s_store_sk GROUP BY s.s_store_id, s.s_store_name ORDER BY return_count DESC", "label": 0, "tables": ["catalog_returns", "store"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "How many customers are currently located in each state, and which state has the highest number of customers?", "sql": "SELECT dummy_col, ca.ca_state, COUNT(c.c_customer_sk) AS customer_count FROM customer c JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk GROUP BY ca.ca_state ORDER BY customer_count DESC", "label": 0, "tables": ["customer", "customer_address"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the average hourly distribution of call center operations throughout the day?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How are call center activities distributed, on average, across different hours of the day?\n\n2. What does the typical hourly breakdown of call center workload look like throughout a day?\n\n3. On average, how do call center operations vary from hour to hour during the course of a day?"], "sql": "SELECT t.t_hour, COUNT(*) as operation_count FROM time_dim t JOIN call_center cc ON t.t_time_sk = cc.cc_call_center_sk GROUP BY t.t_hour ORDER BY t.t_hour", "tables": ["call_center", "time_dim"], "columns": [], "business_intent": "To analyze call center operation patterns throughout the day by hour, which helps in resource planning, staffing decisions, and identifying peak operational hours. This information can be used to optimize staff scheduling and improve service levels during high-volume periods.", "complexity": "medium", "alternatives": ["We could also analyze this data by different time periods like morning/afternoon/evening by using t_am_pm or t_shift columns instead of t_hour", "For a more detailed analysis, we could include additional dimensions like day of week or season, if such columns were available in the schema"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the average hourly distribution of call center operations throughout the day?", "sql": "SELECT SUM(ss_quantity) AS total_items_sold, SUM(sr_return_quantity) AS total_items_returned, ROUND(SUM(sr_return_quantity)*100.0/SUM(ss_quantity), 2) AS return_percentage FROM store_sales LEFT JOIN store_returns ON ss_item_sk = sr_item_sk AND ss_customer_sk = sr_customer_sk", "label": 0, "tables": ["store_returns", "store_sales"], "columns": [], "sql_features": ["join"], "complexity": "hard"}
{"nl": "What is the average hourly distribution of call center operations throughout the day?", "sql": "SELECT dummy_col, t.t_hour, COUNT(*) as operation_count FROM time_dim t JOIN call_center cc ON t.t_time_sk = cc.cc_call_center_sk GROUP BY t.t_hour ORDER BY t.t_hour", "label": 0, "tables": ["call_center", "time_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of online sales by hour of the day?", "paraphrases": ["# Paraphrases of \"What is the distribution of online sales by hour of the day?\"\n\n1. How are online sales distributed across different hours throughout the day?\n\n2. What pattern emerges when analyzing online sales according to the time of day?\n\n3. How do online sales figures vary from hour to hour during a 24-hour period?"], "sql": "SELECT t.t_hour, COUNT(*) as num_sales, SUM(ws_net_paid) as total_sales_amount FROM web_sales ws JOIN time_dim t ON ws.ws_sold_time_sk = t.t_time_sk GROUP BY t.t_hour ORDER BY t.t_hour", "tables": ["web_sales", "time_dim"], "columns": [], "business_intent": "To understand the hourly sales patterns in online transactions, which can help optimize staffing, website infrastructure, marketing campaigns, and identify peak shopping hours for the e-commerce business.", "complexity": "medium", "alternatives": ["Could analyze hourly sales as a percentage of daily total to show relative importance of each hour", "Could include additional dimensions like day of week to see if hourly patterns differ between weekdays and weekends"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of online sales by hour of the day?", "sql": "SELECT dummy_col, d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "label": 0, "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of online sales by hour of the day?", "sql": "SELECT dummy_col, t.t_hour, COUNT(*) as num_sales, SUM(ws_net_paid) as total_sales_amount FROM web_sales ws JOIN time_dim t ON ws.ws_sold_time_sk = t.t_time_sk GROUP BY t.t_hour ORDER BY t.t_hour", "label": 0, "tables": ["web_sales", "time_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total inventory quantity on hand across all warehouses for the most recent date in our records?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. As of the latest recorded date, what's the sum of all inventory quantities stored across every warehouse?\n\n2. For the most recent date available in our data, what is the combined total of inventory currently held in all warehouse locations?\n\n3. What quantity of inventory do we have altogether across all warehouses, according to our most up-to-date records?"], "sql": "SELECT SUM(inv_quantity_on_hand) AS total_inventory\nFROM inventory\nWHERE inv_date_sk = (SELECT MAX(inv_date_sk) FROM inventory)", "tables": ["inventory"], "columns": ["inventory.inv_date_sk", "inventory.inv_quantity_on_hand"], "business_intent": "To assess the current total inventory levels across all warehouse locations, providing management with an understanding of overall stock position on the most recent recorded date. This information is crucial for inventory management, financial reporting, and supply chain planning.", "complexity": "medium", "alternatives": ["We could also calculate this by first grouping by warehouse and then summing those totals, or by filtering for a specific date if we know it rather than using a subquery to find the maximum date."], "sql_features": ["filter", "subquery"], "label": 1}
{"nl": "What is the total inventory quantity on hand across all warehouses for the most recent date in our records?", "sql": "SELECT dummy_col, COUNT(*) AS total_returns\nFROM web_returns wr\nJOIN date_dim d ON wr.wr_returned_date_sk = d.d_date_sk\nWHERE d.d_year = 2002 AND d.d_month = 12", "label": 0, "tables": ["web_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What is the total inventory quantity on hand across all warehouses for the most recent date in our records?", "sql": "SELECT dummy_col, SUM(inv_quantity_on_hand) AS total_inventory\nFROM inventory\nWHERE inv_date_sk = (SELECT MAX(inv_date_sk) FROM inventory)", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_date_sk", "inventory.inv_quantity_on_hand"], "sql_features": ["filter", "subquery"], "complexity": "hard"}
{"nl": "What is the total quantity of items returned through the web channel across all warehouses?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Across all warehouses, what is the aggregate number of items that were returned via the web channel?\n\n2. How many total items were sent back through online returns when considering all warehouse locations combined?\n\n3. What's the sum of all products returned through internet channels, tallied across every warehouse facility?"], "sql": "SELECT SUM(i.inv_quantity_on_hand) AS total_returned_quantity FROM inventory i JOIN web_returns wr ON i.inv_item_sk = wr.wr_item_sk", "tables": ["web_returns", "inventory"], "columns": [], "business_intent": "To analyze the total inventory impact of web-based returns. This helps operations teams understand the volume of returned merchandise that needs to be managed in warehouse inventory and can inform restocking, quality control, and inventory management strategies.", "complexity": "easy", "alternatives": ["The query could be refined by adding date filters to analyze returns within specific time periods, or by grouping by warehouse to see distribution of returned items across different locations."], "sql_features": ["join"], "label": 1}
{"nl": "What is the total quantity of items returned through the web channel across all warehouses?", "sql": "SELECT dummy_col, r.r_reason_desc, SUM(cs.cs_quantity) as total_quantity FROM catalog_sales cs JOIN reason r ON cs.cs_reason_sk = r.r_reason_sk GROUP BY r.r_reason_desc ORDER BY total_quantity DESC", "label": 0, "tables": ["catalog_sales", "reason"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total quantity of items returned through the web channel across all warehouses?", "sql": "SELECT dummy_col, SUM(i.inv_quantity_on_hand) AS total_returned_quantity FROM inventory i JOIN web_returns wr ON i.inv_item_sk = wr.wr_item_sk", "label": 0, "tables": ["web_returns", "inventory"], "columns": [], "sql_features": ["join"], "complexity": "hard"}
{"nl": "What is the average inventory quantity on hand across all warehouses?", "sql": "SELECT dummy_col, cp_department, COUNT(*) AS page_count FROM catalog_page WHERE cp_start_date_sk <= (SELECT d_date_sk FROM date_dim WHERE d_date = '2002-06-30') AND (cp_end_date_sk IS NULL OR cp_end_date_sk >= (SELECT d_date_sk FROM date_dim WHERE d_date = '2002-01-01')) GROUP BY cp_department ORDER BY page_count DESC", "label": 0, "tables": ["date_dim", "catalog_page"], "columns": [], "sql_features": ["filter", "group_by", "order_by", "subquery"], "complexity": "hard"}
{"nl": "What are the upper and lower bounds for each income band?", "paraphrases": ["# Paraphrases of \"What are the upper and lower bounds for each income band?\"\n\n1. Could you specify the minimum and maximum thresholds for every income category?\n\n2. What are the ceiling and floor amounts that define each income bracket?\n\n3. For each income tier, what are the highest and lowest values that determine inclusion?"], "sql": "SELECT ib_income_band_sk, ib_lower_bound, ib_upper_bound FROM income_band ORDER BY ib_income_band_sk", "tables": ["income_band"], "columns": ["income_band.ib_lower_bound", "income_band.ib_upper_bound", "income_band.ib_income_band_sk"], "business_intent": "To understand the defined income segments in the system by examining the specific income ranges that each band covers. This information is essential for income-based customer segmentation, marketing analysis, and financial reporting.", "complexity": "easy", "alternatives": ["SELECT * FROM income_band ORDER BY ib_lower_bound", "SELECT ib_income_band_sk AS band_id, ib_lower_bound AS min_income, ib_upper_bound AS max_income FROM income_band"], "sql_features": ["order_by"], "label": 1}
{"nl": "What are the upper and lower bounds for each income band?", "sql": "SELECT ca_city, COUNT(*) as address_count FROM customer_address GROUP BY ca_city ORDER BY address_count DESC LIMIT 5", "label": 0, "tables": ["customer_address"], "columns": ["customer_address.ca_city"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What are the upper and lower bounds for each income band?", "sql": "SELECT dummy_col, ib_income_band_sk, ib_lower_bound, ib_upper_bound FROM income_band ORDER BY ib_income_band_sk", "label": 0, "tables": ["income_band"], "columns": ["income_band.ib_lower_bound", "income_band.ib_upper_bound", "income_band.ib_income_band_sk"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What's the total number of returns processed by each warehouse?", "paraphrases": ["# Paraphrases of \"What's the total number of returns processed by each warehouse?\"\n\n1. How many returns did each warehouse process in total?\n\n2. Could you provide the cumulative count of returned items handled by individual warehouses?\n\n3. For each warehouse facility, what is the aggregate number of returns that have been processed?"], "sql": "SELECT w.w_warehouse_name, COUNT(*) as return_count FROM catalog_returns cr JOIN warehouse w ON cr.cr_warehouse_sk = w.w_warehouse_sk GROUP BY w.w_warehouse_name ORDER BY return_count DESC", "tables": ["catalog_returns", "warehouse"], "columns": [], "business_intent": "To analyze the distribution of return processing workload across different warehouse facilities, which can help in resource allocation, staffing decisions, and identifying warehouses that may be handling an unusually high or low volume of returns.", "complexity": "easy", "alternatives": ["We could add time dimensions to see return counts by warehouse over different time periods, or include product categories to see what types of products each warehouse processes most frequently."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What's the total number of returns processed by each warehouse?", "sql": "SELECT ca.ca_state, COUNT(*) as sale_count FROM store_sales ss JOIN customer_address ca ON ss.ss_customer_sk = ca.ca_address_sk GROUP BY ca.ca_state ORDER BY sale_count DESC LIMIT 1;", "label": 0, "tables": ["store_sales", "customer_address"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What's the total number of returns processed by each warehouse?", "sql": "SELECT dummy_col, w.w_warehouse_name, COUNT(*) as return_count FROM catalog_returns cr JOIN warehouse w ON cr.cr_warehouse_sk = w.w_warehouse_sk GROUP BY w.w_warehouse_name ORDER BY return_count DESC", "label": 0, "tables": ["catalog_returns", "warehouse"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "How many web pages were created in each month of the year 2000?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. For each month during the year 2000, what was the total number of web pages created?\n\n2. What is the monthly breakdown of web page creation throughout 2000?\n\n3. In the year 2000, how many new web pages were developed during each individual month?"], "sql": "SELECT d.d_month, COUNT(wp.wp_web_page_sk) AS page_count \nFROM web_page wp \nJOIN date_dim d ON wp.wp_creation_date_sk = d.d_date_sk \nWHERE d.d_year = 2000 \nGROUP BY d.d_month \nORDER BY d.d_month", "tables": ["web_page", "date_dim"], "columns": [], "business_intent": "To analyze the web page creation pattern throughout 2000, providing insight into content development trends by month. This helps understand when web content creation was most active during that year and could inform future content scheduling strategies.", "complexity": "medium", "alternatives": ["Could also use d_month_seq instead of d_month for chronological ordering", "Could include additional metrics like average page size by joining with other columns from web_page table"], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "How many web pages were created in each month of the year 2000?", "sql": "SELECT ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound, COUNT(c.c_customer_sk) AS customer_count FROM income_band ib LEFT JOIN customer c ON c.c_income_band_id = ib.ib_income_band_sk GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_lower_bound;", "label": 0, "tables": ["income_band", "customer"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "How many web pages were created in each month of the year 2000?", "sql": "SELECT dummy_col, d.d_month, COUNT(wp.wp_web_page_sk) AS page_count \nFROM web_page wp \nJOIN date_dim d ON wp.wp_creation_date_sk = d.d_date_sk \nWHERE d.d_year = 2000 \nGROUP BY d.d_month \nORDER BY d.d_month", "label": 0, "tables": ["web_page", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "Which item categories have products with the highest current prices, and what are those prices?", "paraphrases": ["# Paraphrases of the Original Question\n\n1) What product groups contain the most expensive items, and how much do these items cost currently?\n\n2) In which merchandise classifications can we find the priciest products, and what are their current price points?\n\n3) What are the maximum current prices across different product categories, and which categories contain these high-priced items?"], "sql": "SELECT i_category, MAX(i_current_price) AS max_price\nFROM item\nGROUP BY i_category\nORDER BY max_price DESC", "tables": ["item"], "columns": ["item.i_current_price", "item.i_category"], "business_intent": "To identify which product categories contain the most premium-priced items, helping the business understand their high-value product segments for pricing strategy, premium market positioning, or potential profit margin analysis.", "complexity": "easy", "alternatives": ["Could be expanded to include the specific item names that have these maximum prices by using a window function or subquery", "Could limit results to top N categories by adding a LIMIT clause to focus on the most valuable segments"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "Which item categories have products with the highest current prices, and what are those prices?", "sql": "SELECT s_state, SUM(cs_net_paid) as total_revenue FROM catalog_sales JOIN store ON cs_bill_customer_sk = s_store_sk GROUP BY s_state ORDER BY total_revenue DESC", "label": 0, "tables": ["catalog_sales", "store"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "Which item categories have products with the highest current prices, and what are those prices?", "sql": "SELECT dummy_col, i_category, MAX(i_current_price) AS max_price\nFROM item\nGROUP BY i_category\nORDER BY max_price DESC", "label": 0, "tables": ["item"], "columns": ["item.i_current_price", "item.i_category"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "Which shipping carriers are used by our business?", "paraphrases": ["# Paraphrases of \"Which shipping carriers are used by our business?\"\n\n1. What transportation companies does our organization employ for deliveries?\n\n2. Which logistics providers does our company currently utilize for shipping products?\n\n3. What delivery services are contracted by our firm to transport our shipments?"], "sql": "SELECT DISTINCT sm_carrier FROM ship_mode;", "tables": ["ship_mode"], "columns": ["ship_mode.sm_carrier"], "business_intent": "To identify all unique shipping carriers or logistics providers the business works with, which helps in analyzing vendor relationships and shipping options available to customers.", "complexity": "easy", "alternatives": ["SELECT sm_carrier FROM ship_mode GROUP BY sm_carrier;", "SELECT sm_carrier FROM ship_mode ORDER BY sm_carrier;"], "sql_features": [], "label": 1}
{"nl": "Which shipping carriers are used by our business?", "sql": "SELECT COUNT(*) FROM call_center JOIN date_dim ON cc_closed_date_sk = d_date_sk WHERE d_year < 2005 AND cc_closed_date_sk IS NOT NULL", "label": 0, "tables": ["date_dim", "call_center"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "Which shipping carriers are used by our business?", "sql": "SELECT DISTINCT dummy_col, sm_carrier FROM ship_mode;", "label": 0, "tables": ["ship_mode"], "columns": ["ship_mode.sm_carrier"], "sql_features": [], "complexity": "easy"}
{"nl": "What are all the distinct reasons stored in the reason table?", "paraphrases": ["# Paraphrasing the Question\n\n1. Can you list all the unique reasons that exist in the reason table?\n\n2. Please provide all the different reason entries contained in the reason table, without duplicates.\n\n3. What is the complete set of distinct reason values that can be found in the reason table?"], "sql": "SELECT r_reason_id, r_reason_desc FROM reason ORDER BY r_reason_id;", "tables": ["reason"], "columns": ["reason.r_reason_id", "reason.r_reason_desc"], "business_intent": "To retrieve a comprehensive list of all distinct reason codes and their descriptions for reference purposes. This information is useful for reporting, data validation, and understanding the categorization system used across the business.", "complexity": "easy", "alternatives": ["SELECT * FROM reason ORDER BY r_reason_sk;", "SELECT r_reason_sk, r_reason_id, r_reason_desc FROM reason;"], "sql_features": ["order_by"], "label": 1}
{"nl": "What are all the distinct reasons stored in the reason table?", "sql": "SELECT DISTINCT dummy_col, ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound FROM income_band ib JOIN web_site ws ON ws.web_rec_end_date IS NULL OR ws.web_rec_end_date > CURRENT_DATE", "label": 0, "tables": ["income_band", "web_site"], "columns": [], "sql_features": ["join"], "complexity": "hard"}
{"nl": "What are all the distinct reasons stored in the reason table?", "sql": "SELECT dummy_col, r_reason_id, r_reason_desc FROM reason ORDER BY r_reason_id;", "label": 0, "tables": ["reason"], "columns": ["reason.r_reason_id", "reason.r_reason_desc"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What are the top 5 dates with the highest catalog sales shipping volume in 2022?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. In 2022, which five dates recorded the greatest volume of catalog sales shipments?\n\n2. During the 2022 calendar year, on which five days did shipping volume for catalog sales reach its highest levels?\n\n3. Looking at catalog sales shipping data from 2022, which five specific dates had the most volume?"], "sql": "SELECT d.d_date, COUNT(*) as shipping_volume FROM catalog_sales cs JOIN date_dim d ON cs.cs_ship_date_sk = d.d_date_sk WHERE d.d_year = 2022 GROUP BY d.d_date ORDER BY shipping_volume DESC LIMIT 5", "tables": ["catalog_sales", "date_dim"], "columns": [], "business_intent": "To identify peak shipping days in 2022 to help optimize warehouse staffing, logistics planning, and inventory management based on historical shipping patterns.", "complexity": "medium", "alternatives": ["We could measure shipping volume by quantity shipped (cs_quantity) instead of order count, or analyze by month instead of specific dates to identify seasonal patterns"], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What are the top 5 dates with the highest catalog sales shipping volume in 2022?", "sql": "SELECT dummy_col, AVG(inv_quantity_on_hand) AS avg_quantity FROM inventory;", "label": 0, "tables": ["inventory"], "columns": ["inventory.inv_quantity_on_hand"], "sql_features": [], "complexity": "easy"}
{"nl": "What are the top 5 dates with the highest catalog sales shipping volume in 2022?", "sql": "SELECT dummy_col, d.d_date, COUNT(*) as shipping_volume FROM catalog_sales cs JOIN date_dim d ON cs.cs_ship_date_sk = d.d_date_sk WHERE d.d_year = 2022 GROUP BY d.d_date ORDER BY shipping_volume DESC LIMIT 5", "label": 0, "tables": ["catalog_sales", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of vehicle counts across all household demographics?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How are car ownership numbers spread across different household demographic categories?\n\n2. Across various demographic groups of households, what pattern can we observe in the number of vehicles owned?\n\n3. What is the breakdown of automobile possession quantities when examining all types of household demographic classifications?"], "sql": "SELECT hd_vehicle_count, COUNT(*) as household_count FROM household_demographics GROUP BY hd_vehicle_count ORDER BY hd_vehicle_count", "tables": ["household_demographics"], "columns": ["household_demographics.hd_vehicle_count"], "business_intent": "To analyze the distribution of vehicle ownership across households, which helps in understanding transportation asset patterns within different demographic segments. This information can be valuable for marketing strategies targeting households based on their vehicle ownership status.", "complexity": "easy", "alternatives": ["We could also cross-reference this with income bands by including hd_income_band_sk in the analysis to see if there's a correlation between income level and vehicle ownership."], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of vehicle counts across all household demographics?", "sql": "SELECT d.d_month, SUM(cr.cr_return_amount) as total_returns\nFROM catalog_returns cr\nJOIN date_dim d ON cr.cr_returned_date_sk = d.d_date_sk\nWHERE d.d_year = 2002\nGROUP BY d.d_month\nORDER BY d.d_month", "label": 0, "tables": ["catalog_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of vehicle counts across all household demographics?", "sql": "SELECT dummy_col, hd_vehicle_count, COUNT(*) as household_count FROM household_demographics GROUP BY hd_vehicle_count ORDER BY hd_vehicle_count", "label": 0, "tables": ["household_demographics"], "columns": ["household_demographics.hd_vehicle_count"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What are the three most common reasons for web sales?", "paraphrases": ["# Paraphrases of \"What are the three most common reasons for web sales?\"\n\n1. What are the top three factors that typically drive online sales?\n\n2. Which three reasons most frequently contribute to sales on websites?\n\n3. What are the three primary motivations behind purchases made on the internet?"], "sql": "SELECT r.r_reason_desc, COUNT(*) as count FROM web_sales ws JOIN reason r ON ws.ws_web_site_sk = r.r_reason_sk GROUP BY r.r_reason_desc ORDER BY count DESC LIMIT 3", "tables": ["web_sales", "reason"], "columns": [], "business_intent": "To identify the most common reasons associated with web sales, which can help the business understand customer motivations and potentially improve marketing strategies or address common issues in the sales process.", "complexity": "easy", "alternatives": ["We could analyze reasons by sales volume (sum of sales amount) rather than count of transactions to see which reasons drive the most revenue."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What are the three most common reasons for web sales?", "sql": "SELECT dummy_col, cd_gender, SUM(sr_return_amt) as total_return_amount FROM store_returns JOIN customer_demographics ON sr_cdemo_sk = cd_demo_sk GROUP BY cd_gender ORDER BY total_return_amount DESC", "label": 0, "tables": ["store_returns", "customer_demographics"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the three most common reasons for web sales?", "sql": "SELECT dummy_col, r.r_reason_desc, COUNT(*) as count FROM web_sales ws JOIN reason r ON ws.ws_web_site_sk = r.r_reason_sk GROUP BY r.r_reason_desc ORDER BY count DESC LIMIT 3", "label": 0, "tables": ["web_sales", "reason"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total square footage of all warehouses?", "sql": "SELECT p_promo_id, p_promo_name, p_cost, p_end_date_sk \nFROM promotion \nWHERE p_cost > 1000 \nORDER BY p_end_date_sk DESC \nLIMIT 5;", "label": 0, "tables": ["promotion"], "columns": ["promotion.p_end_date_sk", "promotion.p_promo_id", "promotion.p_cost", "promotion.p_promo_name"], "sql_features": ["filter", "order_by"], "complexity": "easy"}
{"nl": "What is the total number of returns by day of the week for the year 2002?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. For the year 2002, how many returns occurred on each day of the week in total?\n\n2. Can you provide a breakdown of the total return count by weekday for 2002?\n\n3. When looking at all returns in 2002, what were the total figures for each day of the week?"], "sql": "SELECT d_day_name, COUNT(*) as return_count FROM catalog_returns cr JOIN date_dim d ON cr.cr_returned_date_sk = d.d_date_sk WHERE d.d_year = 2002 GROUP BY d_day_name ORDER BY return_count DESC", "tables": ["catalog_returns", "date_dim"], "columns": [], "business_intent": "To analyze return patterns by day of the week in order to identify which days have higher return volumes. This information can help with staffing decisions, return processing resource allocation, and understanding customer return behavior patterns throughout the week.", "complexity": "medium", "alternatives": ["Could also analyze returns by day of week and quarter to see if patterns change throughout the year", "Could compare return counts by day of week across multiple years to identify trends or changes in customer behavior"], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What is the total number of returns by day of the week for the year 2002?", "sql": "SELECT dummy_col, i.i_category, SUM(ws.ws_net_paid) as total_sales FROM web_sales ws JOIN item i ON ws.ws_item_sk = i.i_item_sk GROUP BY i.i_category ORDER BY total_sales DESC", "label": 0, "tables": ["web_sales", "item"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total number of returns by day of the week for the year 2002?", "sql": "SELECT dummy_col, d_day_name, COUNT(*) as return_count FROM catalog_returns cr JOIN date_dim d ON cr.cr_returned_date_sk = d.d_date_sk WHERE d.d_year = 2002 GROUP BY d_day_name ORDER BY return_count DESC", "label": 0, "tables": ["catalog_returns", "date_dim"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total square footage across all warehouses?", "paraphrases": ["# Paraphrases of \"What is the total square footage across all warehouses?\"\n\n1. What is the combined square footage of every warehouse in the system?\n\n2. If you add up the square footage of all warehouses, what is the total amount?\n\n3. Across the entire warehouse network, what is the sum of all available square footage?"], "sql": "SELECT SUM(w_warehouse_sq_ft) AS total_square_footage FROM warehouse", "tables": ["warehouse"], "columns": ["warehouse.w_warehouse_sq_ft"], "business_intent": "To understand the total physical capacity available across all warehouse facilities, which can help with space utilization analysis, capacity planning, and asset management.", "complexity": "easy", "alternatives": ["SELECT SUM(w_warehouse_sq_ft) AS total_square_footage, COUNT(*) AS warehouse_count, AVG(w_warehouse_sq_ft) AS avg_square_footage FROM warehouse"], "sql_features": [], "label": 1}
{"nl": "What is the total square footage across all warehouses?", "sql": "SELECT dummy_col, p.p_promo_id, d1.d_date AS start_date, d2.d_date AS end_date \nFROM promotion p \nJOIN date_dim d1 ON p.p_start_date_sk = d1.d_date_sk \nJOIN date_dim d2 ON p.p_end_date_sk = d2.d_date_sk \nWHERE p.p_discount_active = 'Y' AND p.p_email_ind = 'Y' \nORDER BY start_date;", "label": 0, "tables": ["promotion", "date_dim"], "columns": [], "sql_features": ["join", "filter", "order_by"], "complexity": "hard"}
{"nl": "What is the total square footage across all warehouses?", "sql": "SELECT dummy_col, SUM(w_warehouse_sq_ft) AS total_square_footage FROM warehouse", "label": 0, "tables": ["warehouse"], "columns": ["warehouse.w_warehouse_sq_ft"], "sql_features": [], "complexity": "easy"}
{"nl": "What are the states and the total number of warehouses in each state?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Could you provide a breakdown of warehouse distribution by state, listing each state and the total number of warehouses it contains?\n\n2. How many warehouses are located in each state, and what is the complete list of states with warehouses?\n\n3. Please identify all states with warehouses and specify the warehouse count for each of these states."], "sql": "SELECT w_state, COUNT(*) as warehouse_count FROM warehouse GROUP BY w_state ORDER BY w_state", "tables": ["warehouse"], "columns": ["warehouse.w_state"], "business_intent": "To understand the geographic distribution of warehouses across different states, which helps with logistics planning, resource allocation, and supply chain management. This information can be used to identify areas with high or low warehouse density.", "complexity": "easy", "alternatives": ["SELECT w_state, COUNT(w_warehouse_sk) as warehouse_count FROM warehouse GROUP BY w_state ORDER BY warehouse_count DESC", "SELECT w_state, COUNT(w_warehouse_id) as warehouse_count FROM warehouse GROUP BY w_state"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What are the states and the total number of warehouses in each state?", "sql": "SELECT p.p_promo_id, p.p_promo_name, SUM(ss.ss_net_paid) as total_sales\nFROM store_sales ss\nJOIN promotion p ON ss.ss_promo_sk = p.p_promo_sk\nWHERE EXTRACT(YEAR FROM ss.ss_sold_date_sk::date) = 2022\nGROUP BY p.p_promo_id, p.p_promo_name\nHAVING SUM(ss.ss_net_paid) > 10000\nORDER BY total_sales DESC", "label": 0, "tables": ["promotion", "store_sales"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the states and the total number of warehouses in each state?", "sql": "SELECT dummy_col, w_state, COUNT(*) as warehouse_count FROM warehouse GROUP BY w_state ORDER BY w_state", "label": 0, "tables": ["warehouse"], "columns": ["warehouse.w_state"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the total number of returned items associated with promotions that used direct mail?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How many items were returned in total that were connected to direct mail promotions?\n\n2. Count the aggregate number of items that customers returned which were linked to promotions delivered via direct mail.\n\n3. For all promotions that utilized direct mail as their marketing channel, what was the sum of returned items?"], "sql": "SELECT SUM(sr_return_quantity) AS total_returned_items FROM store_returns JOIN promotion ON sr_item_sk = p_item_sk WHERE p_promo_direct_mail = 1", "tables": ["store_returns", "promotion"], "columns": [], "business_intent": "To evaluate the effectiveness of direct mail promotions by analyzing the volume of returned items that were promoted through this channel. This helps in understanding if direct mail campaigns are leading to higher returns, which could indicate issues with product representation or customer expectations.", "complexity": "medium", "alternatives": ["Could group by promotion ID to see which specific direct mail promotions had the highest return rates.", "Could include additional promotion channels to compare return rates across different marketing methods."], "sql_features": ["join", "filter"], "label": 1}
{"nl": "What is the total number of returned items associated with promotions that used direct mail?", "sql": "SELECT dummy_col, cd_gender, SUM(inv_quantity_on_hand) as total_quantity, AVG(inv_quantity_on_hand) as avg_quantity, COUNT(*) as count FROM customer_demographics JOIN inventory ON cd_demo_sk = inv_item_sk GROUP BY cd_gender ORDER BY cd_gender", "label": 0, "tables": ["customer_demographics", "inventory"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total number of returned items associated with promotions that used direct mail?", "sql": "SELECT dummy_col, SUM(sr_return_quantity) AS total_returned_items FROM store_returns JOIN promotion ON sr_item_sk = p_item_sk WHERE p_promo_direct_mail = 1", "label": 0, "tables": ["store_returns", "promotion"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What are the top 5 items with the highest return amounts in active promotions?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Which 5 products in currently running promotions have the greatest number of returns?\n\n2. Among items in active promotional campaigns, what are the five with the most returns?\n\n3. In ongoing promotions, which five merchandise items are being returned at the highest rates?"], "sql": "SELECT i.p_item_sk, SUM(cr.cr_return_amount) as total_return_amount\nFROM promotion i\nJOIN catalog_returns cr ON i.p_item_sk = cr.cr_item_sk\nWHERE i.p_discount_active = 'Y'\nGROUP BY i.p_item_sk\nORDER BY total_return_amount DESC\nLIMIT 5;", "tables": ["promotion", "catalog_returns"], "columns": [], "business_intent": "To identify which promoted items are experiencing high return values, which may indicate product quality issues or misleading marketing. This analysis helps marketing teams evaluate promotion effectiveness and potentially reconsider promoting problematic items.", "complexity": "medium", "alternatives": ["We could also analyze this by promotion period rather than just active promotions by joining with date dimension tables using p_start_date_sk and p_end_date_sk to filter for specific time periods."], "sql_features": ["join", "filter", "group_by", "order_by"], "label": 1}
{"nl": "What are the top 5 items with the highest return amounts in active promotions?", "sql": "SELECT dummy_col, r_reason_desc FROM reason ORDER BY r_reason_desc ASC;", "label": 0, "tables": ["reason"], "columns": ["reason.r_reason_desc"], "sql_features": ["order_by"], "complexity": "easy"}
{"nl": "What are the top 5 items with the highest return amounts in active promotions?", "sql": "SELECT dummy_col, i.p_item_sk, SUM(cr.cr_return_amount) as total_return_amount\nFROM promotion i\nJOIN catalog_returns cr ON i.p_item_sk = cr.cr_item_sk\nWHERE i.p_discount_active = 'Y'\nGROUP BY i.p_item_sk\nORDER BY total_return_amount DESC\nLIMIT 5;", "label": 0, "tables": ["promotion", "catalog_returns"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "How many customers are assigned to each web site based on their current address?", "paraphrases": ["# Paraphrases of Original Question\n\n1. Based on current addresses, what is the distribution of customers across each web site?\n\n2. What is the count of customers allocated to individual web sites according to their present address information?\n\n3. How is the customer population divided among different web sites when categorized by their current residential addresses?"], "sql": "SELECT w.web_site_id, w.web_name, COUNT(c.c_customer_sk) AS customer_count \nFROM customer c \nJOIN web_site w ON c.c_current_addr_sk = w.web_site_sk \nGROUP BY w.web_site_id, w.web_name \nORDER BY customer_count DESC", "tables": ["web_site", "customer"], "columns": [], "business_intent": "To analyze the geographic distribution of customers across different web sites by mapping customers' current addresses to web site locations. This helps understand which web sites are serving the most customers in specific regions and can inform regional marketing strategies or resource allocation.", "complexity": "medium", "alternatives": ["We could also join the customer table with the address table first and then join with web_site if more detailed geographic analysis is needed", "For more precise regional analysis, we could include additional columns from web_site like web_city or web_country in the select clause"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "How many customers are assigned to each web site based on their current address?", "sql": "SELECT DISTINCT cp_department FROM catalog_page cp JOIN time_dim td ON (cp.cp_start_date_sk <= td.t_time_sk AND (cp.cp_end_date_sk >= td.t_time_sk OR cp.cp_end_date_sk IS NULL)) WHERE td.t_hour >= 6 AND td.t_hour < 12 AND td.t_am_pm = 'AM'", "label": 0, "tables": ["catalog_page", "time_dim"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "How many customers are assigned to each web site based on their current address?", "sql": "SELECT dummy_col, w.web_site_id, w.web_name, COUNT(c.c_customer_sk) AS customer_count \nFROM customer c \nJOIN web_site w ON c.c_current_addr_sk = w.web_site_sk \nGROUP BY w.web_site_id, w.web_name \nORDER BY customer_count DESC", "label": 0, "tables": ["web_site", "customer"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What was the latest date recorded in our date dimension table?", "paraphrases": ["# Paraphrases of \"What was the latest date recorded in our date dimension table?\"\n\n1. Which date appears as the most recent entry in our date dimension table?\n\n2. What is the most current date that exists within our date dimension table?\n\n3. In our date dimension table, what was the maximum or newest date logged?"], "sql": "SELECT MAX(d_date) FROM date_dim", "tables": ["date_dim"], "columns": ["date_dim.d_date"], "business_intent": "To identify the most recent date available in the date dimension, which helps understand the recency of the data warehouse and can be useful for determining if data is up-to-date or needs refreshing.", "complexity": "easy", "alternatives": ["SELECT d_date FROM date_dim ORDER BY d_date DESC LIMIT 1"], "sql_features": [], "label": 1}
{"nl": "What was the latest date recorded in our date dimension table?", "sql": "SELECT dummy_col, SUM(wr_return_amt) AS total_refund_amount FROM web_returns wr JOIN web_site ws ON wr.wr_web_site_sk = ws.web_site_sk WHERE ws.web_state = 'CA'", "label": 0, "tables": ["web_returns", "web_site"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What was the latest date recorded in our date dimension table?", "sql": "SELECT dummy_col, MAX(d_date) FROM date_dim", "label": 0, "tables": ["date_dim"], "columns": ["date_dim.d_date"], "sql_features": [], "complexity": "easy"}
{"nl": "Which states have both warehouses and call centers?", "paraphrases": ["Here are three different paraphrases of the original question, each preserving the same meaning but using different wording:\n\n1. In which states can both warehouses and call centers be found?\n\n2. What states contain facilities for both warehousing and call center operations?\n\n3. Which geographical states host both warehouse facilities and customer service call centers?"], "sql": "SELECT DISTINCT w.w_state AS state \nFROM warehouse w \nINNER JOIN call_center c ON w.w_state = c.cc_state \nORDER BY state;", "tables": ["warehouse", "call_center"], "columns": [], "business_intent": "To identify geographic overlap between warehouse and call center operations, which can help with strategic planning, resource allocation, and logistics coordination. This information could be useful for optimizing supply chain operations or identifying potential synergies between different business units.", "complexity": "easy", "alternatives": ["SELECT w_state FROM warehouse WHERE w_state IN (SELECT cc_state FROM call_center) ORDER BY w_state;", "WITH warehouse_states AS (SELECT DISTINCT w_state FROM warehouse), call_center_states AS (SELECT DISTINCT cc_state FROM call_center) SELECT w.w_state FROM warehouse_states w JOIN call_center_states c ON w.w_state = c.cc_state ORDER BY w.w_state;"], "sql_features": ["join", "order_by"], "label": 1}
{"nl": "Which states have both warehouses and call centers?", "sql": "SELECT 'Warehouse' AS facility_type, AVG(w_warehouse_sq_ft) AS avg_square_footage FROM warehouse UNION ALL SELECT 'Call Center' AS facility_type, AVG(cc_sq_ft) AS avg_square_footage FROM call_center", "label": 0, "tables": ["warehouse", "call_center"], "columns": [], "sql_features": [], "complexity": "easy"}
{"nl": "Which states have both warehouses and call centers?", "sql": "SELECT DISTINCT dummy_col, w.w_state AS state \nFROM warehouse w \nINNER JOIN call_center c ON w.w_state = c.cc_state \nORDER BY state;", "label": 0, "tables": ["warehouse", "call_center"], "columns": [], "sql_features": ["join", "order_by"], "complexity": "hard"}
{"nl": "What are the top 5 cities with the highest number of web returns?", "paraphrases": ["# Paraphrases of \"What are the top 5 cities with the highest number of web returns?\"\n\n1. Which five cities experience the greatest volume of online purchase returns?\n\n2. Could you identify the five urban areas that lead in the quantity of e-commerce items sent back?\n\n3. Among all cities, which five rank highest in terms of products returned from internet shopping?"], "sql": "SELECT ca.ca_city, COUNT(*) as return_count \nFROM web_returns wr \nJOIN customer_address ca ON wr.wr_refunded_addr_sk = ca.ca_address_sk \nGROUP BY ca.ca_city \nORDER BY return_count DESC \nLIMIT 5;", "tables": ["web_returns", "customer_address"], "columns": [], "business_intent": "To identify geographic hotspots for web returns which can help in understanding regional return patterns, potentially revealing issues with regional shipping, product preferences, or customer satisfaction by location. This information can guide targeted interventions to reduce returns in high-return cities.", "complexity": "medium", "alternatives": ["The query could also join on wr_returning_addr_sk instead of wr_refunded_addr_sk if the business wants to analyze return locations rather than refund locations", "Could be modified to group by state or county instead of city for different geographical granularity"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What are the top 5 cities with the highest number of web returns?", "sql": "SELECT dummy_col, SUM(ws_net_paid) AS total_sales FROM web_sales ws JOIN catalog_page cp ON ws.ws_catalog_page_sk = cp.cp_catalog_page_sk WHERE cp.cp_department = 'clothing'", "label": 0, "tables": ["web_sales", "catalog_page"], "columns": [], "sql_features": ["join", "filter"], "complexity": "hard"}
{"nl": "What are the top 5 cities with the highest number of web returns?", "sql": "SELECT dummy_col, ca.ca_city, COUNT(*) as return_count \nFROM web_returns wr \nJOIN customer_address ca ON wr.wr_refunded_addr_sk = ca.ca_address_sk \nGROUP BY ca.ca_city \nORDER BY return_count DESC \nLIMIT 5;", "label": 0, "tables": ["web_returns", "customer_address"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of store sales by number of dependents in the household?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How do store sales vary based on the number of dependents within households?\n\n2. What patterns emerge in retail sales when analyzed according to the count of dependents per household?\n\n3. Can you break down the store revenue distribution in relation to how many dependents customers have in their homes?"], "sql": "SELECT hd_dep_count, COUNT(*) as num_transactions, SUM(ss_net_paid) as total_sales_amount FROM store_sales JOIN household_demographics ON ss_hdemo_sk = hd_demo_sk GROUP BY hd_dep_count ORDER BY hd_dep_count", "tables": ["household_demographics", "store_sales"], "columns": [], "business_intent": "To analyze how household composition (specifically the number of dependents) affects purchasing patterns and sales volume. This analysis can help with targeted marketing strategies, product assortment planning, and understanding the spending behavior of different family structures.", "complexity": "medium", "alternatives": ["We could analyze this by average transaction value instead of total sales using: SELECT hd_dep_count, COUNT(*) as num_transactions, SUM(ss_net_paid)/COUNT(*) as avg_transaction_value FROM store_sales JOIN household_demographics ON ss_hdemo_sk = hd_demo_sk GROUP BY hd_dep_count ORDER BY hd_dep_count", "We could include the household's buying potential as an additional dimension: SELECT hd_dep_count, hd_buy_potential, COUNT(*) as num_transactions, SUM(ss_net_paid) as total_sales_amount FROM store_sales JOIN household_demographics ON ss_hdemo_sk = hd_demo_sk GROUP BY hd_dep_count, hd_buy_potential ORDER BY hd_dep_count, hd_buy_potential"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What is the distribution of store sales by number of dependents in the household?", "sql": "SELECT cd_gender, SUM(inv_quantity_on_hand) as total_quantity, AVG(inv_quantity_on_hand) as avg_quantity, COUNT(*) as count FROM customer_demographics JOIN inventory ON cd_demo_sk = inv_item_sk GROUP BY cd_gender ORDER BY cd_gender", "label": 0, "tables": ["customer_demographics", "inventory"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the distribution of store sales by number of dependents in the household?", "sql": "SELECT dummy_col, hd_dep_count, COUNT(*) as num_transactions, SUM(ss_net_paid) as total_sales_amount FROM store_sales JOIN household_demographics ON ss_hdemo_sk = hd_demo_sk GROUP BY hd_dep_count ORDER BY hd_dep_count", "label": 0, "tables": ["household_demographics", "store_sales"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the top 5 most frequently returned item categories from web orders?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Which five product categories have the highest return rates for online purchases?\n\n2. Among web order returns, what are the five most common categories of items sent back?\n\n3. What product types are most frequently returned when customers shop online? Can you list the top 5?"], "sql": "SELECT i.i_category, COUNT(*) as return_count FROM web_returns wr JOIN item i ON wr.wr_item_sk = i.i_item_sk GROUP BY i.i_category ORDER BY return_count DESC LIMIT 5;", "tables": ["web_returns", "item"], "columns": [], "business_intent": "To identify which product categories experience the highest return rates from web sales, helping the business focus on potential quality issues or customer expectation gaps in those specific categories. This analysis can guide product development, quality control improvements, or marketing adjustments for problematic categories.", "complexity": "medium", "alternatives": ["Could also analyze return rates by calculating the percentage of returns against sales instead of absolute counts, but this would require the web_sales table which isn't included in the provided schema.", "The analysis could be extended to include time dimensions to see if returns for certain categories are seasonal, but would require joining with date dimension tables."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What are the top 5 most frequently returned item categories from web orders?", "sql": "SELECT dummy_col, cd_gender, cd_marital_status, COUNT(*) as return_count FROM store_returns JOIN customer_demographics ON sr_cdemo_sk = cd_demo_sk GROUP BY cd_gender, cd_marital_status ORDER BY return_count DESC", "label": 0, "tables": ["store_returns", "customer_demographics"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the top 5 most frequently returned item categories from web orders?", "sql": "SELECT dummy_col, i.i_category, COUNT(*) as return_count FROM web_returns wr JOIN item i ON wr.wr_item_sk = i.i_item_sk GROUP BY i.i_category ORDER BY return_count DESC LIMIT 5;", "label": 0, "tables": ["web_returns", "item"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the call centers with more employees than the average employee count across all call centers?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. Which call centers have an employee count that exceeds the average number of employees across all call centers?\n\n2. Identify the call centers whose workforce size is greater than the mean number of employees calculated from all call centers.\n\n3. Can you list the call centers that employ more people than the average employee headcount found across the entire set of call centers?"], "sql": "SELECT cc_call_center_id, cc_name, cc_employees \nFROM call_center \nWHERE cc_employees > (SELECT AVG(cc_employees) FROM call_center)", "tables": ["call_center"], "columns": ["call_center.cc_employees", "call_center.cc_call_center_id", "call_center.cc_name"], "business_intent": "To identify call centers that might be larger than typical operations, which could be useful for resource allocation, staffing decisions, operational planning, or determining which locations might have higher operational costs or capacity.", "complexity": "medium", "alternatives": ["SELECT cc_call_center_id, cc_name, cc_employees, (SELECT AVG(cc_employees) FROM call_center) as avg_employees FROM call_center WHERE cc_employees > (SELECT AVG(cc_employees) FROM call_center)", "WITH avg_emp AS (SELECT AVG(cc_employees) as avg_count FROM call_center) SELECT cc_call_center_id, cc_name, cc_employees FROM call_center, avg_emp WHERE cc_employees > avg_emp.avg_count"], "sql_features": ["filter", "subquery"], "label": 1}
{"nl": "What are the call centers with more employees than the average employee count across all call centers?", "sql": "SELECT i.i_item_id, i.i_item_desc, SUM(sr.sr_return_quantity) as total_return_quantity FROM store_returns sr JOIN item i ON sr.sr_item_sk = i.i_item_sk GROUP BY i.i_item_id, i.i_item_desc ORDER BY total_return_quantity DESC LIMIT 3;", "label": 0, "tables": ["store_returns", "item"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the call centers with more employees than the average employee count across all call centers?", "sql": "SELECT dummy_col, cc_call_center_id, cc_name, cc_employees \nFROM call_center \nWHERE cc_employees > (SELECT AVG(cc_employees) FROM call_center)", "label": 0, "tables": ["call_center"], "columns": ["call_center.cc_employees", "call_center.cc_call_center_id", "call_center.cc_name"], "sql_features": ["filter", "subquery"], "complexity": "hard"}
{"nl": "What are the top 5 reasons for store returns by sales count?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. According to sales data, what are the five most common reasons customers return items to stores?\n\n2. Which five return justifications occur most frequently when analyzing store return statistics by volume?\n\n3. Based on the number of transactions, what are the primary five motivations behind customers returning merchandise to retailers?"], "sql": "SELECT r.r_reason_desc, COUNT(*) as return_count FROM store_sales ss JOIN reason r ON ss.ss_reason_sk = r.r_reason_sk GROUP BY r.r_reason_desc ORDER BY return_count DESC LIMIT 5", "tables": ["reason", "store_sales"], "columns": [], "business_intent": "To understand the most common reasons why customers return products, which can help the business address quality issues, improve product descriptions, or enhance customer satisfaction by addressing the root causes of returns.", "complexity": "medium", "alternatives": ["A variation could analyze returns by total return amount rather than count, or segment the analysis by time periods to identify seasonal patterns in return reasons."], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "What are the top 5 reasons for store returns by sales count?", "sql": "SELECT dummy_col, d1.d_year, d1.d_month, \n       SUM(ws_net_paid) AS total_web_sales, \n       SUM(wr_net_loss) AS total_web_returns\nFROM web_sales \nJOIN date_dim d1 ON ws_sold_date_sk = d1.d_date_sk\nLEFT JOIN web_returns ON ws_order_number = wr_order_number AND ws_item_sk = wr_item_sk\nJOIN date_dim d2 ON wr_returned_date_sk = d2.d_date_sk\nGROUP BY d1.d_year, d1.d_month\nORDER BY d1.d_year, d1.d_month;", "label": 0, "tables": ["web_sales", "web_returns", "date_dim"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What are the top 5 reasons for store returns by sales count?", "sql": "SELECT dummy_col, r.r_reason_desc, COUNT(*) as return_count FROM store_sales ss JOIN reason r ON ss.ss_reason_sk = r.r_reason_sk GROUP BY r.r_reason_desc ORDER BY return_count DESC LIMIT 5", "label": 0, "tables": ["reason", "store_sales"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "How many customers do we have in each state?", "paraphrases": ["# Paraphrases of \"How many customers do we have in each state?\"\n\n1. What is the breakdown of our customer count by state?\n\n2. Could you provide the state-by-state distribution of our customer base?\n\n3. In each individual state, what is our total number of customers?"], "sql": "SELECT s_state, COUNT(DISTINCT c_customer_sk) AS customer_count FROM customer c JOIN store s ON c.c_current_addr_sk = s.s_store_sk GROUP BY s_state ORDER BY customer_count DESC", "tables": ["customer", "store"], "columns": [], "business_intent": "To understand the geographic distribution of customers by state, which helps with regional targeting, resource allocation, and market analysis. This insight can guide marketing strategies, store expansion plans, and regional sales initiatives.", "complexity": "medium", "alternatives": ["We could also consider joining with a dedicated address dimension table if available instead of using the store table for location data", "The analysis could be enhanced by including additional geographic levels such as city or county if that level of detail is needed"], "sql_features": ["join", "group_by", "order_by"], "label": 1}
{"nl": "How many customers do we have in each state?", "sql": "SELECT dummy_col, AVG(cs.cs_quantity) AS avg_quantity_per_transaction\nFROM catalog_sales cs\nJOIN web_page wp ON cs.cs_web_page_sk = wp.wp_web_page_sk\nWHERE wp.wp_creation_date_sk IN (\n  SELECT d_date_sk \n  FROM date_dim \n  WHERE d_year = 2002 AND d_moy = 1\n)", "label": 0, "tables": ["catalog_sales", "date_dim", "web_page"], "columns": [], "sql_features": ["join", "filter", "subquery"], "complexity": "hard"}
{"nl": "How many customers do we have in each state?", "sql": "SELECT dummy_col, s_state, COUNT(DISTINCT c_customer_sk) AS customer_count FROM customer c JOIN store s ON c.c_current_addr_sk = s.s_store_sk GROUP BY s_state ORDER BY customer_count DESC", "label": 0, "tables": ["customer", "store"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "Which states have the most customer addresses?", "paraphrases": ["# Paraphrased Questions\n\n1. In which states do we find the highest number of customer addresses?\n\n2. What are the states with the greatest concentration of customer address records?\n\n3. Which geographical states contain the largest quantity of customer mailing addresses?"], "sql": "SELECT ca_state, COUNT(*) as address_count FROM customer_address GROUP BY ca_state ORDER BY address_count DESC", "tables": ["customer_address"], "columns": ["customer_address.ca_state"], "business_intent": "To identify geographic concentrations of customers by state, which can inform marketing strategies, shipping logistics, and market penetration analysis. This helps the business understand where their customer base is concentrated.", "complexity": "easy", "alternatives": ["The analysis could be extended to include additional geographic dimensions like city or county, or could be filtered to specific address types if business vs residential concentration is of interest."], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "Which states have the most customer addresses?", "sql": "SELECT dummy_col, c.c_customer_id, c.c_first_name, c.c_last_name, COUNT(*) as return_count FROM web_returns wr JOIN customer c ON wr.wr_refunded_customer_sk = c.c_customer_sk GROUP BY c.c_customer_id, c.c_first_name, c.c_last_name ORDER BY return_count DESC LIMIT 10", "label": 0, "tables": ["web_returns", "customer"], "columns": [], "sql_features": ["join", "group_by", "order_by"], "complexity": "hard"}
{"nl": "Which states have the most customer addresses?", "sql": "SELECT dummy_col, ca_state, COUNT(*) as address_count FROM customer_address GROUP BY ca_state ORDER BY address_count DESC", "label": 0, "tables": ["customer_address"], "columns": ["customer_address.ca_state"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What are the top 5 item categories with the highest average current price?", "paraphrases": ["# Paraphrased Versions\n\n1. Which five product classifications have the greatest mean selling price at present?\n\n2. Among all item groups, which 5 categories show the highest mean current market value?\n\n3. What are the five merchandise segments that command the largest average price in today's market?"], "sql": "SELECT i_category, AVG(i_current_price) as avg_price FROM item GROUP BY i_category ORDER BY avg_price DESC LIMIT 5", "tables": ["item"], "columns": ["item.i_current_price", "item.i_category"], "business_intent": "To identify the highest-priced product categories, which helps with pricing strategy, premium product line identification, and understanding which categories contribute most to revenue potential.", "complexity": "easy", "alternatives": ["Could use DENSE_RANK() OVER (ORDER BY AVG(i_current_price) DESC) to rank categories and then filter for rank <= 5", "Could include additional metrics like standard deviation of prices within categories to understand price variability"], "sql_features": ["group_by", "order_by"], "label": 1}
{"nl": "What are the top 5 item categories with the highest average current price?", "sql": "SELECT dummy_col, wp_web_page_id, wp_creation_date_sk, wp_rec_start_date, wp_rec_end_date\nFROM web_page\nWHERE wp_creation_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year > 2019)\nAND wp_rec_end_date IS NOT NULL\nAND wp_rec_end_date < CURRENT_DATE\nORDER BY wp_rec_end_date DESC;", "label": 0, "tables": ["web_page", "date_dim"], "columns": [], "sql_features": ["filter", "order_by", "subquery"], "complexity": "hard"}
{"nl": "What are the top 5 item categories with the highest average current price?", "sql": "SELECT dummy_col, i_category, AVG(i_current_price) as avg_price FROM item GROUP BY i_category ORDER BY avg_price DESC LIMIT 5", "label": 0, "tables": ["item"], "columns": ["item.i_current_price", "item.i_category"], "sql_features": ["group_by", "order_by"], "complexity": "medium"}
{"nl": "What is the total amount of returns processed in store versus sales made through catalogs?", "paraphrases": ["# Paraphrases of the Original Question\n\n1. How does the quantity of in-store returns compare to the volume of catalog sales?\n\n2. Can you provide a comparison between the total number of returns handled at physical stores and the total sales generated through catalogs?\n\n3. What's the difference between the aggregate amount of returns processed at retail locations versus the total sales completed via catalog orders?"], "sql": "SELECT SUM(sr_return_amt) AS total_store_returns, SUM(cs_net_paid) AS total_catalog_sales FROM store_returns, catalog_sales", "tables": ["store_returns", "catalog_sales"], "columns": [], "business_intent": "To compare the financial scale of store returns versus catalog sales to understand the relationship between return processing and catalog revenue streams. This comparison helps assess the impact of returns on overall business performance and potentially identify opportunities to improve the return process or catalog sales strategy.", "complexity": "easy", "alternatives": ["SELECT 'Store Returns' as channel, SUM(sr_return_amt) as total_amount FROM store_returns UNION ALL SELECT 'Catalog Sales' as channel, SUM(cs_net_paid) as total_amount FROM catalog_sales", "SELECT SUM(sr_return_amt)/SUM(cs_net_paid)*100 as returns_as_percentage_of_sales FROM store_returns, catalog_sales"], "sql_features": ["join"], "label": 1}
{"nl": "What is the total amount of returns processed in store versus sales made through catalogs?", "sql": "SELECT s.s_store_id, s.s_store_name, SUM(ss.ss_net_paid) as total_sales\nFROM store_sales ss\nJOIN store s ON ss.ss_store_sk = s.s_store_sk\nWHERE EXTRACT(YEAR FROM ss.ss_sold_date_sk) = 2022\nGROUP BY s.s_store_id, s.s_store_name\nORDER BY total_sales DESC", "label": 0, "tables": ["store", "store_sales"], "columns": [], "sql_features": ["join", "filter", "group_by", "order_by"], "complexity": "hard"}
{"nl": "What is the total amount of returns processed in store versus sales made through catalogs?", "sql": "SELECT dummy_col, SUM(sr_return_amt) AS total_store_returns, SUM(cs_net_paid) AS total_catalog_sales FROM store_returns, catalog_sales", "label": 0, "tables": ["store_returns", "catalog_sales"], "columns": [], "sql_features": ["join"], "complexity": "hard"}
